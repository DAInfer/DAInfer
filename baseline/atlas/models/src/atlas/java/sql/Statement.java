package atlas.java.sql;
public abstract interface Statement extends atlas.java.sql.Wrapper, atlas.java.lang.AutoCloseable {
	public abstract void cancel();
	public abstract java.sql.Connection getConnection();
	public abstract java.sql.SQLWarning getWarnings();
	public abstract java.sql.ResultSet getResultSet();
	public abstract void clearWarnings();
	public abstract void setFetchDirection(int p0);
	public abstract int getFetchDirection();
	public abstract void setFetchSize(int p0);
	public abstract int getFetchSize();
	public abstract java.sql.ResultSet executeQuery(java.lang.String p0);
	public abstract int executeUpdate(java.lang.String p0);
	public abstract int executeUpdate(java.lang.String p0, java.lang.String[] p1);
	public abstract int executeUpdate(java.lang.String p0, int[] p1);
	public abstract int executeUpdate(java.lang.String p0, int p1);
	public abstract void addBatch(java.lang.String p0);
	public abstract int getMaxFieldSize();
	public abstract void setMaxFieldSize(int p0);
	public abstract int getMaxRows();
	public abstract void setMaxRows(int p0);
	public abstract void setEscapeProcessing(boolean p0);
	public abstract int getQueryTimeout();
	public abstract void setQueryTimeout(int p0);
	public abstract void setCursorName(java.lang.String p0);
	public abstract int getUpdateCount();
	public abstract boolean getMoreResults(int p0);
	public abstract boolean getMoreResults();
	public abstract int getResultSetConcurrency();
	public abstract int getResultSetType();
	public abstract void clearBatch();
	public abstract int[] executeBatch();
	public abstract java.sql.ResultSet getGeneratedKeys();
	public abstract int getResultSetHoldability();
	public abstract void setPoolable(boolean p0);
	public abstract boolean isPoolable();
	public abstract void closeOnCompletion();
	public abstract boolean isCloseOnCompletion();
	public abstract boolean isClosed();
	public abstract boolean execute(java.lang.String p0, int[] p1);
	public abstract boolean execute(java.lang.String p0);
	public abstract boolean execute(java.lang.String p0, int p1);
	public abstract boolean execute(java.lang.String p0, java.lang.String[] p1);
	public abstract void close();
}
