{
    "com.github.javaparser.ast.expr.ArrayAccessExpr": "There are no aliasing specifications for the given Java class.",
    "com.github.javaparser.ast.expr.Expression": "The aliasing specifications are not given in the JSON file.",
    "com.github.javaparser.ast.Node": "When the two methods have the same value of the first parameter, the return value of \"Optional findCompilationUnit()\" may be aliased with the first parameter of \"void tryAddImportToParentCompilationUnit(Class clazz)\" if the method findCompilationUnit is invoked after the method tryAddImportToParentCompilationUnit.\n\nThe return value of \"Optional getParentNode()\" may be aliased with the parameter of \"void setAsParentNodeOf(Node childNode)\" if the method getParentNode is invoked after the method setAsParentNodeOf.\n\nThe return value of \"Optional getParentNode()\" may be aliased with the parameter of \"void setAsParentNodeOf(NodeList list)\" if the method getParentNode is invoked after the method setAsParentNodeOf.\n\nThe return value of \"boolean remove(Node node)\" may be aliased with the parameter of \"void setAsParentNodeOf(Node childNode)\" if the method remove is invoked after the method setAsParentNodeOf.\n\nThe return value of \"boolean remove(Node node)\" may be aliased with the parameter of \"void setAsParentNodeOf(NodeList list)\" if the method remove is invoked after the method setAsParentNodeOf.\n\nThe return value of \"boolean replace(Node node, Node replacementNode)\" may be aliased with the first parameter of \"void setAsParentNodeOf(Node childNode)\" if the method replace is invoked after the method setAsParentNodeOf.\n\nThe return value of \"boolean replace(Node node, Node replacementNode)\" may be aliased with the first parameter of \"void setAsParentNodeOf(NodeList list)\" if the method replace is invoked after the method setAsParentNodeOf.",
    "Jama.Matrix": "When the method \"Matrix arrayLeftDivide(Matrix B)\" is invoked after the method \"Matrix arrayLeftDivideEquals(Matrix B)\" upon the same object, the return value of \"Matrix arrayLeftDivide(Matrix B)\" may be aliased with the k-th parameter of \"Matrix arrayLeftDivideEquals(Matrix B)\".\n\nWhen the method \"Matrix arrayRightDivide(Matrix B)\" is invoked after the method \"Matrix arrayRightDivideEquals(Matrix B)\" upon the same object, the return value of \"Matrix arrayRightDivide(Matrix B)\" may be aliased with the k-th parameter of \"Matrix arrayRightDivideEquals(Matrix B)\".\n\nWhen the method \"Matrix arrayTimes(Matrix B)\" is invoked after the method \"Matrix arrayTimesEquals(Matrix B)\" upon the same object, the return value of \"Matrix arrayTimes(Matrix B)\" may be aliased with the k-th parameter of \"Matrix arrayTimesEquals(Matrix B)\".\n\nWhen the method \"Matrix getMatrix(int[] r, int[] c)\" is invoked after the method \"void setMatrix(int[] r, int[] c, Matrix X)\" upon the same object, the return value of \"Matrix getMatrix(int[] r, int[] c)\" may be aliased with the third parameter of \"void setMatrix(int[] r, int[] c, Matrix X)\".\n\nWhen the method \"Matrix getMatrix(int[] r, int j0, int j1)\" is invoked after the method \"void setMatrix(int[] r, int j0, int j1, Matrix X)\" upon the same object, the return value of \"Matrix getMatrix(int[] r, int j0, int j1)\" may be aliased with the third parameter of \"void setMatrix(int[] r, int j0, int j1, Matrix X)\".\n\nWhen the method \"Matrix getMatrix(int i0, int i1, int[] c)\" is invoked after the method \"void setMatrix(int i0, int i1, int[] c, Matrix X)\" upon the same object, the return value of \"Matrix getMatrix(int i0, int i1, int[] c)\" may be aliased with the third parameter of \"void setMatrix(int i0, int i1, int[] c, Matrix X)\".\n\nWhen the method \"Matrix getMatrix(int i0, int i1, int j0, int j1)\" is invoked after the method \"void setMatrix(int i0, int i1, int j0, int j1, Matrix X)\" upon the same object, the return value of \"Matrix getMatrix(int i0, int i1, int j0, int j1)\" may be aliased with the fifth parameter of \"void setMatrix(int i0, int i1, int j0, int j1, Matrix X)\".\n\nWhen the method \"Matrix solve(Matrix B)\" is invoked after the method \"Matrix solveTranspose(Matrix B)\" upon the same object, the return value of \"Matrix solve(Matrix B)\" may be aliased with the first parameter of \"Matrix solveTranspose(Matrix B)\".",
    "android.content.ComponentName": "The aliasing specifications for the given Java class \"ComponentName\" are:\n\n- When the method \"ComponentName clone()\" is invoked after the method \"ComponentName createRelative(String pkg, String cls)\", the return value of \"ComponentName clone()\" may be aliased with both the second parameters of \"ComponentName createRelative(String pkg, String cls)\" and \"ComponentName createRelative(Context pkg, String cls)\".\n- When the method \"boolean equals(Object obj)\" is invoked after the method \"ComponentName clone()\", the return value of \"boolean equals(Object obj)\" may be aliased with the return value of \"ComponentName clone()\".\n- When the method \"String flattenToShortString()\" is invoked after the method \"String flattenToString()\", the return value of \"String flattenToShortString()\" may be aliased with the return value of \"String flattenToString()\".\n- When the method \"String getShortClassName()\" is invoked after the method \"String flattenToString()\", the return value of \"String getShortClassName()\" may be aliased with the return value of \"String flattenToString()\".\n- When the method \"ComponentName readFromParcel(Parcel in)\" is invoked after the method \"void writeToParcel(ComponentName c, Parcel out)\", the return value of \"ComponentName readFromParcel(Parcel in)\" may be aliased with the first parameter of \"void writeToParcel(ComponentName c, Parcel out)\".\n- When the method \"void writeToParcel(ComponentName c, Parcel out)\" is invoked after the method \"ComponentName unflattenFromString(String str)\", the first parameter of \"void writeToParcel(ComponentName c, Parcel out)\" may be aliased with the return value of \"ComponentName unflattenFromString(String str)\".\n- When the method \"void writeToParcel(Parcel out, int flags)\" is invoked after the method \"ComponentName clone()\", the return value of \"ComponentName clone()\" may be aliased with the first parameter of \"void writeToParcel(Parcel out, int flags)\".",
    "android.content.Intent": "When the method \"Intent addCategory(String category)\" is invoked after the method \"Intent setPackage(String packageName)\", the return value of \"Intent addCategory(String category)\" may be aliased with the first parameter of \"Intent setPackage(String packageName)\".\n\nWhen the method \"Intent addFlags(int flags)\" is invoked after the method \"Intent setFlags(int flags)\", the return value of \"Intent addFlags(int flags)\" may be aliased with the first parameter of \"Intent setFlags(int flags)\".\n\nWhen the method \"Intent cloneFilter()\" is invoked after any method that sets the action, data, type, component, and categories of the Intent, the return value of \"Intent cloneFilter()\" may be aliased with the first parameter of \"int fillIn(Intent other, int flags)\".\n\nWhen the method \"Intent createChooser(Intent target, CharSequence title, IntentSender sender)\" is invoked after the method \"Intent createChooser(Intent target, CharSequence title)\", the return value of \"Intent createChooser(Intent target, CharSequence title, IntentSender sender)\" may be aliased with the first and second parameters of \"Intent createChooser(Intent target, CharSequence title)\".\n\nWhen the method \"int fillIn(Intent other, int flags)\" is invoked after any method that sets the action, data, type, component, and categories of the Intent, the return value of \"int fillIn(Intent other, int flags)\" may be aliased with the first parameter of \"Intent cloneFilter()\".\n\nWhen the method \"int filterHashCode()\" is invoked after the method \"boolean filterEquals(Intent other)\", the return value of \"int filterHashCode()\" may be aliased with the first parameter of \"boolean filterEquals(Intent other)\".\n\nWhen the method \"boolean[] getBooleanArrayExtra(String name)\" is invoked after the method \"Intent putExtra(String name, boolean[] value)\", the return value of \"boolean[] getBooleanArrayExtra(String name)\" may be aliased with the second parameter of \"Intent putExtra(String name, boolean[] value)\".\n\nWhen the method \"boolean getBooleanExtra(String name, boolean defaultValue)\" is invoked after the method \"Intent putExtra(String name, boolean value)\", the return value of \"boolean getBooleanExtra(String name, boolean defaultValue)\" may be aliased with the second parameter of \"Intent putExtra(String name, boolean value)\".\n\nWhen the method \"Bundle getBundleExtra(String name)\" is invoked after the method \"Intent putExtra(String name, Bundle value)\", the return value of \"Bundle getBundleExtra(String name)\" may be aliased with the second parameter of \"Intent putExtra(String name, Bundle value)\".\n\nWhen the method \"byte[] getByteArrayExtra(String name)\" is",
    "android.content.IntentFilter": "When the method \"Iterator actionsIterator()\" is invoked after the method \"void addAction(String action)\", the return value of \"Iterator actionsIterator()\" may be aliased with the parameter of \"void addAction(String action)\".\n\nWhen the method \"Iterator authoritiesIterator()\" is invoked after the method \"void addDataAuthority(String host, String port)\", the return value of \"Iterator authoritiesIterator()\" may be aliased with the parameter of \"void addDataAuthority(String host, String port)\".\n\nWhen the method \"Iterator categoriesIterator()\" is invoked after the method \"void addCategory(String category)\", the return value of \"Iterator categoriesIterator()\" may be aliased with the parameter of \"void addCategory(String category)\".\n\nWhen the method \"Iterator pathsIterator()\" is invoked after the method \"void addDataPath(String path, int type)\", the return value of \"Iterator pathsIterator()\" may be aliased with the parameter of \"void addDataPath(String path, int type)\".\n\nWhen the method \"Iterator schemesIterator()\" is invoked after the method \"void addDataScheme(String scheme)\", the return value of \"Iterator schemesIterator()\" may be aliased with the parameter of \"void addDataScheme(String scheme)\".\n\nWhen the method \"Iterator schemeSpecificPartsIterator()\" is invoked after the method \"void addDataSchemeSpecificPart(String ssp, int type)\", the return value of \"Iterator schemeSpecificPartsIterator()\" may be aliased with the parameter of \"void addDataSchemeSpecificPart(String ssp, int type)\".\n\nWhen the method \"Iterator typesIterator()\" is invoked after the method \"void addDataType(String type)\", the return value of \"Iterator typesIterator()\" may be aliased with the parameter of \"void addDataType(String type)\".",
    "android.content.pm.PackageManager": "(<class 'openai.error.InvalidRequestError'>, InvalidRequestError(message=\"This model's maximum context length is 4097 tokens. However, your messages resulted in 5498 tokens. Please reduce the length of the messages.\", param='messages', code='context_length_exceeded', http_status=400, request_id=None), <traceback object at 0x118b42b40>)",
    "android.content.res.TypedArray": "When the method \"getColor(int index, int defValue)\" is invoked after the method \"getColorStateList(int index)\", the return value of \"getColor(int index, int defValue)\" may be aliased with the first parameter of \"getColorStateList(int index)\".\n\nWhen the method \"getDimensionPixelOffset(int index, int defValue)\" is invoked after the method \"getDimension(int index, float defValue)\", the return value of \"getDimension(int index, float defValue)\" may be aliased with the first parameter of \"getDimensionPixelOffset(int index, int defValue)\".\n\nWhen the method \"getDimensionPixelSize(int index, int defValue)\" is invoked after the method \"getDimension(int index, float defValue)\", the return value of \"getDimension(int index, float defValue)\" may be aliased with the first parameter of \"getDimensionPixelSize(int index, int defValue)\".\n\nWhen the method \"getInteger(int index, int defValue)\" is invoked after the method \"getInt(int index, int defValue)\", the return value of \"getInt(int index, int defValue)\" may be aliased with the first parameter of \"getInteger(int index, int defValue)\".\n\nWhen the method \"getLayoutDimension(int index, int defValue)\" is invoked after the method \"getDimensionPixelSize(int index, int defValue)\", the return value of \"getDimensionPixelSize(int index, int defValue)\" may be aliased with the first parameter of \"getLayoutDimension(int index, int defValue)\".\n\nWhen the method \"getLayoutDimension(int index, String name)\" is invoked after the method \"getDimensionPixelSize(int index, int defValue)\", the return value of \"getDimensionPixelSize(int index, int defValue)\" may be aliased with the first parameter of \"getLayoutDimension(int index, String name)\".\n\nWhen the method \"getNonResourceString(int index)\" is invoked after the method \"getValue(int index, TypedValue outValue)\", the return value of \"getValue(int index, TypedValue outValue)\" may be aliased with the second parameter of \"getNonResourceString(int index)\".\n\nWhen the method \"getResourceId(int index, int defValue)\" is invoked after the method \"getValue(int index, TypedValue outValue)\", the return value of \"getValue(int index, TypedValue outValue)\" may be aliased with the second parameter of \"getResourceId(int index, int defValue)\".\n\nWhen the method \"getString(int index)\" is invoked after the method \"getText(int index)\", the return value of \"getText(int index)\" may be aliased with the first parameter of \"getString(int index)\".\n\nWhen the method \"getValue(int index, TypedValue outValue)\" is invoked after the method \"peekValue(int index)\", the return value of \"peekValue(int index)\" may be aliased with the second parameter of \"getValue(int index, TypedValue outValue)\".",
    "android.graphics.Bitmap": "The aliasing specifications are as follows:\n\n- The return value of \"Bitmap copy(Bitmap.Config config, boolean isMutable)\" may be aliased with the first parameter of \"void setConfig(Bitmap.Config config)\" if the method copy is invoked before the method setConfig.\n- The return value of \"Bitmap createBitmap(Bitmap source, int x, int y, int width, int height)\" may be aliased with the first parameter of \"void setPixels(int[] pixels, int offset, int stride, int x, int y, int width, int height)\" if the method createBitmap is invoked before the method setPixels.\n- The return value of \"Bitmap createBitmap(Bitmap source, int x, int y, int width, int height, Matrix m, boolean filter)\" may be aliased with the first parameter of \"void setPixels(int[] pixels, int offset, int stride, int x, int y, int width, int height)\" if the method createBitmap is invoked before the method setPixels.\n- The return value of \"Bitmap createScaledBitmap(Bitmap src, int dstWidth, int dstHeight, boolean filter)\" may be aliased with the first parameter of \"void setPixels(int[] pixels, int offset, int stride, int x, int y, int width, int height)\" if the method createScaledBitmap is invoked before the method setPixels.\n- The return value of \"Bitmap extractAlpha()\" may be aliased with the first parameter of \"void setPixels(int[] pixels, int offset, int stride, int x, int y, int width, int height)\" if the method extractAlpha is invoked before the method setPixels.\n- The return value of \"Bitmap extractAlpha(Paint paint, int[] offsetXY)\" may be aliased with the first parameter of \"void setPixels(int[] pixels, int offset, int stride, int x, int y, int width, int height)\" if the method extractAlpha is invoked before the method setPixels.\n- The return value of \"Bitmap createBitmap(DisplayMetrics display, int width, int height, Bitmap.Config config, boolean hasAlpha, ColorSpace colorSpace)\" may be aliased with the first parameter of \"void setPixels(int[] pixels, int offset, int stride, int x, int y, int width, int height)\" if the method createBitmap is invoked before the method setPixels.\n- The return value of \"Bitmap createBitmap(DisplayMetrics display, int[] colors, int offset, int stride, int width, int height, Bitmap.Config config)\" may be aliased with the first parameter of \"void setPixels(int[] pixels, int offset, int stride, int x, int y, int width, int height)\" if the method createBitmap is invoked before the method setPixels.\n- The return value of \"Bitmap createBitmap(DisplayMetrics display, int[] colors, int width, int height, Bitmap.Config config)\" may be aliased with the first parameter of \"void setPixels(int[] pixels, int offset, int stride, int x, int y, int width, int height)\" if the method createBitmap is invoked before the method setPixels.\n- The return value of \"Bitmap createBitmap(DisplayMetrics display, int width, int height, Bitmap.Config config)\" may be aliased with the first parameter of \"void setPixels(int[] pixels, int offset, int stride, int x, int y, int width, int height)\" if the method createBitmap is invoked before the method setPixels.\n- The return value of \"Bitmap createBitmap(int[] colors, int offset, int stride, int width, int height, Bitmap.Config config)\" may be aliased with the first parameter of \"void setPixels(int[] pixels, int offset, int stride, int x, int y, int width, int height)\" if the method createBitmap is invoked before the method setPixels.\n- The return value of \"Bitmap createBitmap(Picture source, int width, int height, Bitmap.Config config)\" may be aliased with the first parameter of \"void setPixels(int[] pixels, int offset, int stride, int x, int y, int width, int height)\" if the method createBitmap is invoked before the method setPixels.\n- The return value of \"Bitmap createBitmap(int width, int height, Bitmap.Config config, boolean hasAlpha, ColorSpace colorSpace)\" may be aliased with the first parameter of \"void setPixels(int[] pixels, int offset, int stride, int x, int y, int width, int height)\" if the method createBitmap is invoked before the method setPixels.\n- The return value of \"Bitmap createBitmap(DisplayMetrics display, int width, int height, Bitmap.Config config, boolean hasAlpha)\" may be aliased with the first parameter of \"void setPixels(int[] pixels, int offset, int stride, int x, int y, int width, int height)\" if the method createBitmap is invoked before the method setPixels.\n- The return value of \"Bitmap createBitmap(int width, int height, Bitmap.Config config)\" may be aliased with the first parameter of \"void setPixels(int[] pixels, int offset, int stride, int x, int y, int width, int height)\" if the method createBitmap is invoked before the method setPixels.\n- The return value of \"Bitmap createBitmap(int width, int height, Bitmap.Config config, boolean hasAlpha)\" may be aliased with the first parameter of \"void setPixels(int[] pixels, int offset, int stride, int x, int y, int width, int height)\" if the method createBitmap is invoked before the method setPixels.\n- The return value of \"Bitmap createBitmap(Picture source)\" may be aliased with the first parameter of \"void setPixels(int[] pixels, int offset, int stride, int x, int y, int width, int height)\" if the method createBitmap is invoked before the method setPixels.\n- The return value of \"void copyPixelsFromBuffer(Buffer src)\" may be aliased with the first parameter of \"void setPixels(int[] pixels, int offset, int stride, int x, int y, int width, int height)\" if the method copyPixelsFromBuffer is invoked before the method setPixels.\n- The return value of \"Bitmap createBitmap(int[] colors, int width, int height, Bitmap.Config config)\" may be aliased with the first parameter of \"void setPixels(int[] pixels, int offset, int stride, int x, int y, int width, int height)\" if the method createBitmap is invoked before the method setPixels.\n- The return value of \"void setPixels(int[] pixels, int offset, int stride, int x, int",
    "android.location.Address": "The aliasing specifications are as follows:\n\n- When the method \"void setLatitude(double latitude)\" is invoked after the method \"void setLongitude(double longitude)\" with the same object, the return value of \"double getLatitude()\" may be aliased with the first parameter of \"void setLongitude(double longitude)\".\n- When the method \"void setLongitude(double longitude)\" is invoked after the method \"void setLatitude(double latitude)\" with the same object, the return value of \"double getLongitude()\" may be aliased with the first parameter of \"void setLatitude(double latitude)\".\n- When the method \"void setAddressLine(int index, String line)\" is invoked after the method \"String getAddressLine(int index)\" with the same object and the same value of the first parameter, the return value of \"String getAddressLine(int index)\" may be aliased with the second parameter of \"void setAddressLine(int index, String line)\".\n- When the method \"void setAdminArea(String adminArea)\" is invoked after the method \"String getAdminArea()\" with the same object, the return value of \"String getAdminArea()\" may be aliased with the first parameter of \"void setAdminArea(String adminArea)\".\n- When the method \"void setCountryCode(String countryCode)\" is invoked after the method \"String getCountryCode()\" with the same object, the return value of \"String getCountryCode()\" may be aliased with the first parameter of \"void setCountryCode(String countryCode)\".\n- When the method \"void setCountryName(String countryName)\" is invoked after the method \"String getCountryName()\" with the same object, the return value of \"String getCountryName()\" may be aliased with the first parameter of \"void setCountryName(String countryName)\".\n- When the method \"void setFeatureName(String featureName)\" is invoked after the method \"String getFeatureName()\" with the same object, the return value of \"String getFeatureName()\" may be aliased with the first parameter of \"void setFeatureName(String featureName)\".\n- When the method \"void setLocality(String locality)\" is invoked after the method \"String getLocality()\" with the same object, the return value of \"String getLocality()\" may be aliased with the first parameter of \"void setLocality(String locality)\".\n- When the method \"void setPhone(String phone)\" is invoked after the method \"String getPhone()\" with the same object, the return value of \"String getPhone()\" may be aliased with the first parameter of \"void setPhone(String phone)\".\n- When the method \"void setPostalCode(String postalCode)\" is invoked after the method \"String getPostalCode()\" with the same object, the return value of \"String getPostalCode()\" may be aliased with the first parameter of \"void setPostalCode(String postalCode)\".\n- When the method \"void setPremises(String premises)\" is invoked after the method \"String getPremises()\" with the same object, the return value of \"String getPremises()\" may be aliased with the first parameter of \"void setPremises(String premises)\".\n- When the method \"void setSubAdminArea(String subAdminArea)\" is invoked after the method \"String getSubAdminArea()\" with the same object, the return value of \"String getSubAdminArea()\" may be aliased with the first parameter of \"void setSubAdminArea(String subAdminArea)\".\n- When the method \"void setSubLocality(String sublocality)\" is invoked after the method \"String getSubLocality()\" with the same object, the return value of \"String getSubLocality()\" may be aliased with the first parameter of \"void setSubLocality(String sublocality)\".\n- When the method \"void setSubThoroughfare(String subthoroughfare)\" is invoked after the method \"String getSubThoroughfare()\" with the same object, the return value of \"String getSubThoroughfare()\" may be aliased with the first parameter of \"void setSubThoroughfare(String subthoroughfare)\".\n- When the method \"void setThoroughfare(String thoroughfare)\" is invoked after the method \"String getThoroughfare()\" with the same object, the return value of \"String getThoroughfare()\" may be aliased with the first parameter of \"void setThoroughfare(String thoroughfare)\".",
    "android.location.Location": "When the method \"void set(Location location)\" is invoked after the method \"float bearingTo(Location dest)\" upon the same object, the return value of \"float bearingTo(Location dest)\" may be aliased with the parameter of \"void set(Location location)\".\n\nWhen the method \"void set(Location location)\" is invoked after the method \"float distanceTo(Location dest)\" upon the same object, the return value of \"float distanceTo(Location dest)\" may be aliased with the parameter of \"void set(Location location)\".\n\nWhen the method \"void set(Location location)\" is invoked after the method \"void distanceBetween(double startLatitude, double startLongitude, double endLatitude, double endLongitude, float[] results)\" upon the same object, the element at index 2 of the parameter \"float[] results\" of \"void distanceBetween(double startLatitude, double startLongitude, double endLatitude, double endLongitude, float[] results)\" may be aliased with the parameter of \"void set(Location location)\".\n\nWhen the method \"void set(Location location)\" is invoked after the method \"float getAccuracy()\" upon the same object, the return value of \"float getAccuracy()\" may be aliased with the parameter of \"void set(Location location)\".\n\nWhen the method \"void set(Location location)\" is invoked after the method \"double getAltitude()\" upon the same object, the return value of \"double getAltitude()\" may be aliased with the parameter of \"void set(Location location)\".\n\nWhen the method \"void set(Location location)\" is invoked after the method \"float getBearing()\" upon the same object, the return value of \"float getBearing()\" may be aliased with the parameter of \"void set(Location location)\".\n\nWhen the method \"void set(Location location)\" is invoked after the method \"float getBearingAccuracyDegrees()\" upon the same object, the return value of \"float getBearingAccuracyDegrees()\" may be aliased with the parameter of \"void set(Location location)\".\n\nWhen the method \"void set(Location location)\" is invoked after the method \"float getElapsedRealtimeAgeMillis(long referenceRealtimeMs)\" upon the same object, the return value of \"float getElapsedRealtimeAgeMillis(long referenceRealtimeMs)\" may be aliased with the parameter of \"void set(Location location)\".\n\nWhen the method \"void set(Location location)\" is invoked after the method \"float getElapsedRealtimeAgeMillis()\" upon the same object, the return value of \"float getElapsedRealtimeAgeMillis()\" may be aliased with the parameter of \"void set(Location location)\".\n\nWhen the method \"void set(Location location)\" is invoked after the method \"long getElapsedRealtimeMillis()\" upon the same object, the return value of \"long getElapsedRealtimeMillis()\" may be aliased with the parameter of \"void set(Location location)\".\n\nWhen the method \"void set(Location location)\" is invoked after the method \"long getElapsedRealtimeNanos()\" upon the same object, the return value of \"long getElapsedRealtimeNanos()\" may be aliased with the parameter of \"void set(Location location)\".\n\nWhen the method \"void set(Location location)\" is invoked after the method \"double getElapsedRealtimeUncertaintyNanos()\" upon the same object, the return value of \"double getElapsedRealtimeUncertaintyNanos()\" may be aliased with the parameter of \"void set(Location location)\".\n\nWhen the method \"void set(Location location)\" is invoked after the method \"Bundle getExtras()\" upon the same object, the return value of \"Bundle getExtras()\" may be aliased with the parameter of \"void set(Location location)\".\n\nWhen the method \"void set(Location location)\" is invoked after the method \"double getLatitude()\" upon the same object, the return value of \"double getLatitude()\" may be aliased with the parameter of \"void set(Location location)\".\n\nWhen the method \"void set(Location location)\" is invoked after the method \"double getLongitude()\" upon the same object, the return value of \"double getLongitude()\" may be aliased with the parameter of \"void set(Location location)\".\n\nWhen the method \"void set(Location location)\" is invoked after the method \"float getMslAltitudeAccuracyMeters()\" upon the same object, the return value of \"float getMslAltitudeAccuracyMeters()\" may be aliased with the parameter of \"void set(Location location)\".\n\nWhen the method \"void set(Location location)\" is invoked after the method \"double getMslAltitudeMeters()\" upon the same object, the return value of \"double getMslAltitudeMeters()\" may be aliased with the parameter of \"void set(Location location)\".\n\nWhen the method \"void set(Location location)\" is invoked after the method \"String getProvider()\" upon the same object, the return value of \"String getProvider()\" may be aliased with the parameter of \"void set(Location location)\".\n\nWhen the method \"void set(Location location)\" is invoked after the method \"float getSpeed()\" upon the same object, the return value of \"float getSpeed()\" may be aliased with the parameter of \"void set(Location location)\".\n\nWhen the method \"void set(Location location)\" is invoked after the method \"float getSpeedAccuracyMetersPerSecond()\" upon the same object, the return value of \"float getSpeedAccuracyMetersPerSecond()\" may be aliased with the parameter of \"void set(Location location)\".\n\nWhen the method \"void set(Location location)\" is invoked after the method \"long getTime()\" upon the same object, the return value of \"long getTime()\" may be aliased with the parameter of \"void set(Location location)\".\n\nWhen the method \"void set(Location location)\" is invoked after the method \"float getVerticalAccuracyMeters()\" upon the same object, the return value of \"float getVerticalAccuracyMeters()\" may be aliased with the parameter of \"void set(Location location)\".",
    "android.os.Bundle": "(<class 'openai.error.InvalidRequestError'>, InvalidRequestError(message=\"This model's maximum context length is 4097 tokens. However, your messages resulted in 4172 tokens. Please reduce the length of the messages.\", param='messages', code='context_length_exceeded', http_status=400, request_id=None), <traceback object at 0x118b57ac0>)",
    "android.os.BaseBundle": "The aliasing specifications are:\n\n- When the method \"void putBoolean(String key, boolean value)\" is invoked before the method \"boolean getBoolean(String key)\", the return value of \"boolean getBoolean(String key)\" may be aliased with the second parameter of \"void putBoolean(String key, boolean value)\".\n- When the method \"void putBooleanArray(String key, boolean[] value)\" is invoked before the method \"boolean[] getBooleanArray(String key)\", the return value of \"boolean[] getBooleanArray(String key)\" may be aliased with the second parameter of \"void putBooleanArray(String key, boolean[] value)\".\n- When the method \"void putDouble(String key, double value)\" is invoked before the method \"double getDouble(String key)\", the return value of \"double getDouble(String key)\" may be aliased with the second parameter of \"void putDouble(String key, double value)\".\n- When the method \"void putDoubleArray(String key, double[] value)\" is invoked before the method \"double[] getDoubleArray(String key)\", the return value of \"double[] getDoubleArray(String key)\" may be aliased with the second parameter of \"void putDoubleArray(String key, double[] value)\".\n- When the method \"void putInt(String key, int value)\" is invoked before the method \"int getInt(String key)\", the return value of \"int getInt(String key)\" may be aliased with the second parameter of \"void putInt(String key, int value)\".\n- When the method \"void putIntArray(String key, int[] value)\" is invoked before the method \"int[] getIntArray(String key)\", the return value of \"int[] getIntArray(String key)\" may be aliased with the second parameter of \"void putIntArray(String key, int[] value)\".\n- When the method \"void putLong(String key, long value)\" is invoked before the method \"long getLong(String key)\", the return value of \"long getLong(String key)\" may be aliased with the second parameter of \"void putLong(String key, long value)\".\n- When the method \"void putLongArray(String key, long[] value)\" is invoked before the method \"long[] getLongArray(String key)\", the return value of \"long[] getLongArray(String key)\" may be aliased with the second parameter of \"void putLongArray(String key, long[] value)\".\n- When the method \"void putString(String key, String value)\" is invoked before the method \"String getString(String key)\", the return value of \"String getString(String key)\" may be aliased with the second parameter of \"void putString(String key, String value)\".\n- When the method \"void putStringArray(String key, String[] value)\" is invoked before the method \"String[] getStringArray(String key)\", the return value of \"String[] getStringArray(String key)\" may be aliased with the second parameter of \"void putStringArray(String key, String[] value)\".\n- When the method \"void remove(String key)\" is invoked before the method \"Object get(String key)\", the return value of \"Object get(String key)\" may be aliased with the first parameter of \"void remove(String key)\".",
    "android.os.Handler": "When the two methods \"Handler createAsync(Looper looper, Handler.Callback callback)\" and \"Handler createAsync(Looper looper)\" have the same value of the first parameter, the return value of \"Handler createAsync(Looper looper)\" may be aliased with the first parameter of \"Handler createAsync(Looper looper, Handler.Callback callback)\" if the method \"Handler createAsync(Looper looper)\" is invoked after the method \"Handler createAsync(Looper looper, Handler.Callback callback)\".\n\nThe return value of \"String getMessageName(Message message)\" may be aliased with the second parameter of \"boolean hasMessages(int what, Object object)\" if the method \"getMessageName\" is invoked after the method \"hasMessages\".\n\nThe return value of \"String getMessageName(Message message)\" may be aliased with the first parameter of \"void removeMessages(int what)\" if the method \"getMessageName\" is invoked after the method \"removeMessages\".\n\nThe return value of \"String getMessageName(Message message)\" may be aliased with the second parameter of \"void removeMessages(int what, Object object)\" if the method \"getMessageName\" is invoked after the method \"removeMessages\".\n\nWhen the two methods \"Message obtainMessage(int what, Object obj)\" and \"Message obtainMessage()\" are invoked on the same object, the return value of \"Message obtainMessage()\" may be aliased with the second parameter of \"Message obtainMessage(int what, Object obj)\".\n\nThe return value of \"Message obtainMessage(int what, int arg1, int arg2)\" may be aliased with the second parameter of \"boolean hasMessages(int what, Object object)\" if the method \"obtainMessage\" is invoked after the method \"hasMessages\".\n\nThe return value of \"Message obtainMessage(int what, int arg1, int arg2)\" may be aliased with the first parameter of \"void removeMessages(int what)\" if the method \"obtainMessage\" is invoked after the method \"removeMessages\".\n\nThe return value of \"Message obtainMessage(int what, int arg1, int arg2)\" may be aliased with the second parameter of \"void removeMessages(int what, Object object)\" if the method \"obtainMessage\" is invoked after the method \"removeMessages\".\n\nThe return value of \"Message obtainMessage(int what, int arg1, int arg2, Object obj)\" may be aliased with the second parameter of \"boolean hasMessages(int what, Object object)\" if the method \"obtainMessage\" is invoked after the method \"hasMessages\".\n\nThe return value of \"Message obtainMessage(int what, int arg1, int arg2, Object obj)\" may be aliased with the first parameter of \"void removeMessages(int what)\" if the method \"obtainMessage\" is invoked after the method \"removeMessages\".\n\nThe return value of \"Message obtainMessage(int what, int arg1, int arg2, Object obj)\" may be aliased with the second parameter of \"void removeMessages(int what, Object object)\" if the method \"obtainMessage\" is invoked after the method \"removeMessages\".\n\nThe return value of \"Message obtainMessage(int what)\" may be aliased with the second parameter of \"boolean hasMessages(int what, Object object)\" if the method \"obtainMessage\" is invoked after the method \"hasMessages\".\n\nThe return value of \"Message obtainMessage(int what)\" may be aliased with the first parameter of \"void removeMessages(int what)\" if the method \"obtainMessage\" is invoked after the method \"removeMessages\".\n\nThe return value of \"boolean post(Runnable r)\" may be aliased with the first parameter of \"void removeCallbacks(Runnable r)\" if the method \"post\" is invoked after the method \"removeCallbacks\".\n\nThe return value of \"boolean post(Runnable r)\" may be aliased with the first parameter of \"void removeCallbacks(Runnable r, Object token)\" if the method \"post\" is invoked after the method \"removeCallbacks\".\n\nThe return value of \"boolean post(Runnable r)\" may be aliased with the parameter of \"void removeCallbacksAndMessages(Object token)\" if the method \"post\" is invoked after the method \"removeCallbacksAndMessages\".\n\nThe return value of \"boolean post(Runnable r)\" may be aliased with the second parameter of \"boolean hasCallbacks(Runnable r)\" if the method \"post\" is invoked after the method \"hasCallbacks\".\n\nThe return value of \"boolean postAtFrontOfQueue(Runnable r)\" may be aliased with the parameter of \"boolean sendMessageAtFrontOfQueue(Message msg)\" if the method \"postAtFrontOfQueue\" is invoked after the method \"sendMessageAtFrontOfQueue\".\n\nThe return value of \"boolean postAtFrontOfQueue(Runnable r)\" may be aliased with the second parameter of \"boolean sendMessageDelayed(Message msg, long delayMillis)\" if the method \"postAtFrontOfQueue\" is invoked after the method \"sendMessageDelayed\".\n\nThe return value of \"boolean postAtFrontOfQueue(Runnable r)\" may be aliased with the second parameter of \"boolean sendMessageAtTime(Message msg, long uptimeMillis)\" if the method \"postAtFrontOfQueue\" is invoked after the method \"sendMessageAtTime\".\n\nThe return value of \"boolean postAtFrontOfQueue(Runnable r)\" may be aliased with the first parameter of \"void removeCallbacks(Runnable r)\" if the method \"postAtFrontOfQueue\" is invoked after the method \"removeCallbacks\".\n\nThe return value of \"boolean postAtFrontOfQueue(Runnable r)\" may be aliased with the first parameter of \"void removeCallbacks(Runnable r, Object token)\" if the method \"postAtFrontOfQueue\" is invoked after the method \"removeCallbacks\".\n\nThe return value of \"boolean postAtFrontOfQueue(Runnable r)\" may be aliased with the parameter of \"void removeCallbacksAndMessages(Object token)\" if the method \"postAtFrontOfQueue\" is invoked after the method \"removeCallbacksAndMessages\".\n\nThe return value of \"boolean postAtFrontOfQueue(Runnable r)\" may be aliased with the second parameter of \"boolean hasCallbacks(Runnable r)\" if the method \"postAtFrontOfQueue\" is invoked after the method \"hasCallbacks\".\n\nThe return value of \"boolean postAtTime(Runnable r, long uptimeMillis)\" may be aliased with the parameter of \"boolean sendMessageAtTime(Message msg, long uptimeMillis)\" if the method \"postAtTime\" is invoked after the method \"sendMessageAtTime\".\n\nThe return value of \"boolean postAtTime(Runnable r, Object token, long uptimeMillis)\" may be aliased with the second parameter of \"boolean sendMessageDelayed(Message msg, long delayMillis)\" if the method \"postAtTime\" is invoked after the method \"sendMessageDelayed\".\n\nThe return value of \"boolean postAtTime(Runnable r, Object token, long uptimeMillis)\" may be aliased with the second parameter of \"boolean sendMessageAtTime(Message msg, long uptimeMillis)\" if the method \"postAtTime\" is invoked after the method \"sendMessageAtTime\".\n\nThe return value of \"boolean postAtTime(Runnable r, Object token, long uptimeMillis)\" may be aliased with the first parameter of \"void removeCallbacks(Runnable r)\" if the method \"postAtTime\" is invoked after the method \"removeCallbacks\".\n\nThe return value of \"boolean postAtTime(Runnable r, Object token, long uptimeMillis)\" may be aliased with the first parameter of \"void removeCallbacks(Runnable r, Object token)\" if the method \"postAtTime\" is invoked after the method \"removeCallbacks\".\n\nThe return value of \"boolean postAtTime(Runnable r, Object token, long uptimeMillis)\" may be aliased with the parameter of \"void removeCallbacksAndMessages(Object token)\" if the method \"postAtTime\" is invoked after the method \"removeCallbacksAndMessages\".\n\nThe return value of \"boolean postAtTime(Runnable r, Object token, long uptimeMillis)\" may be aliased with the second parameter of \"boolean hasCallbacks(Runnable r)\" if the method \"postAtTime\" is invoked after the method \"hasCallbacks\".\n\nThe return value of \"boolean postDelayed(Runnable r, long delayMillis)\" may be aliased with the parameter of \"boolean sendMessageDelayed(Message msg, long delayMillis)\" if the method \"postDelayed\" is invoked after the method \"sendMessageDelayed\".\n\nThe return value of \"boolean postDelayed(Runnable r, Object token, long delayMillis)\" may be aliased with the second parameter of \"boolean sendMessageDelayed(Message msg, long delayMillis)\" if the method \"postDelayed\" is invoked after the method \"sendMessageDelayed\".\n\nThe return value of \"boolean postDelayed(Runnable r, Object token, long delayMillis)\" may be aliased with the second parameter of \"boolean sendMessageAtTime(Message msg, long uptimeMillis)\" if the method \"postDelayed\" is invoked after the method \"sendMessageAtTime\".\n\nThe return value of \"boolean postDelayed(Runnable r, Object token, long delayMillis)\" may be aliased with the first parameter of \"void removeCallbacks(Runnable r)\" if the method \"postDelayed\" is invoked after the method \"removeCallbacks\".\n\nThe return value of \"boolean postDelayed(Runnable r, Object token, long delayMillis)\" may be aliased with the first parameter of \"void removeCallbacks(Runnable r, Object token)\" if the method \"postDelayed\" is invoked after the method \"removeCallbacks\".\n\nThe return value of \"boolean postDelayed(Runnable r, Object token, long delayMillis)\" may be aliased with the parameter of \"void removeCallbacksAndMessages(Object token)\" if the method \"postDelayed\" is invoked after the method \"removeCallbacksAndMessages\".\n\nThe return value of \"boolean postDelayed(Runnable r, Object token, long delayMillis)\" may be aliased with the second parameter of \"boolean hasCallbacks(Runnable r)\" if the method \"postDelayed\" is invoked after the method \"hasCallbacks\".\n\nThe return value of \"boolean sendEmptyMessage(int what)\" may be aliased with the second parameter of \"boolean hasMessages(int what, Object object)\" if the method \"sendEmptyMessage\" is invoked after the method \"hasMessages\".\n\nThe return value of \"boolean sendEmptyMessage(int what)\" may be aliased with the first parameter of \"void removeMessages(int what)\" if the method \"sendEmptyMessage\" is invoked after the method \"removeMessages\".\n\nThe return value of \"boolean sendEmptyMessage(int what)\" may be aliased with the second parameter of \"void removeMessages(int what, Object object)\" if the method \"sendEmptyMessage\" is invoked after the method \"removeMessages\".\n\nThe return value of \"boolean sendEmptyMessageAtTime(int what, long uptimeMillis)\" may be aliased with the second parameter of \"boolean hasMessages(int what, Object object)\" if the method \"sendEmptyMessageAtTime\" is invoked after the method \"hasMessages\".\n\nThe return value of \"boolean sendEmptyMessageAtTime(int what, long uptimeMillis)\" may be aliased with the first parameter of \"void removeMessages(int what)\" if the method \"sendEmptyMessageAtTime\" is invoked after the method \"removeMessages\".\n\nThe return value of \"boolean sendEmptyMessageAtTime(int what, long uptimeMillis)\" may be aliased with the second parameter of \"void removeMessages(int what, Object object)\" if the method \"sendEmptyMessageAtTime\" is invoked after the method \"removeMessages\".\n\nThe return value of \"boolean sendEmptyMessageDelayed(int what, long delayMillis)\" may be aliased with the second parameter of \"boolean hasMessages(int what, Object object)\" if the method \"sendEmptyMessageDelayed\" is invoked after the method \"has",
    "android.os.Message": "When the method \"void copyFrom(Message o)\" is invoked after the method \"Message obtain(Message orig)\", the return value of the method \"Message obtain(Message orig)\" may be aliased with the first parameter of \"void copyFrom(Message o)\".\n\nWhen the method \"Message obtain(Handler h)\" is invoked after the method \"void setTarget(Handler target)\", the return value of the method \"Message obtain(Handler h)\" may be aliased with the parameter of \"void setTarget(Handler target)\".\n\nWhen the method \"Message obtain(Handler h, int what)\" is invoked after the method \"void setTarget(Handler target)\", the return value of the method \"Message obtain(Handler h, int what)\" may be aliased with the parameter of \"void setTarget(Handler target)\".\n\nWhen the method \"Message obtain(Handler h, Runnable callback)\" is invoked after the method \"void setTarget(Handler target)\", the return value of the method \"Message obtain(Handler h, Runnable callback)\" may be aliased with the parameter of \"void setTarget(Handler target)\".\n\nWhen the method \"Message obtain(Handler h, int what, int arg1, int arg2, Object obj)\" is invoked after the method \"void setTarget(Handler target)\", the return value of the method \"Message obtain(Handler h, int what, int arg1, int arg2, Object obj)\" may be aliased with the parameter of \"void setTarget(Handler target)\".\n\nWhen the method \"Message obtain(Handler h, int what, int arg1, int arg2)\" is invoked after the method \"void setTarget(Handler target)\", the return value of the method \"Message obtain(Handler h, int what, int arg1, int arg2)\" may be aliased with the parameter of \"void setTarget(Handler target)\".\n\nWhen the method \"Message obtain(Handler h, int what, Object obj)\" is invoked after the method \"void setTarget(Handler target)\", the return value of the method \"Message obtain(Handler h, int what, Object obj)\" may be aliased with the parameter of \"void setTarget(Handler target)\".\n\nWhen the method \"void sendToTarget()\" is invoked after the method \"void setTarget(Handler target)\", the return value of the method \"void setTarget(Handler target)\" may be aliased with the parameter of \"void sendToTarget()\".",
    "android.util.SparseArray": "The aliasing specifications for the given Java class \"SparseArray\" are:\n\n- When the method get is invoked after the method put upon the same object, the return value of the method get is aliased with the second parameter of the method put.\n- When the method get is invoked after the method setValueAt upon the same object, the return value of the method get is aliased with the second parameter of the method setValueAt.\n- When the method remove is invoked after the method delete upon the same object, the return value of the method remove is aliased with the parameter of the method delete.\n- When the method remove is invoked after the method removeAt upon the same object, the return value of the method remove is aliased with the parameter of the method removeAt.",
    "android.util.SparseBooleanArray": "The aliasing specifications are as follows:\n\n- The return value of \"SparseBooleanArray clone()\" may be aliased with the k-th parameter of \"void append(int key, boolean value)\" if the method clone is invoked after the method append.\n- The return value of \"boolean get(int key)\" may be aliased with the k-th parameter of \"void append(int key, boolean value)\" if the method get is invoked after the method append.\n- The return value of \"boolean get(int key, boolean valueIfKeyNotFound)\" may be aliased with the k-th parameter of \"void append(int key, boolean value)\" if the method get is invoked after the method append.\n- The return value of \"int indexOfKey(int key)\" may be aliased with the k-th parameter of \"void append(int key, boolean value)\" if the method indexOfKey is invoked after the method append.\n- The return value of \"int indexOfValue(boolean value)\" may be aliased with the k-th parameter of \"void append(int key, boolean value)\" if the method indexOfValue is invoked after the method append.\n- The return value of \"int keyAt(int index)\" may be aliased with the k-th parameter of \"void append(int key, boolean value)\" if the method keyAt is invoked after the method append.\n- The return value of \"void put(int key, boolean value)\" may be aliased with the k-th parameter of \"void append(int key, boolean value)\" if the method put is invoked after the method append.\n- The return value of \"boolean valueAt(int index)\" may be aliased with the k-th parameter of \"void append(int key, boolean value)\" if the method valueAt is invoked after the method append.",
    "android.util.SparseIntArray": "The aliasing specifications for the given methods of the class SparseIntArray are:\n\n- When the method get is invoked after the method put with the same value of the first parameter, the return value of get may be aliased with the second parameter of put.\n- When the method indexOfKey is invoked after the method put with the same value of the first parameter, the return value of indexOfKey may be aliased with the index parameter of the method put.\n- When the method indexOfValue is invoked after the method put with the same value of the second parameter, the return value of indexOfValue may be aliased with the index parameter of the method put.\n- When the method valueAt is invoked after the method put with the same value of the first parameter, the return value of valueAt may be aliased with the second parameter of put.\n- When the method get is invoked after the method setValueAt with the same value of the first parameter, the return value of get may be aliased with the second parameter of setValueAt.\n- When the method put is invoked after the method setValueAt with the same value of the first parameter, the second parameter of put may be aliased with the third parameter of setValueAt.",
    "android.widget.Toast": "When the method \"getView()\" is invoked after the method \"setView(View view)\", the return value of \"getView()\" may be aliased with the parameter of \"setView(View view)\".\n\nWhen the method \"cancel()\" is invoked after the method \"show()\", the return value of \"cancel()\" may be aliased with the return value of \"show()\".\n\nWhen the method \"addCallback(Toast.Callback callback)\" is invoked after the method \"removeCallback(Toast.Callback callback)\", the return value of \"addCallback(Toast.Callback callback)\" may be aliased with the parameter of \"removeCallback(Toast.Callback callback)\".\n\nWhen the method \"setText(int resId)\" is invoked after the method \"makeText(Context context, int resId, int duration)\", the return value of \"setText(int resId)\" may be aliased with the second parameter of \"makeText(Context context, int resId, int duration)\".\n\nWhen the method \"setText(CharSequence s)\" is invoked after the method \"makeText(Context context, CharSequence text, int duration)\", the return value of \"setText(CharSequence s)\" may be aliased with the second parameter of \"makeText(Context context, CharSequence text, int duration)\".\n\nWhen the method \"show()\" is invoked after the method \"setView(View view)\", the return value of \"show()\" may be aliased with the parameter of \"setView(View view)\".\n\nWhen the method \"show()\" is invoked after the method \"setGravity(int gravity, int xOffset, int yOffset)\", the return value of \"show()\" may be aliased with the first parameter of \"setGravity(int gravity, int xOffset, int yOffset)\".\n\nWhen the method \"show()\" is invoked after the method \"setMargin(float horizontalMargin, float verticalMargin)\", the return value of \"show()\" may be aliased with the parameters of \"setMargin(float horizontalMargin, float verticalMargin)\".\n\nWhen the method \"show()\" is invoked after the method \"setDuration(int duration)\", the return value of \"show()\" may be aliased with the parameter of \"setDuration(int duration)\".\n\nWhen the method \"show()\" is invoked after the method \"addCallback(Toast.Callback callback)\", the return value of \"show()\" may be aliased with the parameter of \"addCallback(Toast.Callback callback)\".\n\nWhen the method \"show()\" is invoked after the method \"removeCallback(Toast.Callback callback)\", the return value of \"show()\" may be aliased with the parameter of \"removeCallback(Toast.Callback callback)\".",
    "com.alibaba.fastjson.JSONObject": "The aliasing specifications are:\n\n- The return value of \"String getFunction()\" may be aliased with the first parameter of \"void setFunction(String function)\" if the method getFunction is invoked after the method setFunction.\n- The return value of \"List getParameters()\" may be aliased with the parameter of \"void addParameter(Object parameter)\" if the method getParameters is invoked after the method addParameter.",
    "com.alibaba.rocketmq.remoting.common.RemotingUtil": "When the method closeChannel is invoked after the method connect with the same value of the first parameter, the return value of the method connect may be aliased with the first parameter of the method closeChannel.\n\nWhen the method closeChannel is invoked after the method connect with the same value of the first parameter, the return value of the method connect may be aliased with the k-th parameter of the method connect if the i_m-th parameter of connect is aliased with the j_m-th parameter of closeChannel for each 1 <= m <= n.\n\nWhen the method connect with the second parameter is invoked after the method connect with the first parameter, the return value of the second method may be aliased with the return value of the first method.\n\nWhen the method getLocalAddress is invoked after the method connect with the same value of the first parameter, the return value of the method connect may be aliased with the k-th parameter of the method connect if the i_m-th parameter of connect is aliased with the j_m-th parameter of getLocalAddress for each 1 <= m <= n.\n\nWhen the method isLinuxPlatform is invoked after the method connect with the same value of the first parameter, the return value of the method connect may be aliased with the k-th parameter of the method connect if the i_m-th parameter of connect is aliased with the j_m-th parameter of isLinuxPlatform for each 1 <= m <= n.\n\nWhen the method isWindowsPlatform is invoked after the method connect with the same value of the first parameter, the return value of the method connect may be aliased with the k-th parameter of the method connect if the i_m-th parameter of connect is aliased with the j_m-th parameter of isWindowsPlatform for each 1 <= m <= n.\n\nWhen the method normalizeHostAddress is invoked after the method connect with the same value of the first parameter, the return value of the method connect may be aliased with the k-th parameter of the method connect if the i_m-th parameter of connect is aliased with the j_m-th parameter of normalizeHostAddress for each 1 <= m <= n.\n\nWhen the method openSelector is invoked after the method connect with the same value of the first parameter, the return value of the method connect may be aliased with the k-th parameter of the method connect if the i_m-th parameter of connect is aliased with the j_m-th parameter of openSelector for each 1 <= m <= n.\n\nWhen the method socketAddress2String is invoked after the method connect with the same value of the first parameter, the return value of the method connect may be aliased with the k-th parameter of the method connect if the i_m-th parameter of connect is aliased with the j_m-th parameter of socketAddress2String for each 1 <= m <= n.\n\nWhen the method string2SocketAddress is invoked after the method connect with the same value of the first parameter, the return value of the method connect may be aliased with the k-th parameter of the method connect if the i_m-th parameter of connect is aliased with the j_m-th parameter of string2SocketAddress for each 1 <= m <= n.",
    "com.badlogic.gdx.scenes.scene2d.ui.Skin": "The aliasing specifications are:\n\n- When the method \"void add(String name, Object resource)\" is invoked after the method \"String find(Object resource)\", the return value of \"String find(Object resource)\" may be aliased with the first parameter of \"void add(String name, Object resource)\".\n- When the method \"void add(String name, Object resource)\" is invoked after the method \"T get(Class type)\", the return value of \"T get(Class type)\" may be aliased with the second parameter of \"void add(String name, Object resource)\".\n- When the method \"void add(String name, Object resource)\" is invoked after the method \"T get(String name, Class type)\", the return value of \"T get(String name, Class type)\" may be aliased with the second parameter of \"void add(String name, Object resource)\".\n- When the method \"ObjectMap getAll(Class type)\" is invoked after the method \"void add(String name, Object resource)\", the return value of \"ObjectMap getAll(Class type)\" may be aliased with the second parameter of \"void add(String name, Object resource)\".\n- When the method \"Color getColor(String name)\" is invoked after the method \"void add(String name, Object resource)\", the return value of \"Color getColor(String name)\" may be aliased with the second parameter of \"void add(String name, Object resource)\".\n- When the method \"Drawable getDrawable(String name)\" is invoked after the method \"void add(String name, Object resource)\", the return value of \"Drawable getDrawable(String name)\" may be aliased with the second parameter of \"void add(String name, Object resource)\".\n- When the method \"BitmapFont getFont(String name)\" is invoked after the method \"void add(String name, Object resource)\", the return value of \"BitmapFont getFont(String name)\" may be aliased with the second parameter of \"void add(String name, Object resource)\".\n- When the method \"NinePatch getPatch(String name)\" is invoked after the method \"void add(String name, Object resource)\", the return value of \"NinePatch getPatch(String name)\" may be aliased with the second parameter of \"void add(String name, Object resource)\".\n- When the method \"TextureRegion getRegion(String name)\" is invoked after the method \"void add(String name, Object resource)\", the return value of \"TextureRegion getRegion(String name)\" may be aliased with the second parameter of \"void add(String name, Object resource)\".\n- When the method \"Sprite getSprite(String name)\" is invoked after the method \"void add(String name, Object resource)\", the return value of \"Sprite getSprite(String name)\" may be aliased with the second parameter of \"void add(String name, Object resource)\".\n- When the method \"TiledDrawable getTiledDrawable(String name)\" is invoked after the method \"void add(String name, Object resource)\", the return value of \"TiledDrawable getTiledDrawable(String name)\" may be aliased with the second parameter of \"void add(String name, Object resource)\".\n- When the method \"boolean has(String name, Class type)\" is invoked after the method \"void add(String name, Object resource)\", the return value of \"boolean has(String name, Class type)\" may be aliased with the second parameter of \"void add(String name, Object resource)\".\n- When the method \"Drawable newDrawable(Drawable drawable)\" is invoked after the method \"void add(String name, Object resource)\", the return value of \"Drawable newDrawable(Drawable drawable)\" may be aliased with the second parameter of \"void add(String name, Object resource)\".\n- When the method \"Drawable newDrawable(Drawable drawable, Color tint)\" is invoked after the method \"void add(String name, Object resource)\", the return value of \"Drawable newDrawable(Drawable drawable, Color tint)\" may be aliased with the second parameter of \"void add(String name, Object resource)\".\n- When the method \"Drawable newDrawable(Drawable drawable, float r, float g, float b, float a)\" is invoked after the method \"void add(String name, Object resource)\", the return value of \"Drawable newDrawable(Drawable drawable, float r, float g, float b, float a)\" may be aliased with the second parameter of \"void add(String name, Object resource)\".\n- When the method \"Drawable newDrawable(String name)\" is invoked after the method \"void add(String name, Object resource)\", the return value of \"Drawable newDrawable(String name)\" may be aliased with the second parameter of \"void add(String name, Object resource)\".\n- When the method \"Drawable newDrawable(String name, Color tint)\" is invoked after the method \"void add(String name, Object resource)\", the return value of \"Drawable newDrawable(String name, Color tint)\" may be aliased with the second parameter of \"void add(String name, Object resource)\".\n- When the method \"Drawable newDrawable(String name, float r, float g, float b, float a)\" is invoked after the method \"void add(String name, Object resource)\", the return value of \"Drawable newDrawable(String name, float r, float g, float b, float a)\" may be aliased with the second parameter of \"void add(String name, Object resource)\".\n- When the method \"T optional(String name, Class type)\" is invoked after the method \"void add(String name, Object resource)\", the return value of \"T optional(String name, Class type)\" may be aliased with the second parameter of \"void add(String name, Object resource)\".\n- When the method \"void remove(String name, Class type)\" is invoked after the method \"void add(String name, Object resource)\", the second parameter of \"void remove(String name, Class type)\" may be aliased with the second parameter of \"void add(String name, Object resource)\".\n- When the method \"void setEnabled(Actor actor, boolean enabled)\" is invoked after the method \"void add(String name, Object resource)\", the first parameter of \"void setEnabled(Actor actor, boolean enabled)\" may be aliased with the second parameter of \"void add(String name, Object resource)\".",
    "com.baidu.location.BDLocation": "The aliasing specifications are as follows:\n- When the method getAdCode() is invoked after the method setAddress(com.baidu.location.Address addr), the return value of getAdCode() may be aliased with the adCode field of the Address object passed in setAddress(com.baidu.location.Address addr).\n- When the method getAddress() is invoked after the method setAddress(com.baidu.location.Address addr), the return value of getAddress() may be aliased with the Address object passed in setAddress(com.baidu.location.Address addr).\n- When the method getAddrStr() is invoked after the method setAddrStr(java.lang.String mAddrStr), the return value of getAddrStr() may be aliased with the mAddrStr field passed in setAddrStr(java.lang.String mAddrStr).\n- When the method getAltitude() is invoked after the method setAltitude(double altitude), the return value of getAltitude() may be aliased with the altitude parameter passed in setAltitude(double altitude).\n- When the method getBuildingID() is invoked after the method setBuildingID(java.lang.String bldgid), the return value of getBuildingID() may be aliased with the bldgid parameter passed in setBuildingID(java.lang.String bldgid).\n- When the method getBuildingName() is invoked after the method setBuildingName(java.lang.String buildingName), the return value of getBuildingName() may be aliased with the buildingName parameter passed in setBuildingName(java.lang.String buildingName).\n- When the method getCity() is invoked after the method setAddress(com.baidu.location.Address addr), the return value of getCity() may be aliased with the city field of the Address object passed in setAddress(com.baidu.location.Address addr).\n- When the method getCityCode() is invoked after the method setAddress(com.baidu.location.Address addr), the return value of getCityCode() may be aliased with the cityCode field of the Address object passed in setAddress(com.baidu.location.Address addr).\n- When the method getCoorType() is invoked after the method setCoorType(java.lang.String coorType), the return value of getCoorType() may be aliased with the coorType parameter passed in setCoorType(java.lang.String coorType).\n- When the method getCountry() is invoked after the method setAddress(com.baidu.location.Address addr), the return value of getCountry() may be aliased with the country field of the Address object passed in setAddress(com.baidu.location.Address addr).\n- When the method getCountryCode() is invoked after the method setAddress(com.baidu.location.Address addr), the return value of getCountryCode() may be aliased with the countryCode field of the Address object passed in setAddress(com.baidu.location.Address addr).\n- When the method getDirection() is invoked after the method setDirection(float direction), the return value of getDirection() may be aliased with the direction parameter passed in setDirection(float direction).\n- When the method getDistrict() is invoked after the method setAddress(com.baidu.location.Address addr), the return value of getDistrict() may be aliased with the district field of the Address object passed in setAddress(com.baidu.location.Address addr).\n- When the method getExtraLocation(java.lang.String key) is invoked after the method setExtraLocation(java.lang.String key, android.location.Location value), the return value of getExtraLocation(java.lang.String key) may be aliased with the value parameter passed in setExtraLocation(java.lang.String key, android.location.Location value).\n- When the method getFloor() is invoked after the method setFloor(java.lang.String f), the return value of getFloor() may be aliased with the f parameter passed in setFloor(java.lang.String f).\n- When the method getFusionLocInfo(java.lang.String key) is invoked after the method setFusionLocInfo(java.lang.String key, double[] value), the return value of getFusionLocInfo(java.lang.String key) may be aliased with the value parameter passed in setFusionLocInfo(java.lang.String key, double[] value).\n- When the method getGpsAccuracyStatus() is invoked after the method setGpsAccuracyStatus(int status), the return value of getGpsAccuracyStatus() may be aliased with the status parameter passed in setGpsAccuracyStatus(int status).\n- When the method getGpsCheckStatus() is invoked after the method setGpsCheckStatus(int status), the return value of getGpsCheckStatus() may be aliased with the status parameter passed in setGpsCheckStatus(int status).\n- When the method getIndoorLocationSource() is invoked after the method setIndoorLocationSource(int value), the return value of getIndoorLocationSource() may be aliased with the value parameter passed in setIndoorLocationSource(int value).\n- When the method getIndoorLocationSurpport() is invoked after the method setIndoorLocationSurpport(int value), the return value of getIndoorLocationSurpport() may be aliased with the value parameter passed in setIndoorLocationSurpport(int value).\n- When the method getIndoorLocationSurpportBuidlingID() is invoked after the method setIndoorLocationSurpport(int value), the return value of getIndoorLocationSurpportBuidlingID() may be aliased with the buildingID field of the Address object passed in setIndoorLocationSurpport(int value).\n- When the method getIndoorLocationSurpportBuidlingName",
    "com.eclipsesource.json.JsonObject": "When the two methods \"JsonObject add(String name, boolean value)\" and \"JsonValue get(String name)\" have the same value of the first parameter, the return value of \"JsonValue get(String name)\" may be aliased with the second parameter of \"JsonObject add(String name, boolean value)\" if the method get is invoked after the method add.\n\nWhen the two methods \"JsonObject add(String name, double value)\" and \"JsonValue get(String name)\" have the same value of the first parameter, the return value of \"JsonValue get(String name)\" may be aliased with the second parameter of \"JsonObject add(String name, double value)\" if the method get is invoked after the method add.\n\nWhen the two methods \"JsonObject add(String name, float value)\" and \"JsonValue get(String name)\" have the same value of the first parameter, the return value of \"JsonValue get(String name)\" may be aliased with the second parameter of \"JsonObject add(String name, float value)\" if the method get is invoked after the method add.\n\nWhen the two methods \"JsonObject add(String name, int value)\" and \"JsonValue get(String name)\" have the same value of the first parameter, the return value of \"JsonValue get(String name)\" may be aliased with the second parameter of \"JsonObject add(String name, int value)\" if the method get is invoked after the method add.\n\nWhen the two methods \"JsonObject add(String name, JsonValue value)\" and \"JsonValue get(String name)\" have the same value of the first parameter, the return value of \"JsonValue get(String name)\" may be aliased with the second parameter of \"JsonObject add(String name, JsonValue value)\" if the method get is invoked after the method add.\n\nWhen the two methods \"JsonObject add(String name, long value)\" and \"JsonValue get(String name)\" have the same value of the first parameter, the return value of \"JsonValue get(String name)\" may be aliased with the second parameter of \"JsonObject add(String name, long value)\" if the method get is invoked after the method add.\n\nWhen the two methods \"JsonObject add(String name, String value)\" and \"JsonValue get(String name)\" have the same value of the first parameter, the return value of \"JsonValue get(String name)\" may be aliased with the second parameter of \"JsonObject add(String name, String value)\" if the method get is invoked after the method add.\n\nThe return value of \"JsonValue get(String name)\" may be aliased with the first parameter of \"JsonObject set(String name, boolean value)\" if the method get is invoked after the method set.\n\nThe return value of \"JsonValue get(String name)\" may be aliased with the first parameter of \"JsonObject set(String name, double value)\" if the method get is invoked after the method set.\n\nThe return value of \"JsonValue get(String name)\" may be aliased with the first parameter of \"JsonObject set(String name, float value)\" if the method get is invoked after the method set.\n\nThe return value of \"JsonValue get(String name)\" may be aliased with the first parameter of \"JsonObject set(String name, int value)\" if the method get is invoked after the method set.\n\nThe return value of \"JsonValue get(String name)\" may be aliased with the first parameter of \"JsonObject set(String name, JsonValue value)\" if the method get is invoked after the method set.\n\nThe return value of \"JsonValue get(String name)\" may be aliased with the first parameter of \"JsonObject set(String name, long value)\" if the method get is invoked after the method set.\n\nThe return value of \"JsonValue get(String name)\" may be aliased with the first parameter of \"JsonObject set(String name, String value)\" if the method get is invoked after the method set.\n\nWhen the two methods \"boolean getBoolean(String name, boolean defaultValue)\" and \"JsonValue get(String name)\" have the same value of the first parameter, the return value of \"JsonValue get(String name)\" may be aliased with the second parameter of \"boolean getBoolean(String name, boolean defaultValue)\" if the method get is invoked after the method getBoolean.\n\nWhen the two methods \"double getDouble(String name, double defaultValue)\" and \"JsonValue get(String name)\" have the same value of the first parameter, the return value of \"JsonValue get(String name)\" may be aliased with the second parameter of \"double getDouble(String name, double defaultValue)\" if the method get is invoked after the method getDouble.\n\nWhen the two methods \"float getFloat(String name, float defaultValue)\" and \"JsonValue get(String name)\" have the same value of the first parameter, the return value of \"JsonValue get(String name)\" may be aliased with the second parameter of \"float getFloat(String name, float defaultValue)\" if the method get is invoked after the method getFloat.\n\nWhen the two methods \"int getInt(String name, int defaultValue)\" and \"JsonValue get(String name)\" have the same value of the first parameter, the return value of \"JsonValue get(String name)\" may be aliased with the second parameter of \"int getInt(String name, int defaultValue)\" if the method get is invoked after the method getInt.\n\nWhen the two methods \"long getLong(String name, long defaultValue)\" and \"JsonValue get(String name)\" have the same value of the first parameter, the return value of \"JsonValue get(String name)\" may be aliased with the second parameter of \"long getLong(String name, long defaultValue)\" if the method get is invoked after the method getLong.\n\nWhen the two methods \"String getString(String name, String defaultValue)\" and \"JsonValue get(String name)\" have the same value of the first parameter, the return value of \"JsonValue get(String name)\" may be aliased with the second parameter of \"String getString(String name, String defaultValue)\" if the method get is invoked after the method getString.\n\nThe return value of \"int hashCode()\" may be aliased with the first parameter of \"JsonObject unmodifiableObject(JsonObject object)\" if the method unmodifiableObject is invoked after the method hashCode.\n\nThe return value of \"Iterator iterator()\" may be aliased with the first parameter of \"JsonObject merge(JsonObject object)\" if the method iterator is invoked after the method merge.\n\nThe return value of \"List names()\" may be aliased with the first parameter of \"JsonObject remove(String name)\" if the method names is invoked after the method remove.\n\nThe return value of \"JsonValue asValue()\" may be aliased with the first parameter of \"JsonObject set(String name, JsonValue value)\" if the method asValue is invoked after the method set.\n\nThe return value of \"JsonValue asValue()\" may be aliased with the second parameter of \"JsonValue get(String name)\" if the method asValue is invoked after the method get.",
    "com.eclipsesource.json.JsonValue": "The aliasing specifications are:\n- No aliasing specifications can be derived from these methods.",
    "com.fasterxml.jackson.databind.node.ObjectNode": "(<class 'openai.error.InvalidRequestError'>, InvalidRequestError(message=\"This model's maximum context length is 4097 tokens. However, your messages resulted in 4273 tokens. Please reduce the length of the messages.\", param='messages', code='context_length_exceeded', http_status=400, request_id=None), <traceback object at 0x1185f8780>)",
    "com.fasterxml.jackson.databind.node.ContainerNode": "When we invoke the method \"JsonNode get(int index)\" after the method \"ArrayNode arrayNode()\" upon the same object, the return value of the method \"JsonNode get(int index)\" may be aliased with the second parameter of the method \"JsonNode withArray(String propertyName)\".\n\nWhen we invoke the method \"JsonNode get(String fieldName)\" after the method \"ObjectNode objectNode()\" upon the same object, the return value of the method \"JsonNode get(String fieldName)\" may be aliased with the second parameter of the method \"JsonNode with(String propertyName)\".\n\nWhen we invoke the method \"JsonNode findValue(String fieldName)\" after the method \"ObjectNode objectNode()\" upon the same object, the return value of the method \"JsonNode findValue(String fieldName)\" may be aliased with the second parameter of the method \"JsonNode with(String propertyName)\".\n\nWhen we invoke the method \"JsonNode with(String propertyName)\" after the method \"ObjectNode objectNode()\" upon the same object, the return value of the method \"JsonNode with(String propertyName)\" may be aliased with the return value of the method \"JsonNode get(String fieldName)\" if the method \"JsonNode get(String fieldName)\" is invoked after the method \"JsonNode with(String propertyName)\".\n\nWhen we invoke the method \"JsonNode withArray(String propertyName)\" after the method \"ObjectNode objectNode()\" upon the same object, the return value of the method \"JsonNode withArray(String propertyName)\" may be aliased with the return value of the method \"JsonNode get(String fieldName)\" if the method \"JsonNode get(String fieldName)\" is invoked after the method \"JsonNode withArray(String propertyName)\".\n\nWhen we invoke the method \"JsonNode path(int index)\" after the method \"ArrayNode arrayNode()\" upon the same object, the return value of the method \"JsonNode path(int index)\" may be aliased with the second parameter of the method \"JsonNode withArray(String propertyName)\".\n\nWhen we invoke the method \"JsonNode path(String fieldName)\" after the method \"ObjectNode objectNode()\" upon the same object, the return value of the method \"JsonNode path(String fieldName)\" may be aliased with the second parameter of the method \"JsonNode with(String propertyName)\".\n\nWhen we invoke the method \"JsonNode findParent(String fieldName)\" after the method \"JsonNode findValue(String fieldName)\" or \"JsonNode findValues(String fieldName)\" upon the same object, the return value of the method \"JsonNode findParent(String fieldName)\" may be aliased with the return value of the method \"JsonNode findValue(String fieldName)\" or \"JsonNode findValues(String fieldName)\" if the method \"JsonNode findValue(String fieldName)\" or \"JsonNode findValues(String fieldName)\" is invoked before the method \"JsonNode findParent(String fieldName)\".\n\nWhen we invoke the method \"Iterator elements()\" or \"Iterator fields()\" after the method \"JsonNode findValue(String fieldName)\" upon the same object, the return value of the method \"Iterator elements()\" or \"Iterator fields()\" may be aliased with the return value of the method \"JsonNode findValue(String fieldName)\" if the method \"JsonNode findValue(String fieldName)\" is invoked before the method \"Iterator elements()\" or \"Iterator fields()\".\n\nWhen we invoke the method \"JsonNode with(String propertyName)\" after the method \"ObjectNode objectNode()\" upon the same object, the return value of the method \"JsonNode with(String propertyName)\" may be aliased with the return value of the method \"JsonNode get(String fieldName)\" if the method \"JsonNode get(String fieldName)\" is invoked after the method \"JsonNode with(String propertyName)\".\n\nWhen we invoke the method \"JsonNode withArray(String propertyName)\" after the method \"ObjectNode objectNode()\" upon the same object, the return value of the method \"JsonNode withArray(String propertyName)\" may be aliased with the return value of the method \"JsonNode get(String fieldName)\" if the method \"JsonNode get(String fieldName)\" is invoked after the method \"JsonNode withArray(String propertyName)\".",
    "com.fasterxml.jackson.databind.node.BaseJsonNode": "When we invoke the method findValue(String fieldName) after the method with(String propertyName) upon the same object, the return value of the method findValue(String fieldName) is aliased with the return value of the method with(String propertyName).\n\nWhen we invoke the method findParent(String fieldName) after the method with(String propertyName) upon the same object, the return value of the method findParent(String fieldName) is aliased with the return value of the method with(String propertyName).\n\nWhen we invoke the method findParents(String fieldName) after the method with(String propertyName) upon the same object, the return value of the method findParents(String fieldName) is aliased with the return value of the method with(String propertyName).\n\nWhen we invoke the method findParents(String fieldName, List foundSoFar) after the method with(String propertyName) upon the same object, the return value of the method findParents(String fieldName, List foundSoFar) is aliased with the return value of the method with(String propertyName).\n\nWhen we invoke the method findValues(String fieldName) after the method with(String propertyName) upon the same object, the return value of the method findValues(String fieldName) is aliased with the return value of the method with(String propertyName).\n\nWhen we invoke the method findValues(String fieldName, List foundSoFar) after the method with(String propertyName) upon the same object, the return value of the method findValues(String fieldName, List foundSoFar) is aliased with the return value of the method with(String propertyName).\n\nWhen we invoke the method findValuesAsText(String fieldName) after the method with(String propertyName) upon the same object, the return value of the method findValuesAsText(String fieldName) is aliased with the return value of the method with(String propertyName).\n\nWhen we invoke the method findValuesAsText(String fieldName, List foundSoFar) after the method with(String propertyName) upon the same object, the return value of the method findValuesAsText(String fieldName, List foundSoFar) is aliased with the return value of the method with(String propertyName).\n\nWhen we invoke the method has(String fieldName) after the method with(String propertyName) upon the same object, the return value of the method has(String fieldName) may be aliased with the parameter of the method with(String propertyName).\n\nWhen we invoke the method path(String fieldName) after the method with(String propertyName) upon the same object, the return value of the method path(String fieldName) is aliased with the return value of the method with(String propertyName).\n\nWhen we invoke the method with(String propertyName) after the method with(String propertyName) upon the same object, the return value of the method with(String propertyName) may be aliased with the parameter of the method with(String propertyName).",
    "com.fasterxml.jackson.databind.JsonNode": "When the method \"JsonNode _at(com.fasterxml.jackson.core.JsonPointer ptr)\" is invoked after \"JsonNode at(com.fasterxml.jackson.core.JsonPointer ptr)\", the return value of \"_at\" may be aliased with the first parameter of \"at\".\nWhen the method \"boolean asBoolean()\" is invoked after \"boolean asBoolean(boolean defaultValue)\", the return value of \"asBoolean()\" may be aliased with the first parameter of \"asBoolean(boolean defaultValue)\".\nWhen the method \"double asDouble()\" is invoked after \"double asDouble(double defaultValue)\", the return value of \"asDouble()\" may be aliased with the first parameter of \"asDouble(double defaultValue)\".\nWhen the method \"int asInt()\" is invoked after \"int asInt(int defaultValue)\", the return value of \"asInt()\" may be aliased with the first parameter of \"asInt(int defaultValue)\".\nWhen the method \"long asLong()\" is invoked after \"long asLong(long defaultValue)\", the return value of \"asLong()\" may be aliased with the first parameter of \"asLong(long defaultValue)\".\nWhen the method \"String asText()\" is invoked after \"String asText(String defaultValue)\", the return value of \"asText()\" may be aliased with the first parameter of \"asText(String defaultValue)\".\nWhen the method \"JsonNode at(String jsonPtrExpr)\" is invoked after \"JsonNode at(com.fasterxml.jackson.core.JsonPointer ptr)\", the return value of \"at(String jsonPtrExpr)\" may be aliased with the first parameter of \"at(com.fasterxml.jackson.core.JsonPointer ptr)\".\nWhen the method \"boolean canConvertToInt()\" is invoked after \"boolean canConvertToLong()\", the return value of \"canConvertToInt()\" may be aliased with the return value of \"canConvertToLong()\".\nWhen the method \"boolean has(int index)\" is invoked after \"JsonNode get(int index)\", the return value of \"has(int index)\" may be aliased with the first parameter of \"get(int index)\".\nWhen the method \"boolean has(String fieldName)\" is invoked after \"JsonNode get(String fieldName)\", the return value of \"has(String fieldName)\" may be aliased with the first parameter of \"get(String fieldName)\".\nWhen the method \"boolean hasNonNull(int index)\" is invoked after \"boolean has(int index)\", the return value of \"hasNonNull(int index)\" may be aliased with the return value of \"has(int index)\".\nWhen the method \"boolean hasNonNull(String fieldName)\" is invoked after \"boolean has(String fieldName)\", the return value of \"hasNonNull(String fieldName)\" may be aliased with the return value of \"has(String fieldName)\".\nWhen the method \"JsonNode path(int index)\" is invoked after \"JsonNode get(int index)\", the return value of \"path(int index)\" may be aliased with the first parameter of \"get(int index)\".\nWhen the method \"JsonNode path(String fieldName)\" is invoked after \"JsonNode get(String fieldName)\", the return value of \"path(String fieldName)\" may be aliased with the first parameter of \"get(String fieldName)\".",
    "com.fasterxml.jackson.databind.JsonSerializable.Base": "No aliasing specification can be derived from the given method.",
    "com.google.common.collect.BiMap": "The aliasing specifications for the given Java class are:\n\n- When the method \"forcePut(K key, V value)\" is invoked after the method \"inverse()\", the return value of \"inverse()\" may be aliased with the second parameter of \"forcePut(K key, V value)\".\n- When the method \"put(K key, V value)\" is invoked after the method \"inverse()\", the return value of \"inverse()\" may be aliased with the second parameter of \"put(K key, V value)\".\n- When the method \"putAll(Map map)\" is invoked after the method \"inverse()\", the return value of \"inverse()\" may be aliased with the values of the map passed as the parameter to \"putAll(Map map)\".\n- When the method \"compute(K key, BiFunction remappingFunction)\" is invoked after the method \"inverse()\", the return value of \"inverse()\" may be aliased with the second parameter of \"compute(K key, BiFunction remappingFunction)\".\n- When the method \"computeIfAbsent(K key, Function mappingFunction)\" is invoked after the method \"inverse()\", the return value of \"inverse()\" may be aliased with the key passed as the parameter to \"computeIfAbsent(K key, Function mappingFunction)\".\n- When the method \"computeIfPresent(K key, BiFunction remappingFunction)\" is invoked after the method \"inverse()\", the return value of \"inverse()\" may be aliased with the second parameter of \"computeIfPresent(K key, BiFunction remappingFunction)\".\n- When the method \"get(Object key)\" is invoked after the method \"inverse()\", the return value of \"inverse()\" may be aliased with the parameter passed to \"get(Object key)\".\n- When the method \"getOrDefault(Object key, V defaultValue)\" is invoked after the method \"inverse()\", the return value of \"inverse()\" may be aliased with the parameter passed to \"getOrDefault(Object key, V defaultValue)\".\n- When the method \"merge(K key, V value, BiFunction remappingFunction)\" is invoked after the method \"inverse()\", the return value of \"inverse()\" may be aliased with the first parameter of \"merge(K key, V value, BiFunction remappingFunction)\".\n- When the method \"putIfAbsent(K key, V value)\" is invoked after the method \"inverse()\", the return value of \"inverse()\" may be aliased with the second parameter of \"putIfAbsent(K key, V value)\".\n- When the method \"remove(Object key)\" is invoked after the method \"inverse()\", the return value of \"inverse()\" may be aliased with the parameter passed to \"remove(Object key)\".\n- When the method \"remove(Object key, Object value)\" is invoked after the method \"inverse()\", the return value of \"inverse()\" may be aliased with the first parameter of \"remove(Object key, Object value)\".\n- When the method \"replace(K key, V value)\" is invoked after the method \"inverse()\", the return value of \"inverse()\" may be aliased with the second parameter of \"replace(K key, V value)\".\n- When the method \"replace(K key, V oldValue, V newValue)\" is invoked after the method \"inverse()\", the return value of \"inverse()\" may be aliased with the second parameter of \"replace(K key, V oldValue, V newValue)\".\n- When the method \"replaceAll(BiFunction function)\" is invoked after the method \"inverse()\", the return value of \"inverse()\" may be aliased with the values passed to the \"function\" parameter of \"replaceAll(BiFunction function)\".\n- When the method \"values()\" is invoked after the method \"inverse()\", the return value of \"inverse()\" may be aliased with the elements of the collection returned by \"values()\".",
    "com.google.common.collect.Maps": "When the method \"NavigableMap asMap(NavigableSet set, Function function)\" is invoked after the method \"NavigableSet descendingSet()\" upon the same object, the return value of the method \"NavigableMap asMap(NavigableSet set, Function function)\" may be aliased with the return value of the method \"NavigableSet descendingSet()\".\n\nWhen the method \"Map asMap(Set set, Function function)\" is invoked after the method \"SortedSet tailSet(Object fromElement)\" upon the same object, the return value of the method \"Map asMap(Set set, Function function)\" may be aliased with the return value of the method \"SortedSet tailSet(Object fromElement)\".\n\nWhen the method \"SortedMap asMap(SortedSet set, Function function)\" is invoked after the method \"SortedSet headSet(Object toElement)\" upon the same object, the return value of the method \"SortedMap asMap(SortedSet set, Function function)\" may be aliased with the return value of the method \"SortedSet headSet(Object toElement)\".\n\nWhen the method \"BiMap filterEntries(BiMap unfiltered, Predicate entryPredicate)\" is invoked after the method \"BiMap inverse()\" upon the same object, the return value of the method \"BiMap filterEntries(BiMap unfiltered, Predicate entryPredicate)\" may be aliased with the return value of the method \"BiMap inverse()\".\n\nWhen the method \"Map filterEntries(Map unfiltered, Predicate entryPredicate)\" is invoked after the method \"Map values()\" upon the same object, the return value of the method \"Map filterEntries(Map unfiltered, Predicate entryPredicate)\" may be aliased with the return value of the method \"Map values()\".\n\nWhen the method \"NavigableMap filterEntries(NavigableMap unfiltered, Predicate entryPredicate)\" is invoked after the method \"NavigableSet descendingSet()\" upon the same object, the return value of the method \"NavigableMap filterEntries(NavigableMap unfiltered, Predicate entryPredicate)\" may be aliased with the return value of the method \"NavigableSet descendingSet()\".\n\nWhen the method \"SortedMap filterEntries(SortedMap unfiltered, Predicate entryPredicate)\" is invoked after the method \"SortedSet tailSet(Object fromElement)\" upon the same object, the return value of the method \"SortedMap filterEntries(SortedMap unfiltered, Predicate entryPredicate)\" may be aliased with the return value of the method \"SortedSet tailSet(Object fromElement)\".\n\nWhen the method \"BiMap filterKeys(BiMap unfiltered, Predicate keyPredicate)\" is invoked after the method \"BiMap inverse()\" upon the same object, the return value of the method \"BiMap filterKeys(BiMap unfiltered, Predicate keyPredicate)\" may be aliased with the return value of the method \"BiMap inverse()\".\n\nWhen the method \"Map filterKeys(Map unfiltered, Predicate keyPredicate)\" is invoked after the method \"Set keySet()\" upon the same object, the return value of the method \"Map filterKeys(Map unfiltered, Predicate keyPredicate)\" may be aliased with the return value of the method \"Set keySet()\".\n\nWhen the method \"NavigableMap filterKeys(NavigableMap unfiltered, Predicate keyPredicate)\" is invoked after the method \"NavigableSet descendingSet()\" upon the same object, the return value of the method \"NavigableMap filterKeys(NavigableMap unfiltered, Predicate keyPredicate)\" may be aliased with the return value of the method \"NavigableSet descendingSet()\".\n\nWhen the method \"SortedMap filterKeys(SortedMap unfiltered, Predicate keyPredicate)\" is invoked after the method \"SortedSet tailSet(Object fromElement)\" upon the same object, the return value of the method \"SortedMap filterKeys(SortedMap unfiltered, Predicate keyPredicate)\" may be aliased with the return value of the method \"SortedSet tailSet(Object fromElement)\".\n\nWhen the method \"BiMap filterValues(BiMap unfiltered, Predicate valuePredicate)\" is invoked after the method \"BiMap inverse()\" upon the same object, the return value of the method \"BiMap filterValues(BiMap unfiltered, Predicate valuePredicate)\" may be aliased with the return value of the method \"BiMap inverse()\".\n\nWhen the method \"Map filterValues(Map unfiltered, Predicate valuePredicate)\" is invoked after the method \"Collection values()\" upon the same object, the return value of the method \"Map filterValues(Map unfiltered, Predicate valuePredicate)\" may be aliased with the return value of the method \"Collection values()\".\n\nWhen the method \"NavigableMap filterValues(NavigableMap unfiltered, Predicate valuePredicate)\" is invoked after the method \"NavigableSet descendingSet()\" upon the same object, the return value of the method \"NavigableMap filterValues(NavigableMap unfiltered, Predicate valuePredicate)\" may be aliased with the return value of the method \"NavigableSet descendingSet()\".\n\nWhen the method \"SortedMap filterValues(SortedMap unfiltered, Predicate valuePredicate)\" is invoked after the method \"SortedSet tailSet(Object fromElement)\" upon the same object, the return value of the method \"SortedMap filterValues(SortedMap unfiltered, Predicate valuePredicate)\" may be aliased with the return value of the method \"SortedSet tailSet(Object fromElement)\".\n\nWhen the method \"ImmutableMap fromProperties(Properties properties)\" is invoked after the method \"Properties stringPropertyNames()\" upon the same object, the return value of the method \"ImmutableMap fromProperties(Properties properties)\" may be aliased with the return value of the method \"Properties stringPropertyNames()\".\n\nWhen the method \"ImmutableMap immutableEnumMap(Map map)\" is invoked after the method \"EnumSet allOf(Class elementType)\" upon the same object, the return value of the method \"ImmutableMap immutableEnumMap(Map map)\" may be aliased with the return value of the method \"EnumSet allOf(Class elementType)\".\n\nWhen the method \"Map transformEntries(Map fromMap, Maps.EntryTransformer transformer)\" is invoked after the method \"Collection values()\" upon the same object, the return value of the method \"Map transformEntries(Map fromMap, Maps.EntryTransformer transformer)\" may be aliased with the return value of the method \"Collection values()\".\n\nWhen the method \"NavigableMap transformEntries(NavigableMap fromMap, Maps.EntryTransformer transformer)\" is invoked after the method \"NavigableSet descendingSet()\" upon the same object, the return value of the method \"NavigableMap transformEntries(NavigableMap fromMap, Maps.EntryTransformer transformer)\" may be aliased with the return value of the method \"NavigableSet descendingSet()\".\n\nWhen the method \"SortedMap transformEntries(SortedMap fromMap, Maps.EntryTransformer transformer)\" is invoked after the method \"SortedSet tailSet(Object fromElement)\" upon the same object, the return value of the method \"SortedMap transformEntries(SortedMap fromMap, Maps.EntryTransformer transformer)\" may be aliased with the return value of the method \"SortedSet tailSet(Object fromElement)\".\n\nWhen the method \"Map transformValues(Map fromMap, Function function)\" is invoked after the method \"Collection values()\" upon the same object, the return value of the method \"Map transformValues(Map fromMap, Function function)\" may be aliased with the return value of the method \"Collection values()\".\n\nWhen the method \"NavigableMap transformValues(NavigableMap fromMap, Function function)\" is invoked after the method \"NavigableSet descendingSet()\" upon the same object, the return value of the method \"NavigableMap transformValues(NavigableMap fromMap, Function function)\" may be aliased with the return value of the method \"NavigableSet descendingSet()\".\n\nWhen the method \"SortedMap transformValues(SortedMap fromMap, Function function)\" is invoked after the method \"SortedSet tailSet(Object fromElement)\" upon the same object, the return value of the method \"SortedMap transformValues(SortedMap fromMap, Function function)\" may be aliased with the return value of the method \"SortedSet tailSet(Object fromElement)\".",
    "com.google.common.collect.Multimap": "When the method \"Map asMap()\" is invoked after the method \"put(K key, V value)\", the return value of \"Map asMap()\" may be aliased with the first parameter of \"boolean put(K key, V value)\".\nWhen the method \"Collection entries()\" is invoked after the method \"put(K key, V value)\", the return value of \"Collection entries()\" may be aliased with the first parameter of \"boolean put(K key, V value)\".\nWhen the method \"Collection get(K key)\" is invoked after the method \"put(K key, V value)\", the return value of \"Collection get(K key)\" may be aliased with the first parameter of \"boolean put(K key, V value)\".\nWhen the method \"Multiset keys()\" is invoked after the method \"put(K key, V value)\", the return value of \"Multiset keys()\" may be aliased with the first parameter of \"boolean put(K key, V value)\".\nWhen the method \"Set keySet()\" is invoked after the method \"put(K key, V value)\", the return value of \"Set keySet()\" may be aliased with the first parameter of \"boolean put(K key, V value)\".\nWhen the method \"Collection values()\" is invoked after the method \"put(K key, V value)\", the return value of \"Collection values()\" may be aliased with the first parameter of \"boolean put(K key, V value)\".\nWhen the method \"boolean containsEntry(Object key, Object value)\" is invoked after the method \"put(K key, V value)\", the return value of \"boolean containsEntry(Object key, Object value)\" may be aliased with the first parameter of \"boolean put(K key, V value)\".\nWhen the method \"boolean containsKey(Object key)\" is invoked after the method \"put(K key, V value)\", the return value of \"boolean containsKey(Object key)\" may be aliased with the first parameter of \"boolean put(K key, V value)\".\nWhen the method \"boolean containsValue(Object value)\" is invoked after the method \"put(K key, V value)\", the return value of \"boolean containsValue(Object value)\" may be aliased with the first parameter of \"boolean put(K key, V value)\".\nWhen the method \"boolean remove(Object key, Object value)\" is invoked after the method \"put(K key, V value)\", the return value of \"boolean remove(Object key, Object value)\" may be aliased with the first parameter of \"boolean put(K key, V value)\".\nWhen the method \"Collection removeAll(Object key)\" is invoked after the method \"put(K key, V value)\", the return value of \"Collection removeAll(Object key)\" may be aliased with the first parameter of \"boolean put(K key, V value)\".\nWhen the method \"Collection replaceValues(K key, Iterable values)\" is invoked after the method \"put(K key, V value)\", the return value of \"Collection replaceValues(K key, Iterable values)\" may be aliased with the first parameter of \"boolean put(K key, V value)\".",
    "com.google.gson.JsonObject": "The aliasing specifications for the given Java class are:\n\n- When the methods \"void add(java.lang.String property, JsonElement value)\" and \"JsonElement get(java.lang.String memberName)\" are invoked upon the same object, the return value of \"JsonElement get(java.lang.String memberName)\" may be aliased with the second parameter of \"void add(java.lang.String property, JsonElement value)\" if the method get is invoked after the method add.\n- When the methods \"void add(java.lang.String property, JsonElement value)\" and \"JsonArray getAsJsonArray(java.lang.String memberName)\" are invoked upon the same object, the return value of \"JsonArray getAsJsonArray(java.lang.String memberName)\" may be aliased with the second parameter of \"void add(java.lang.String property, JsonElement value)\" if the method getAsJsonArray is invoked after the method add.\n- When the methods \"void add(java.lang.String property, JsonElement value)\" and \"JsonObject getAsJsonObject(java.lang.String memberName)\" are invoked upon the same object, the return value of \"JsonObject getAsJsonObject(java.lang.String memberName)\" may be aliased with the second parameter of \"void add(java.lang.String property, JsonElement value)\" if the method getAsJsonObject is invoked after the method add.\n- When the methods \"void add(java.lang.String property, JsonElement value)\" and \"JsonPrimitive getAsJsonPrimitive(java.lang.String memberName)\" are invoked upon the same object, the return value of \"JsonPrimitive getAsJsonPrimitive(java.lang.String memberName)\" may be aliased with the second parameter of \"void add(java.lang.String property, JsonElement value)\" if the method getAsJsonPrimitive is invoked after the method add.\n- When the methods \"void addProperty(java.lang.String property, java.lang.Boolean value)\" and \"boolean getAsBoolean()\" are invoked upon the same object, the return value of \"boolean getAsBoolean()\" may be aliased with the second parameter of \"void addProperty(java.lang.String property, java.lang.Boolean value)\" if the method getAsBoolean is invoked after the method addProperty.\n- When the methods \"void addProperty(java.lang.String property, java.lang.Character value)\" and \"char getAsCharacter()\" are invoked upon the same object, the return value of \"char getAsCharacter()\" may be aliased with the second parameter of \"void addProperty(java.lang.String property, java.lang.Character value)\" if the method getAsCharacter is invoked after the method addProperty.\n- When the methods \"void addProperty(java.lang.String property, java.lang.Number value)\" and \"java.lang.Number getAsNumber()\" are invoked upon the same object, the return value of \"java.lang.Number getAsNumber()\" may be aliased with the second parameter of \"void addProperty(java.lang.String property, java.lang.Number value)\" if the method getAsNumber is invoked after the method addProperty.\n- When the methods \"void addProperty(java.lang.String property, java.lang.String value)\" and \"java.lang.String getAsString()\" are invoked upon the same object, the return value of \"java.lang.String getAsString()\" may be aliased with the second parameter of \"void addProperty(java.lang.String property, java.lang.String value)\" if the method getAsString is invoked after the method addProperty.",
    "com.google.gson.JsonElement": "The aliasing specifications for class JsonElement are:\n\n- The return value of \"JsonElement deepCopy()\" may be aliased with the first parameter of all the methods.\n- The return value of \"java.math.BigDecimal getAsBigDecimal()\" may be aliased with the first parameter of all the methods.\n- The return value of \"java.math.BigInteger getAsBigInteger()\" may be aliased with the first parameter of all the methods.\n- The return value of \"boolean getAsBoolean()\" may be aliased with the first parameter of all the methods.\n- The return value of \"byte getAsByte()\" may be aliased with the first parameter of all the methods.\n- The return value of \"char getAsCharacter()\" may be aliased with the first parameter of all the methods.\n- The return value of \"double getAsDouble()\" may be aliased with the first parameter of all the methods.\n- The return value of \"float getAsFloat()\" may be aliased with the first parameter of all the methods.\n- The return value of \"int getAsInt()\" may be aliased with the first parameter of all the methods.\n- The return value of \"JsonArray getAsJsonArray()\" may be aliased with the first parameter of all the methods.\n- The return value of \"JsonNull getAsJsonNull()\" may be aliased with the first parameter of all the methods.\n- The return value of \"JsonObject getAsJsonObject()\" may be aliased with the first parameter of all the methods.\n- The return value of \"JsonPrimitive getAsJsonPrimitive()\" may be aliased with the first parameter of all the methods.\n- The return value of \"long getAsLong()\" may be aliased with the first parameter of all the methods.\n- The return value of \"java.lang.Number getAsNumber()\" may be aliased with the first parameter of all the methods.\n- The return value of \"short getAsShort()\" may be aliased with the first parameter of all the methods.\n- The return value of \"java.lang.String getAsString()\" may be aliased with the first parameter of all the methods.\n- The return value of \"boolean isJsonArray()\" may be aliased with the first parameter of all the methods.\n- The return value of \"boolean isJsonNull()\" may be aliased with the first parameter of all the methods.\n- The return value of \"boolean isJsonObject()\" may be aliased with the first parameter of all the methods.\n- The return value of \"boolean isJsonPrimitive()\" may be aliased with the first parameter of all the methods.\n- The return value of \"java.lang.String toString()\" may be aliased with the first parameter of all the methods.",
    "com.jgoodies.forms.layout.CellConstraints": "When the method \"rc(int row, int col, CellConstraints.Alignment rowAlign, CellConstraints.Alignment colAlign)\" is invoked after the method \"xy(int col, int row, CellConstraints.Alignment colAlign, CellConstraints.Alignment rowAlign)\", the return value of \"CellConstraints rc(int row, int col, CellConstraints.Alignment rowAlign, CellConstraints.Alignment colAlign)\" may be aliased with the third and fourth parameters of \"CellConstraints xy(int col, int row, CellConstraints.Alignment colAlign, CellConstraints.Alignment rowAlign)\".\n\nWhen the method \"rc(int row, int col, String encodedAlignments)\" is invoked after the method \"xy(int col, int row, String encodedAlignments)\", the return value of \"CellConstraints rc(int row, int col, String encodedAlignments)\" may be aliased with the third parameter of \"CellConstraints xy(int col, int row, String encodedAlignments)\".\n\nWhen the method \"rcw(int row, int col, int colSpan, CellConstraints.Alignment rowAlign, CellConstraints.Alignment colAlign)\" is invoked after the method \"xyw(int col, int row, int colSpan, CellConstraints.Alignment colAlign, CellConstraints.Alignment rowAlign)\", the return value of \"CellConstraints rcw(int row, int col, int colSpan, CellConstraints.Alignment rowAlign, CellConstraints.Alignment colAlign)\" may be aliased with the fourth and fifth parameters of \"CellConstraints xyw(int col, int row, int colSpan, CellConstraints.Alignment colAlign, CellConstraints.Alignment rowAlign)\".\n\nWhen the method \"rcw(int row, int col, int colSpan, String encodedAlignments)\" is invoked after the method \"xyw(int col, int row, int colSpan, String encodedAlignments)\", the return value of \"CellConstraints rcw(int row, int col, int colSpan, String encodedAlignments)\" may be aliased with the fourth parameter of \"CellConstraints xyw(int col, int row, int colSpan, String encodedAlignments)\".\n\nWhen the method \"xy(int col, int row, CellConstraints.Alignment colAlign, CellConstraints.Alignment rowAlign)\" is invoked after the method \"rc(int row, int col, CellConstraints.Alignment rowAlign, CellConstraints.Alignment colAlign)\", the return value of \"CellConstraints xy(int col, int row, CellConstraints.Alignment colAlign, CellConstraints.Alignment rowAlign)\" may be aliased with the third and fourth parameters of \"CellConstraints rc(int row, int col, CellConstraints.Alignment rowAlign, CellConstraints.Alignment colAlign)\".\n\nWhen the method \"xy(int col, int row, String encodedAlignments)\" is invoked after the method \"rc(int row, int col, String encodedAlignments)\", the return value of \"CellConstraints xy(int col, int row, String encodedAlignments)\" may be aliased with the third parameter of \"CellConstraints rc(int row, int col, String encodedAlignments)\".\n\nWhen the method \"xyw(int col, int row, int colSpan, CellConstraints.Alignment colAlign, CellConstraints.Alignment rowAlign)\" is invoked after the method \"rcw(int row, int col, int colSpan, CellConstraints.Alignment rowAlign, CellConstraints.Alignment colAlign)\", the return value of \"CellConstraints xyw(int col, int row, int colSpan, CellConstraints.Alignment colAlign, CellConstraints.Alignment rowAlign)\" may be aliased with the fourth and fifth parameters of \"CellConstraints rcw(int row, int col, int colSpan, CellConstraints.Alignment rowAlign, CellConstraints.Alignment colAlign)\".\n\nWhen the method \"xyw(int col, int row, int colSpan, String encodedAlignments)\" is invoked after the method \"rcw(int row, int col, int colSpan, String encodedAlignments)\", the return value of \"CellConstraints xyw(int col, int row, int colSpan, String encodedAlignments)\" may be aliased with the fourth parameter of \"CellConstraints rcw(int row, int col, int colSpan, String encodedAlignments)\".\n\nWhen the method \"xywh(int col, int row, int colSpan, int rowSpan, CellConstraints.Alignment colAlign, CellConstraints.Alignment rowAlign)\" is invoked after the method \"rcwh(int row, int col, int rowSpan, int colSpan, CellConstraints.Alignment colAlign, CellConstraints.Alignment rowAlign)\", the return value of \"CellConstraints xywh(int col, int row, int colSpan, int rowSpan, CellConstraints.Alignment colAlign, CellConstraints.Alignment rowAlign)\" may be aliased with the fifth and sixth parameters of \"CellConstraints rcwh(int row, int col, int rowSpan, int colSpan, CellConstraints.Alignment colAlign, CellConstraints.Alignment rowAlign)\".\n\nWhen the method \"xywh(int col, int row, int colSpan, int rowSpan, String encodedAlignments)\" is invoked after the method \"rcwh(int row, int col, int rowSpan, int colSpan, String encodedAlignments)\", the return value of \"CellConstraints xywh(int col, int row, int colSpan, int rowSpan, String encodedAlignments)\" may be aliased with the fifth parameter of \"CellConstraints rcwh(int row, int col, int rowSpan, int colSpan, String encodedAlignments)\".\n\nWhen the method \"rcwh(int row, int col, int rowSpan, int colSpan, CellConstraints.Alignment colAlign, CellConstraints.Alignment rowAlign)\" is invoked after the method \"xywh(int col, int row, int colSpan, int rowSpan, CellConstraints.Alignment colAlign, CellConstraints.Alignment rowAlign)\", the return value of \"CellConstraints rcwh(int row, int col, int rowSpan, int colSpan, CellConstraints.Alignment colAlign, CellConstraints.Alignment rowAlign)\" may be aliased with the fifth and sixth parameters of \"CellConstraints xywh(int col, int row, int colSpan, int rowSpan, CellConstraints.Alignment colAlign, CellConstraints.Alignment rowAlign)\".\n\nWhen the method \"rcwh(int row, int col, int rowSpan, int colSpan, String encodedAlignments)\" is invoked after the method \"xywh(int col, int row, int colSpan, int rowSpan, String encodedAlignments)\", the return value of \"CellConstraints rcwh(int row, int col, int rowSpan, int colSpan, String encodedAlignments)\" may be aliased with the fifth parameter of \"CellConstraints xywh(int col, int row, int colSpan, int rowSpan, String encodedAlignments)\".",
    "com.mongodb.DBObject": "When the two methods have the same value of the first parameter, the return value of \"java.lang.Object get(java.lang.String key)\" may be aliased with the second parameter of \"java.lang.Object put(java.lang.String key, java.lang.Object v)\" if the method get is invoked after the method put.\n\nThe return value of \"java.lang.Object get(java.lang.String key)\" may be aliased with the first parameter of \"void putAll(BSONObject o)\" if the method get is invoked after the method putAll.\n\nThe return value of \"java.lang.Object get(java.lang.String key)\" may be aliased with the first parameter of \"void putAll(java.util.Map m)\" if the method get is invoked after the method putAll.\n\nThe return value of \"java.lang.Object get(java.lang.String key)\" may be aliased with the parameter of \"java.lang.Object removeField(java.lang.String key)\" if the method get is invoked after the method removeField.",
    "com.mongodb.BSONObject": "When the method \"java.util.Set keySet()\" is invoked after the method \"void putAll(BSONObject o)\", the return value of \"java.util.Set keySet()\" may be aliased with the first parameter of \"void putAll(BSONObject o)\".\n\nWhen the method \"java.util.Set keySet()\" is invoked after the method \"void putAll(java.util.Map m)\", the return value of \"java.util.Set keySet()\" may be aliased with the first parameter of \"void putAll(java.util.Map m)\".\n\nWhen the method \"java.lang.Object get(java.lang.String key)\" is invoked after the method \"java.lang.Object put(java.lang.String key, java.lang.Object v)\", the return value of \"java.lang.Object get(java.lang.String key)\" may be aliased with the second parameter of \"java.lang.Object put(java.lang.String key, java.lang.Object v)\".\n\nWhen the method \"java.util.Map toMap()\" is invoked after the method \"void putAll(BSONObject o)\", the return value of \"java.util.Map toMap()\" may be aliased with the first parameter of \"void putAll(BSONObject o)\".\n\nWhen the method \"java.util.Map toMap()\" is invoked after the method \"void putAll(java.util.Map m)\", the return value of \"java.util.Map toMap()\" may be aliased with the first parameter of \"void putAll(java.util.Map m)\".",
    "org.bson.BSONObject": "When the method \"java.util.Set<java.lang.String> keySet()\" is invoked after the method \"java.lang.Object put(java.lang.String key, java.lang.Object v)\", the return value of \"java.util.Set<java.lang.String> keySet()\" may be aliased with the first parameter of \"void putAll(BSONObject o)\".\n\nWhen the method \"java.util.Set<java.lang.String> keySet()\" is invoked after the method \"void putAll(BSONObject o)\", the return value of \"java.util.Set<java.lang.String> keySet()\" may be aliased with the first parameter of \"void putAll(BSONObject o)\".\n\nWhen the method \"java.util.Set<java.lang.String> keySet()\" is invoked after the method \"void putAll(java.util.Map m)\", the return value of \"java.util.Set<java.lang.String> keySet()\" may be aliased with the first parameter of \"void putAll(java.util.Map m)\".\n\nWhen the method \"java.lang.Object get(java.lang.String key)\" is invoked after the method \"java.lang.Object put(java.lang.String key, java.lang.Object v)\", the return value of \"java.lang.Object get(java.lang.String key)\" may be aliased with the second parameter of \"java.lang.Object put(java.lang.String key, java.lang.Object v)\".\n\nWhen the method \"java.lang.Object removeField(java.lang.String key)\" is invoked after the method \"java.lang.Object put(java.lang.String key, java.lang.Object v)\", the return value of \"java.lang.Object removeField(java.lang.String key)\" may be aliased with the second parameter of \"java.lang.Object put(java.lang.String key, java.lang.Object v)\".\n\nWhen the method \"void putAll(BSONObject o)\" is invoked after the method \"java.lang.Object put(java.lang.String key, java.lang.Object v)\", the return value of \"void putAll(BSONObject o)\" may be aliased with the second parameter of \"java.lang.Object put(java.lang.String key, java.lang.Object v)\".\n\nWhen the method \"void putAll(java.util.Map m)\" is invoked after the method \"java.lang.Object put(java.lang.String key, java.lang.Object v)\", the return value of \"void putAll(java.util.Map m)\" may be aliased with the second parameter of \"java.lang.Object put(java.lang.String key, java.lang.Object v)\".\n\nWhen the method \"java.util.Map toMap()\" is invoked after the method \"void putAll(BSONObject o)\", the return value of \"java.util.Map toMap()\" may be aliased with the parameter of \"void putAll(BSONObject o)\".\n\nWhen the method \"java.util.Map toMap()\" is invoked after the method \"void putAll(java.util.Map m)\", the return value of \"java.util.Map toMap()\" may be aliased with the parameter of \"void putAll(java.util.Map m)\".",
    "com.squareup.okhttp.ResponseBody": "The aliasing specifications for the given methods are:\n\n- When the methods \"byte[] bytes()\" and \"InputStream byteStream()\" are invoked upon the same object, the return value of \"InputStream byteStream()\" may be aliased with the first parameter of \"ResponseBody create(MediaType contentType, byte[] content)\" if the method byteStream is invoked after the method bytes.\n- When the methods \"byte[] bytes()\" and \"Reader charStream()\" are invoked upon the same object, the return value of \"Reader charStream()\" may be aliased with the first parameter of \"ResponseBody create(MediaType contentType, byte[] content)\" if the method charStream is invoked after the method bytes.\n- When the methods \"InputStream byteStream()\" and \"Reader charStream()\" are invoked upon the same object, the return value of \"Reader charStream()\" may be aliased with the first parameter of \"ResponseBody create(MediaType contentType, okio.BufferedSource content)\" if the method charStream is invoked after the method byteStream.\n- When the methods \"void close()\" and \"InputStream byteStream()\" are invoked upon the same object, the return value of \"InputStream byteStream()\" may be aliased with the second parameter of \"ResponseBody create(MediaType contentType, long contentLength, okio.BufferedSource content)\" if the method byteStream is invoked after the method close.\n- When the methods \"void close()\" and \"Reader charStream()\" are invoked upon the same object, the return value of \"Reader charStream()\" may be aliased with the second parameter of \"ResponseBody create(MediaType contentType, long contentLength, okio.BufferedSource content)\" if the method charStream is invoked after the method close.\n- When the methods \"long contentLength()\" and \"InputStream byteStream()\" are invoked upon the same object, the return value of \"InputStream byteStream()\" may be aliased with the second parameter of \"ResponseBody create(MediaType contentType, long contentLength, okio.BufferedSource content)\" if the method byteStream is invoked after the method contentLength.\n- When the methods \"long contentLength()\" and \"Reader charStream()\" are invoked upon the same object, the return value of \"Reader charStream()\" may be aliased with the second parameter of \"ResponseBody create(MediaType contentType, long contentLength, okio.BufferedSource content)\" if the method charStream is invoked after the method contentLength.\n- When the methods \"byte[] bytes()\", \"InputStream byteStream()\", and \"Reader charStream()\" are invoked upon the same object, the return value of \"InputStream byteStream()\" may be aliased with the first parameter of \"ResponseBody create(MediaType contentType, byte[] content)\" and the return value of \"Reader charStream()\" may be aliased with the second parameter of \"ResponseBody create(MediaType contentType, long contentLength, okio.BufferedSource content)\" if the method byteStream is invoked after the method bytes and the method charStream is invoked after the method bytes and/or byteStream.\n- When the methods \"MediaType contentType()\" and \"InputStream byteStream()\" are invoked upon the same object, the return value of \"InputStream byteStream()\" may be aliased with the second parameter of \"ResponseBody create(MediaType contentType, long contentLength, okio.BufferedSource content)\" if the method byteStream is invoked after the method contentType.\n- When the methods \"MediaType contentType()\" and \"Reader charStream()\" are invoked upon the same object, the return value of \"Reader charStream()\" may be aliased with the second parameter of \"ResponseBody create(MediaType contentType, long contentLength, okio.BufferedSource content)\" if the method charStream is invoked after the method contentType.\n- When the methods \"MediaType contentType()\" and \"byte[] bytes()\" are invoked upon the same object, the return value of \"byte[] bytes()\" may be aliased with the second parameter of \"ResponseBody create(MediaType contentType, long contentLength, okio.BufferedSource content)\" if the method bytes is invoked after the method contentType.\n- When the methods \"MediaType contentType()\" and \"okio.BufferedSource source()\" are invoked upon the same object, the return value of \"okio.BufferedSource source()\" may be aliased with the second parameter of \"ResponseBody create(MediaType contentType, long contentLength, okio.BufferedSource content)\" if the method source is invoked after the method contentType.\n- When the methods \"String string()\" and \"InputStream byteStream()\" are invoked upon the same object, the return value of \"InputStream byteStream()\" may be aliased with the first parameter of \"ResponseBody create(MediaType contentType, String content)\" if the method byteStream is invoked after the method string.\n- When the methods \"String string()\" and \"Reader charStream()\" are invoked upon the same object, the return value of \"Reader charStream()\" may be aliased with the first parameter of \"ResponseBody create(MediaType contentType, String content)\" if the method charStream is invoked after the method string.\n- When the methods \"String string()\" and \"byte[] bytes()\" are invoked upon the same object, the return value of \"byte[] bytes()\" may be aliased with the first parameter of \"ResponseBody create(MediaType contentType, String content)\" if the method bytes is invoked after the method string.\n- When the methods \"String string()\" and \"okio.BufferedSource source()\" are invoked upon the same object, the return value of \"okio.BufferedSource source()\" may be aliased with the first parameter of \"ResponseBody create(MediaType contentType, String content)\" if the method source is invoked after the method string.",
    "gnu.trove.TIntObjectHashMap": "When the method \"V get(int key)\" is invoked after the method \"V put(int key, V value)\", the return value of \"V get(int key)\" may be aliased with the second parameter of \"V put(int key, V value)\".\n\nWhen the method \"V put(int key, V value)\" is invoked after the method \"void ensureCapacity(int desiredCapacity)\", the return value of \"V put(int key, V value)\" may be aliased with the first parameter of \"void ensureCapacity(int desiredCapacity)\".\n\nWhen the method \"V put(int key, V value)\" is invoked after the method \"void rehash(int newCapacity)\", the return value of \"V put(int key, V value)\" may be aliased with the first parameter of \"void rehash(int newCapacity)\".\n\nWhen the method \"V remove(int key)\" is invoked after the method \"boolean forEachEntry(TIntObjectProcedure<V> procedure)\", the return value of \"V remove(int key)\" may be aliased with the second parameter of \"boolean forEachEntry(TIntObjectProcedure<V> procedure)\".\n\nWhen the method \"V remove(int key)\" is invoked after the method \"boolean forEachValue(TObjectProcedure<V> procedure)\", the return value of \"V remove(int key)\" may be aliased with the first parameter of \"boolean forEachValue(TObjectProcedure<V> procedure)\".\n\nWhen the method \"V remove(int key)\" is invoked after the method \"boolean retainEntries(TIntObjectProcedure<V> procedure)\", the return value of \"V remove(int key)\" may be aliased with the second parameter of \"boolean retainEntries(TIntObjectProcedure<V> procedure)\".\n\nWhen the method \"void rehash(int newCapacity)\" is invoked after the method \"void ensureCapacity(int desiredCapacity)\", the first parameter of \"void rehash(int newCapacity)\" may be aliased with the parameter of \"void ensureCapacity(int desiredCapacity)\".\n\nWhen the method \"void rehash(int newCapacity)\" is invoked after the method \"V put(int key, V value)\", the first parameter of \"void rehash(int newCapacity)\" may be aliased with the parameter of \"V put(int key, V value)\".\n\nWhen the method \"void removeAt(int index)\" is invoked after the method \"boolean forEachEntry(TIntObjectProcedure<V> procedure)\", the parameter of \"void removeAt(int index)\" may be aliased with the second parameter of \"boolean forEachEntry(TIntObjectProcedure<V> procedure)\".\n\nWhen the method \"void removeAt(int index)\" is invoked after the method \"boolean forEachValue(TObjectProcedure<V> procedure)\", the parameter of \"void removeAt(int index)\" may be aliased with the first parameter of \"boolean forEachValue(TObjectProcedure<V> procedure)\".\n\nWhen the method \"void removeAt(int index)\" is invoked after the method \"boolean retainEntries(TIntObjectProcedure<V> procedure)\", the parameter of \"void removeAt(int index)\" may be aliased with the second parameter of \"boolean retainEntries(TIntObjectProcedure<V> procedure)\".\n\nWhen the method \"int setUp(int initialCapacity)\" is invoked after the method \"void ensureCapacity(int desiredCapacity)\", the return value of \"int setUp(int initialCapacity)\" may be aliased with the parameter of \"void ensureCapacity(int desiredCapacity)\".\n\nWhen the method \"int setUp(int initialCapacity)\" is invoked after the method \"V put(int key, V value)\", the return value of \"int setUp(int initialCapacity)\" may be aliased with the second parameter of \"V put(int key, V value)\".\n\nWhen the method \"int setUp(int initialCapacity)\" is invoked after the method \"void rehash(int newCapacity)\", the return value of \"int setUp(int initialCapacity)\" may be aliased with the parameter of \"void rehash(int newCapacity)\".",
    "gnu.trove.THash": "When the two methods have the same value of the first parameter, the return value of \"java.lang.Object clone()\" may be aliased with the first parameter of \"void ensureCapacity(int desiredCapacity)\" if the method clone is invoked after the method ensureCapacity.\n\nThe return value of \"float getAutoCompactionFactor()\" may be aliased with the first parameter of \"void setAutoCompactionFactor(float factor)\" if the method getAutoCompactionFactor is invoked after the method setAutoCompactionFactor.\n\nThe return value of \"boolean isEmpty()\" may be aliased with the first parameter of \"void ensureCapacity(int desiredCapacity)\" if the method isEmpty is invoked after the method ensureCapacity.\n\nThe return value of \"int size()\" may be aliased with the first parameter of \"void ensureCapacity(int desiredCapacity)\" if the method size is invoked after the method ensureCapacity.\n\nThe return value of \"int size()\" may be aliased with the first parameter of \"void rehash(int newCapacity)\" if the method size is invoked after the method rehash.\n\nThe return value of \"void trimToSize()\" may be aliased with the first parameter of \"void compact()\" if the method trimToSize is invoked after the method compact.",
    "gnu.trove.TPrimitiveHash": "When the method \"void compact()\" is invoked after the method \"void removeAt(int index)\", the return value of \"int capacity()\" may be aliased with the parameter of \"void ensureCapacity(int desiredCapacity)\".\n\nWhen the method \"void compact()\" is invoked after the method \"void removeAt(int index)\", the return value of \"int capacity()\" may be aliased with the parameter of \"abstract void rehash(int newCapacity)\".\n\nWhen the method \"void compact()\" is invoked after the method \"void removeAt(int index)\", the return value of \"int capacity()\" may be aliased with the parameter of \"void setAutoCompactionFactor(float factor)\".\n\nWhen the method \"void ensureCapacity(int desiredCapacity)\" is invoked after the method \"void removeAt(int index)\", the return value of \"int capacity()\" may be aliased with the parameter of \"abstract void rehash(int newCapacity)\".\n\nWhen the method \"void ensureCapacity(int desiredCapacity)\" is invoked after the method \"void removeAt(int index)\", the return value of \"int capacity()\" may be aliased with the parameter of \"void setAutoCompactionFactor(float factor)\".\n\nWhen the method \"abstract void rehash(int newCapacity)\" is invoked after the method \"void removeAt(int index)\", the return value of \"int capacity()\" may be aliased with the parameter of \"void setAutoCompactionFactor(float factor)\".",
    "gnu.trove.TIntHash": "The aliasing specifications are:\n- The return value of \"int computeHashCode(int val)\" may be aliased with the first parameter of \"protected int index(int val)\" if the method computeHashCode is invoked after the method index.\n- The return value of \"int computeHashCode(int val)\" may be aliased with the first parameter of \"protected int insertionIndex(int val)\" if the method computeHashCode is invoked after the method insertionIndex.\n- The return value of \"boolean contains(int val)\" may be aliased with the first parameter of \"protected int index(int val)\" if the method contains is invoked after the method index.\n- The return value of \"boolean contains(int val)\" may be aliased with the first parameter of \"protected int insertionIndex(int val)\" if the method contains is invoked after the method insertionIndex.\n- The parameter \"TIntProcedure procedure\" of \"boolean forEach(TIntProcedure procedure)\" may be aliased with the parameter \"TIntProcedure procedure\" of \"abstract void rehash(int newCapacity)\" if the method forEach is invoked after the method rehash.\n- The parameter \"TIntProcedure procedure\" of \"boolean forEach(TIntProcedure procedure)\" may be aliased with the parameter \"TIntProcedure procedure\" of \"void compact()\" if the method forEach is invoked after the method compact.\n- The parameter \"TIntProcedure procedure\" of \"boolean forEach(TIntProcedure procedure)\" may be aliased with the parameter \"TIntProcedure procedure\" of \"void ensureCapacity(int desiredCapacity)\" if the method forEach is invoked after the method ensureCapacity.\n- The parameter \"TIntProcedure procedure\" of \"boolean forEach(TIntProcedure procedure)\" may be aliased with the parameter \"TIntProcedure procedure\" of \"void trimToSize()\" if the method forEach is invoked after the method trimToSize.\n- The return value of \"protected int index(int val)\" may be aliased with the first parameter of \"protected void removeAt(int index)\" if the method index is invoked after the method removeAt.\n- The return value of \"protected int insertionIndex(int val)\" may be aliased with the first parameter of \"protected void removeAt(int index)\" if the method insertionIndex is invoked after the method removeAt.\n- The return value of \"int setUp(int initialCapacity)\" may be aliased with the parameter \"int initialCapacity\" of \"void compact()\" if the method setUp is invoked after the method compact.\n- The return value of \"int setUp(int initialCapacity)\" may be aliased with the parameter \"int desiredCapacity\" of \"void ensureCapacity(int desiredCapacity)\" if the method setUp is invoked after the method ensureCapacity.\n- The return value of \"int setUp(int initialCapacity)\" may be aliased with the parameter \"int initialCapacity\" of \"void trimToSize()\" if the method setUp is invoked after the method trimToSize.\n- The return value of \"int setUp(int initialCapacity)\" may be aliased with the parameter \"int newCapacity\" of \"abstract void rehash(int newCapacity)\" if the method setUp is invoked after the method rehash.\n- The parameter \"float factor\" of \"void setAutoCompactionFactor(float factor)\" may be aliased with the return value of \"float getAutoCompactionFactor()\" if the method setAutoCompactionFactor is invoked after the method getAutoCompactionFactor.\n- The return value of \"int size()\" may be aliased with the parameter \"int initialCapacity\" of \"int setUp(int initialCapacity)\" if the method size is invoked after the method setUp.",
    "gnu.trove.map.TIntObjectMap": "The aliasing specifications for the given Java class \"TIntObjectMap\" are:\n\n- When the method \"void put(int key, V value)\" is invoked before the method \"V get(int key)\", the return value of \"V get(int key)\" may be aliased with the second parameter of \"void put(int key, V value)\".\n- When the method \"V put(int key, V value)\" is invoked before the method \"V putIfAbsent(int key, V value)\", the return value of \"V putIfAbsent(int key, V value)\" may be aliased with the second parameter of \"V put(int key, V value)\".\n- When the method \"void put(int key, V value)\" is invoked before the method \"V remove(int key)\", the return value of \"V remove(int key)\" may be aliased with the second parameter of \"void put(int key, V value)\".\n- When the method \"void put(int key, V value)\" is invoked before the method \"void transformValues(TObjectFunction<V,V> function)\", the return value of \"void transformValues(TObjectFunction<V,V> function)\" may be aliased with the second parameter of \"void put(int key, V value)\".\n- When the method \"V putIfAbsent(int key, V value)\" is invoked before the method \"V get(int key)\", the return value of \"V get(int key)\" may be aliased with the second parameter of \"V putIfAbsent(int key, V value)\".\n- When the method \"V putIfAbsent(int key, V value)\" is invoked before the method \"V remove(int key)\", the return value of \"V remove(int key)\" may be aliased with the second parameter of \"V putIfAbsent(int key, V value)\".\n- When the method \"V putIfAbsent(int key, V value)\" is invoked before the method \"void transformValues(TObjectFunction<V,V> function)\", the return value of \"void transformValues(TObjectFunction<V,V> function)\" may be aliased with the second parameter of \"V putIfAbsent(int key, V value)\".\n- When the method \"V remove(int key)\" is invoked before the method \"V put(int key, V value)\", the return value of \"void put(int key, V value)\" may be aliased with the first parameter of \"V remove(int key)\".\n- When the method \"V remove(int key)\" is invoked before the method \"V putIfAbsent(int key, V value)\", the return value of \"V putIfAbsent(int key, V value)\" may be aliased with the first parameter of \"V remove(int key)\".",
    "gnu.trove.map.hash.TIntObjectHashMap": "When \"V get(int key)\" is invoked after \"V put(int key, V value)\", the return value of \"V get(int key)\" may be aliased with the second parameter of \"V put(int key, V value)\".\n\nWhen \"V get(int key)\" is invoked after \"V remove(int key)\", the return value of \"V get(int key)\" may be aliased with the second parameter of \"V remove(int key)\".\n\nWhen \"V get(int key)\" is invoked after \"V put(int key, V value)\" and \"void removeAt(int index)\", the return value of \"V get(int key)\" may be aliased with the second parameter of \"V put(int key, V value)\" and the first parameter of \"void removeAt(int index)\".\n\nWhen \"V put(int key, V value)\" is invoked after \"V remove(int key)\", the return value of \"V put(int key, V value)\" may be aliased with the second parameter of \"V remove(int key)\".\n\nWhen \"void removeAt(int index)\" is invoked after \"V put(int key, V value)\", the first parameter of \"void removeAt(int index)\" may be aliased with the first parameter of \"V put(int key, V value)\".\n\nWhen \"void removeAt(int index)\" is invoked after \"V remove(int key)\", the first parameter of \"void removeAt(int index)\" may be aliased with the second parameter of \"V remove(int key)\".",
    "java.awt.image.BufferedImage": "When the method \"void addTileObserver(TileObserver to)\" is invoked after the method \"void removeTileObserver(TileObserver to)\", the return value of \"WritableRaster getWritableTile(int tileX, int tileY)\" may be aliased with the first parameter of \"void addTileObserver(TileObserver to)\".\n\nWhen the method \"WritableRaster copyData(WritableRaster outRaster)\" is invoked after the method \"void coerceData(boolean isAlphaPremultiplied)\", the return value of \"WritableRaster copyData(WritableRaster outRaster)\" may be aliased with the parameter of \"void coerceData(boolean isAlphaPremultiplied)\".\n\nWhen the method \"WritableRaster copyData(WritableRaster outRaster)\" is invoked after the method \"void setData(Raster r)\", the return value of \"WritableRaster copyData(WritableRaster outRaster)\" may be aliased with the parameter of \"void setData(Raster r)\".\n\nWhen the method \"Graphics2D createGraphics()\" is invoked after the method \"WritableRaster getWritableTile(int tileX, int tileY)\", the return value of \"Graphics2D createGraphics()\" may be aliased with the first parameter of \"WritableRaster getWritableTile(int tileX, int tileY)\".\n\nWhen the method \"Raster getData()\" is invoked after the method \"WritableRaster getWritableTile(int tileX, int tileY)\", the return value of \"Raster getData()\" may be aliased with the first parameter of \"WritableRaster getWritableTile(int tileX, int tileY)\".\n\nWhen the method \"Raster getData(Rectangle rect)\" is invoked after the method \"WritableRaster getWritableTile(int tileX, int tileY)\", the return value of \"Raster getData(Rectangle rect)\" may be aliased with the first parameter of \"WritableRaster getWritableTile(int tileX, int tileY)\".\n\nWhen the method \"int getRGB(int x, int y)\" is invoked after the method \"void setRGB(int x, int y, int rgb)\", the return value of \"int getRGB(int x, int y)\" may be aliased with the third parameter of \"void setRGB(int x, int y, int rgb)\".\n\nWhen the method \"int[] getRGB(int startX, int startY, int w, int h, int[] rgbArray, int offset, int scansize)\" is invoked after the method \"void setRGB(int x, int y, int rgb)\", the return value of \"int[] getRGB(int startX, int startY, int w, int h, int[] rgbArray, int offset, int scansize)\" may be aliased with the third parameter of \"void setRGB(int x, int y, int rgb)\".\n\nWhen the method \"WritableRaster getWritableTile(int tileX, int tileY)\" is invoked after the method \"void releaseWritableTile(int tileX, int tileY)\", the return value of \"WritableRaster getWritableTile(int tileX, int tileY)\" may be aliased with the first parameter of \"void releaseWritableTile(int tileX, int tileY)\".\n\nWhen the method \"WritableRaster getWritableTile(int tileX, int tileY)\" is invoked after the method \"boolean isTileWritable(int tileX, int tileY)\", the return value of \"WritableRaster getWritableTile(int tileX, int tileY)\" may be aliased with the parameter of \"boolean isTileWritable(int tileX, int tileY)\".\n\nWhen the method \"void releaseWritableTile(int tileX, int tileY)\" is invoked after the method \"WritableRaster getWritableTile(int tileX, int tileY)\", the return value of \"void releaseWritableTile(int tileX, int tileY)\" may be aliased with the first parameter of \"WritableRaster getWritableTile(int tileX, int tileY)\".",
    "java.awt.Image": "When the two methods have the same value of the first parameter, the return value of \"float getAccelerationPriority()\" may be aliased with the parameter of \"void setAccelerationPriority(float priority)\" if the method getAccelerationPriority is invoked after the method setAccelerationPriority.\n\nWhen the two methods have the same value of the first parameter, the return value of \"ImageCapabilities getCapabilities(GraphicsConfiguration gc)\" may be aliased with the second parameter of \"void flush()\" if the method getCapabilities is invoked after the method flush.\n\nThe return value of \"Graphics getGraphics()\" may be aliased with the first parameter of \"void flush()\" if the method getGraphics is invoked after the method flush.\n\nThe return value of \"int getHeight(ImageObserver observer)\" may be aliased with the second parameter of \"void flush()\" if the method getHeight is invoked after the method flush.\n\nThe return value of \"Object getProperty(String name, ImageObserver observer)\" may be aliased with the second parameter of \"void flush()\" if the method getProperty is invoked after the method flush.\n\nThe return value of \"Image getScaledInstance(int width, int height, int hints)\" may be aliased with the second parameter of \"void flush()\" if the method getScaledInstance is invoked after the method flush.\n\nThe return value of \"ImageProducer getSource()\" may be aliased with the second parameter of \"void flush()\" if the method getSource is invoked after the method flush.\n\nThe return value of \"int getWidth(ImageObserver observer)\" may be aliased with the second parameter of \"void flush()\" if the method getWidth is invoked after the method flush.",
    "java.lang.Iterable": "When the method \"Spliterator spliterator()\" is invoked after the method \"Iterator iterator()\", the return value of \"Spliterator spliterator()\" may be aliased with the first parameter of \"void forEach(Consumer action)\".\n\nWhen the method \"Spliterator spliterator()\" is invoked after the method \"Iterator iterator()\", the return value of \"Spliterator spliterator()\" may be aliased with the parameter of the same type of \"void forEach(Consumer action)\".",
    "java.lang.ProcessBuilder": "When we invoke the method command after method command upon the same object, the return value of the method command is aliased with the first parameter of the method command if the method command is invoked after the method command.\n\nWhen we invoke the method directory after method command upon the same object, the return value of the method directory is aliased with the parameter of the method command if the method directory is invoked after the method command.\n\nWhen we invoke the method inheritIO after method command upon the same object, the return value of the method inheritIO may be aliased with the parameter of the method command if the method inheritIO is invoked after the method command.\n\nWhen we invoke the method redirectError after method command upon the same object, the return value of the method redirectError is aliased with the parameter of the method command if the method redirectError is invoked after the method command.\n\nWhen we invoke the method redirectError after method redirectError upon the same object, the return value of the method redirectError is aliased with the parameter of the method redirectError if the method redirectError is invoked after the method redirectError.\n\nWhen we invoke the method redirectErrorStream after method command upon the same object, the return value of the method redirectErrorStream is aliased with the parameter of the method command if the method redirectErrorStream is invoked after the method command.\n\nWhen we invoke the method redirectInput after method command upon the same object, the return value of the method redirectInput is aliased with the parameter of the method command if the method redirectInput is invoked after the method command.\n\nWhen we invoke the method redirectInput after method redirectInput upon the same object, the return value of the method redirectInput is aliased with the parameter of the method redirectInput if the method redirectInput is invoked after the method redirectInput.\n\nWhen we invoke the method redirectOutput after method command upon the same object, the return value of the method redirectOutput is aliased with the parameter of the method command if the method redirectOutput is invoked after the method command.\n\nWhen we invoke the method redirectOutput after method redirectOutput upon the same object, the return value of the method redirectOutput is aliased with the parameter of the method redirectOutput if the method redirectOutput is invoked after the method redirectOutput.\n\nWhen we invoke the method start after method command upon the same object, the return value of the method start may be aliased with the parameter of the method command if the method start is invoked after the method command.",
    "java.lang.StringBuffer": "The aliasing specifications are:\n\n- When the method \"append(char[] str)\" is invoked after the method \"getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\", the return value of \"append(char[] str)\" may be aliased with the third parameter of \"getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\".\n- When the method \"append(CharSequence s, int start, int end)\" is invoked after the method \"getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\", the return value of \"append(CharSequence s, int start, int end)\" may be aliased with the third parameter of \"getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\".\n- When the method \"delete(int start, int end)\" is invoked after the method \"getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\", the third parameter of \"getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\" may be aliased with the first and second parameters of \"delete(int start, int end)\".\n- When the method \"deleteCharAt(int index)\" is invoked after the method \"getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\", the third parameter of \"getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\" may be aliased with the first parameter of \"deleteCharAt(int index)\".\n- When the method \"insert(int offset, char[] str, int offset, int len)\" is invoked after the method \"getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\", the return value of \"insert(int offset, char[] str, int offset, int len)\" may be aliased with the third parameter of \"getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\".\n- When the method \"insert(int dstOffset, CharSequence s, int start, int end)\" is invoked after the method \"getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\", the return value of \"insert(int dstOffset, CharSequence s, int start, int end)\" may be aliased with the third parameter of \"getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\".\n- When the method \"replace(int start, int end, String str)\" is invoked after the method \"getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\", the third parameter of \"getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\" may be aliased with the first and second parameters of \"replace(int start, int end, String str)\".\n- When the method \"substring(int start)\" is invoked after the method \"getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\", the return value of \"substring(int start)\" may be aliased with the third parameter of \"getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\".\n- When the method \"substring(int start, int end)\" is invoked after the method \"getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\", the return value of \"substring(int start, int end)\" may be aliased with the third parameter of \"getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\".",
    "java.lang.StringBuilder": "The aliasing specifications are:\n- The return value of \"StringBuilder append(boolean b)\" may be aliased with the second parameter of \"StringBuilder insert(int offset, boolean b)\" if the method append is invoked after the method insert.\n- The return value of \"StringBuilder append(char c)\" may be aliased with the second parameter of \"StringBuilder insert(int offset, char c)\" if the method append is invoked after the method insert.\n- The return value of \"StringBuilder append(char[] str)\" may be aliased with the second parameter of \"StringBuilder insert(int offset, char[] str)\" if the method append is invoked after the method insert.\n- The return value of \"StringBuilder append(char[] str, int offset, int len)\" may be aliased with the third parameter of \"StringBuilder insert(int index, char[] str, int offset, int len)\" if the method append is invoked after the method insert.\n- The return value of \"StringBuilder append(CharSequence s)\" may be aliased with the second parameter of \"StringBuilder insert(int dstOffset, CharSequence s)\" if the method append is invoked after the method insert.\n- The return value of \"StringBuilder append(CharSequence s, int start, int end)\" may be aliased with the second parameter of \"StringBuilder insert(int dstOffset, CharSequence s, int start, int end)\" if the method append is invoked after the method insert.\n- The return value of \"StringBuilder append(double d)\" may be aliased with the second parameter of \"StringBuilder insert(int offset, double d)\" if the method append is invoked after the method insert.\n- The return value of \"StringBuilder append(float f)\" may be aliased with the second parameter of \"StringBuilder insert(int offset, float f)\" if the method append is invoked after the method insert.\n- The return value of \"StringBuilder append(int i)\" may be aliased with the second parameter of \"StringBuilder insert(int offset, int i)\" if the method append is invoked after the method insert.\n- The return value of \"StringBuilder append(long lng)\" may be aliased with the second parameter of \"StringBuilder insert(int offset, long l)\" if the method append is invoked after the method insert.\n- The return value of \"StringBuilder append(Object obj)\" may be aliased with the second parameter of \"StringBuilder insert(int offset, Object obj)\" if the method append is invoked after the method insert.\n- The return value of \"StringBuilder append(String str)\" may be aliased with the second parameter of \"StringBuilder insert(int offset, String str)\" if the method append is invoked after the method insert.\n- The return value of \"StringBuilder append(StringBuffer sb)\" may be aliased with the second parameter of \"StringBuilder insert(int offset, StringBuffer sb)\" if the method append is invoked after the method insert.\n- The return value of \"StringBuilder appendCodePoint(int codePoint)\" may be aliased with the second parameter of \"StringBuilder insert(int offset, int codePoint)\" if the method append is invoked after the method insert.\n- The return value of \"StringBuilder delete(int start, int end)\" may be aliased with the first parameter of \"StringBuilder insert(int offset, CharSequence s)\" if the method delete is invoked after the method insert.\n- The return value of \"StringBuilder delete(int start, int end)\" may be aliased with the second parameter of \"StringBuilder replace(int start, int end, String str)\" if the method delete is invoked after the method replace.\n- The return value of \"StringBuilder deleteCharAt(int index)\" may be aliased with the first parameter of \"StringBuilder insert(int offset, CharSequence s)\" if the method deleteCharAt is invoked after the method insert.\n- The return value of \"StringBuilder deleteCharAt(int index)\" may be aliased with the second parameter of \"StringBuilder replace(int start, int end, String str)\" if the method deleteCharAt is invoked after the method replace.\n- The return value of \"StringBuilder insert(int offset, boolean b)\" may be aliased with the second parameter of \"StringBuilder append(boolean b)\" if the method insert is invoked after the method append.\n- The return value of \"StringBuilder insert(int offset, char c)\" may be aliased with the second parameter of \"StringBuilder append(char c)\" if the method insert is invoked after the method append.\n- The return value of \"StringBuilder insert(int offset, char[] str)\" may be aliased with the second parameter of \"StringBuilder append(char[] str)\" if the method insert is invoked after the method append.\n- The return value of \"StringBuilder insert(int index, char[] str, int offset, int len)\" may be aliased with the second parameter of \"StringBuilder append(char[] str, int offset, int len)\" if the method insert is invoked after the method append.\n- The return value of \"StringBuilder insert(int dstOffset, CharSequence s)\" may be aliased with the second parameter of \"StringBuilder append(CharSequence s)\" if the method insert is invoked after the method append.\n- The return value of \"StringBuilder insert(int dstOffset, CharSequence s, int start, int end)\" may be aliased with the second parameter of \"StringBuilder append(CharSequence s, int start, int end)\" if the method insert is invoked after the method append.\n- The return value of \"StringBuilder insert(int offset, double d)\" may be aliased with the second parameter of \"StringBuilder append(double d)\" if the method insert is invoked after the method append.\n- The return value of \"StringBuilder insert(int offset, float f)\" may be aliased with the second parameter of \"StringBuilder append(float f)\" if the method insert is invoked after the method append.\n- The return value of \"StringBuilder insert(int offset, int i)\" may be aliased with the second parameter of \"StringBuilder append(int i)\" if the method insert is invoked after the method append.\n- The return value of \"StringBuilder insert(int offset, long l)\" may be aliased with the second parameter of \"StringBuilder append(long lng)\" if the method insert is invoked after the method append.\n- The return value of \"StringBuilder insert(int offset, Object obj)\" may be aliased with the second parameter of \"StringBuilder append(Object obj)\" if the method insert is invoked after the method append.\n- The return value of \"StringBuilder insert(int offset, String str)\" may be aliased with the second parameter of \"StringBuilder append(String str)\" if the method insert is invoked after the method append.\n- The return value of \"int indexOf(String str)\" may be aliased with the second parameter of \"StringBuilder replace(int start, int end, String str)\" if the method indexOf is invoked after the method replace.\n- The return value of \"int indexOf(String str, int fromIndex)\" may be aliased with the second parameter of \"StringBuilder replace(int start, int end, String str)\" if the method indexOf is invoked after the method replace.\n- The return value of \"int lastIndexOf(String str)\" may be aliased with the second parameter of \"StringBuilder replace(int start, int end, String str)\" if the method lastIndexOf is invoked after the method replace.\n- The return value of \"int lastIndexOf(String str, int fromIndex)\" may be aliased with the second parameter of \"StringBuilder replace(int start, int end, String str)\" if the method lastIndexOf is invoked after the method replace.\n- The return value of \"int length()\" may be aliased with the first parameter of \"StringBuilder delete(int start, int end)\" if the method length is invoked after the method delete.\n- The return value of \"int length()\" may be aliased with the second parameter of \"StringBuilder replace(int start, int end, String str)\" if the method length is invoked after the method replace.\n- The return value of \"int length()\" may be aliased with the second parameter of \"StringBuilder setLength(int newLength)\" if the method length is invoked after the method setLength.\n- The return value of \"StringBuilder replace(int start, int end, String str)\" may be aliased with the first parameter of \"StringBuilder insert(int offset, CharSequence s)\" if the method replace is invoked after the method insert.\n- The return value of \"StringBuilder replace(int start, int end, String str)\" may be aliased with the second parameter of \"StringBuilder delete(int start, int end)\" if the method replace is invoked after the method delete.\n- The return value of \"StringBuilder reverse()\" may be aliased with the first parameter of \"StringBuilder insert(int offset, CharSequence s)\" if the method reverse is invoked after the method insert.\n- The return value of \"StringBuilder reverse()\" may be aliased with the second parameter of \"StringBuilder replace(int start, int end, String str)\" if the method reverse is invoked after the method replace.\n- The return value of \"CharSequence subSequence(int start, int end)\" may be aliased with the second parameter of \"StringBuilder insert(int dstOffset, CharSequence s, int start, int end)\" if the method subSequence is invoked after the method insert.\n- The return value of \"CharSequence subSequence(int start, int end)\" may be aliased with the second parameter of \"StringBuilder replace(int start, int end, String str)\" if the method subSequence is invoked after the method replace.\n- The return value of \"String substring(int start)\" may be aliased with the second parameter of \"StringBuilder insert(int offset, CharSequence s)\" if the method substring is invoked after the method insert.\n- The return value of \"String substring(int start)\" may be aliased with the second parameter of \"StringBuilder replace(int start, int end, String str)\" if the method substring is invoked after the method replace.\n- The return value of \"String substring(int start, int end)\" may be aliased with the second parameter of \"StringBuilder insert(int dstOffset, CharSequence s, int start, int end)\" if the method substring is invoked after the method insert.\n- The return value of \"String substring(int start, int end)\" may be aliased with the second parameter of \"StringBuilder replace(int start, int end, String str)\" if the method substring is invoked after the method replace.",
    "java.lang.Thread": "No aliasing specification can be derived from the given Java class.",
    "java.lang.ThreadLocal": "When the method \"T get()\" is invoked after the method \"void set(T value)\", the return value of \"T get()\" may be aliased with the first parameter of \"void set(T value)\".\n\nWhen the method \"T get()\" is invoked after the method \"ThreadLocal withInitial(Supplier supplier)\", the return value of \"T get()\" may be aliased with the return value of \"Supplier supplier\" passed to \"ThreadLocal withInitial(Supplier supplier)\".\n\nWhen the method \"T initialValue()\" is invoked after the method \"ThreadLocal withInitial(Supplier supplier)\", the return value of \"T initialValue()\" may be aliased with the return value of \"Supplier supplier\" passed to \"ThreadLocal withInitial(Supplier supplier)\".\n\nWhen the method \"void remove()\" is invoked after the method \"void set(T value)\", the second parameter of \"void set(T value)\" may be aliased with the first parameter of \"void remove()\".",
    "java.lang.Throwable": "When the method \"void addSuppressed(Throwable exception)\" is invoked before the method \"Throwable fillInStackTrace()\", the return value of \"Throwable fillInStackTrace()\" may be aliased with the first parameter of \"void addSuppressed(Throwable exception)\".\nWhen the method \"void addSuppressed(Throwable exception)\" is invoked before the method \"Throwable getCause()\", the return value of \"Throwable getCause()\" may be aliased with the first parameter of \"void addSuppressed(Throwable exception)\".\nWhen the method \"void addSuppressed(Throwable exception)\" is invoked before the method \"String getLocalizedMessage()\", the return value of \"String getLocalizedMessage()\" may be aliased with the first parameter of \"void addSuppressed(Throwable exception)\".\nWhen the method \"void addSuppressed(Throwable exception)\" is invoked before the method \"String getMessage()\", the return value of \"String getMessage()\" may be aliased with the first parameter of \"void addSuppressed(Throwable exception)\".\nWhen the method \"void addSuppressed(Throwable exception)\" is invoked before the method \"StackTraceElement[] getStackTrace()\", the return value of \"StackTraceElement[] getStackTrace()\" may be aliased with the first parameter of \"void addSuppressed(Throwable exception)\".\nWhen the method \"void addSuppressed(Throwable exception)\" is invoked before the method \"Throwable[] getSuppressed()\", the return value of \"Throwable[] getSuppressed()\" may be aliased with the first parameter of \"void addSuppressed(Throwable exception)\".\nWhen the method \"void addSuppressed(Throwable exception)\" is invoked before the method \"Throwable initCause(Throwable cause)\", the return value of \"Throwable initCause(Throwable cause)\" may be aliased with the first parameter of \"void addSuppressed(Throwable exception)\".\nWhen the method \"void addSuppressed(Throwable exception)\" is invoked before the method \"void printStackTrace()\", the return value of \"void printStackTrace()\" may be aliased with the first parameter of \"void addSuppressed(Throwable exception)\".\nWhen the method \"void addSuppressed(Throwable exception)\" is invoked before the method \"void printStackTrace(PrintStream s)\", the return value of \"void printStackTrace(PrintStream s)\" may be aliased with the first parameter of \"void addSuppressed(Throwable exception)\".\nWhen the method \"void addSuppressed(Throwable exception)\" is invoked before the method \"void printStackTrace(PrintWriter s)\", the return value of \"void printStackTrace(PrintWriter s)\" may be aliased with the first parameter of \"void addSuppressed(Throwable exception)\".\nWhen the method \"void addSuppressed(Throwable exception)\" is invoked before the method \"void setStackTrace(StackTraceElement[] stackTrace)\", the return value of \"void setStackTrace(StackTraceElement[] stackTrace)\" may be aliased with the first parameter of \"void addSuppressed(Throwable exception)\".\nWhen the method \"void addSuppressed(Throwable exception)\" is invoked before the method \"String toString()\", the return value of \"String toString()\" may be aliased with the first parameter of \"void addSuppressed(Throwable exception)\".",
    "java.lang.reflect.Field": "The aliasing specifications are:\n\n- The return value of \"Object get(Object obj)\" may be aliased with the first parameter of \"void set(Object obj, Object value)\" if the method get is invoked after the method set.\n- The return value of \"boolean getBoolean(Object obj)\" may be aliased with the first parameter of \"void setBoolean(Object obj, boolean z)\" if the method getBoolean is invoked after the method setBoolean.\n- The return value of \"byte getByte(Object obj)\" may be aliased with the first parameter of \"void setByte(Object obj, byte b)\" if the method getByte is invoked after the method setByte.\n- The return value of \"char getChar(Object obj)\" may be aliased with the first parameter of \"void setChar(Object obj, char c)\" if the method getChar is invoked after the method setChar.\n- The return value of \"double getDouble(Object obj)\" may be aliased with the first parameter of \"void setDouble(Object obj, double d)\" if the method getDouble is invoked after the method setDouble.\n- The return value of \"float getFloat(Object obj)\" may be aliased with the first parameter of \"void setFloat(Object obj, float f)\" if the method getFloat is invoked after the method setFloat.\n- The return value of \"int getInt(Object obj)\" may be aliased with the first parameter of \"void setInt(Object obj, int i)\" if the method getInt is invoked after the method setInt.\n- The return value of \"long getLong(Object obj)\" may be aliased with the first parameter of \"void setLong(Object obj, long l)\" if the method getLong is invoked after the method setLong.\n- The return value of \"short getShort(Object obj)\" may be aliased with the first parameter of \"void setShort(Object obj, short s)\" if the method getShort is invoked after the method setShort.",
    "java.io.Closeable": "There is only one method for the given Java class, so there are no aliasing specifications.",
    "java.net.HttpCookie": "When the method \"List parse(String header)\" is invoked after the method \"void setComment(String purpose)\", the return value of \"List parse(String header)\" may be aliased with the first parameter of \"void setComment(String purpose)\".\n\nWhen the method \"List parse(String header)\" is invoked after the method \"void setCommentURL(String purpose)\", the return value of \"List parse(String header)\" may be aliased with the first parameter of \"void setCommentURL(String purpose)\".\n\nWhen the method \"List parse(String header)\" is invoked after the method \"void setDiscard(boolean discard)\", the return value of \"List parse(String header)\" may be aliased with the first parameter of \"void setDiscard(boolean discard)\".\n\nWhen the method \"List parse(String header)\" is invoked after the method \"void setDomain(String pattern)\", the return value of \"List parse(String header)\" may be aliased with the first parameter of \"void setDomain(String pattern)\".\n\nWhen the method \"List parse(String header)\" is invoked after the method \"void setHttpOnly(boolean httpOnly)\", the return value of \"List parse(String header)\" may be aliased with the first parameter of \"void setHttpOnly(boolean httpOnly)\".\n\nWhen the method \"List parse(String header)\" is invoked after the method \"void setMaxAge(long expiry)\", the return value of \"List parse(String header)\" may be aliased with the first parameter of \"void setMaxAge(long expiry)\".\n\nWhen the method \"List parse(String header)\" is invoked after the method \"void setPath(String uri)\", the return value of \"List parse(String header)\" may be aliased with the first parameter of \"void setPath(String uri)\".\n\nWhen the method \"List parse(String header)\" is invoked after the method \"void setPortlist(String ports)\", the return value of \"List parse(String header)\" may be aliased with the first parameter of \"void setPortlist(String ports)\".\n\nWhen the method \"List parse(String header)\" is invoked after the method \"void setSecure(boolean flag)\", the return value of \"List parse(String header)\" may be aliased with the first parameter of \"void setSecure(boolean flag)\".\n\nWhen the method \"List parse(String header)\" is invoked after the method \"void setValue(String newValue)\", the return value of \"List parse(String header)\" may be aliased with the first parameter of \"void setValue(String newValue)\".\n\nWhen the method \"List parse(String header)\" is invoked after the method \"void setVersion(int v)\", the return value of \"List parse(String header)\" may be aliased with the first parameter of \"void setVersion(int v)\".",
    "java.net.HttpURLConnection": "The aliasing specifications are:\n- No aliasing specification is provided for the method pair \"void disconnect()\" and \"InputStream getErrorStream()\".\n- No aliasing specification is provided for the method pair \"boolean getFollowRedirects()\" and \"String getHeaderField(int n)\".\n- No aliasing specification is provided for the method pair \"long getHeaderFieldDate(String name, long Default)\" and \"String getHeaderFieldKey(int n)\".\n- When the two methods have the same value of the first parameter, the return value of \"String getHeaderField(int n)\" may be aliased with the second parameter of \"void addRequestProperty(String key, String value)\" if the method getHeaderField is invoked after the method addRequestProperty.\n- No aliasing specification is provided for the method pair \"boolean getInstanceFollowRedirects()\" and \"Permission getPermission()\".\n- No aliasing specification is provided for the method pair \"String getRequestMethod()\" and \"int getResponseCode()\".\n- No aliasing specification is provided for the method pair \"String getResponseMessage()\" and \"void setChunkedStreamingMode(int chunklen)\".\n- No aliasing specification is provided for the method pair \"void setFixedLengthStreamingMode(int contentLength)\" and \"void setFixedLengthStreamingMode(long contentLength)\".\n- No aliasing specification is provided for the method pair \"void setFollowRedirects(boolean set)\" and \"void setInstanceFollowRedirects(boolean followRedirects)\".\n- No aliasing specification is provided for the method pair \"void setRequestMethod(String method)\" and \"boolean usingProxy()\".\n- When the two methods have the same value of the first parameter, the return value of \"Object getContent()\" may be aliased with the second parameter of \"void addRequestProperty(String key, String value)\" if the method getContent is invoked after the method addRequestProperty.\n- When the two methods have the same value of the first parameter, the return value of \"Object getContent(Class[] classes)\" may be aliased with the second parameter of \"void addRequestProperty(String key, String value)\" if the method getContent is invoked after the method addRequestProperty.\n- No aliasing specification is provided for the method pair \"String getContentEncoding()\" and \"int getContentLength()\".\n- No aliasing specification is provided for the method pair \"long getContentLengthLong()\" and \"String getContentType()\".\n- No aliasing specification is provided for the method pair \"long getDate()\" and \"boolean getDefaultAllowUserInteraction()\".\n- No aliasing specification is provided for the method pair \"boolean getDefaultUseCaches()\" and \"boolean getDoInput()\".\n- No aliasing specification is provided for the method pair \"boolean getDoOutput()\" and \"long getExpiration()\".\n- No aliasing specification is provided for the method pair \"FileNameMap getFileNameMap()\" and \"String getHeaderField(String name)\".\n- No aliasing specification is provided for the method pair \"int getHeaderFieldInt(String name, int Default)\" and \"long getHeaderFieldLong(String name, long Default)\".\n- No aliasing specification is provided for the method pair \"Map getHeaderFields()\" and \"long getIfModifiedSince()\".\n- When the two methods have the same value of the first parameter, the return value of \"InputStream getInputStream()\" may be aliased with the output stream of \"OutputStream getOutputStream()\" if the method getInputStream is invoked after the method getOutputStream.\n- No aliasing specification is provided for the method pair \"long getLastModified()\" and \"int getReadTimeout()\".\n- No aliasing specification is provided for the method pair \"Map getRequestProperties()\" and \"String getRequestProperty(String key)\".\n- No aliasing specification is provided for the method pair \"URL getURL()\" and \"boolean getUseCaches()\".\n- No aliasing specification is provided for the method pair \"String guessContentTypeFromName(String fname)\" and \"String guessContentTypeFromStream(InputStream is)\".\n- No aliasing specification is provided for the method pair \"void setAllowUserInteraction(boolean allowuserinteraction)\" and \"void setConnectTimeout(int timeout)\".\n- No aliasing specification is provided for the method pair \"void setContentHandlerFactory(ContentHandlerFactory fac)\" and \"void setDefaultAllowUserInteraction(boolean defaultallowuserinteraction)\".\n- No aliasing specification is provided for the method pair \"void setDefaultUseCaches(boolean defaultusecaches)\" and \"void setDoInput(boolean doinput)\".\n- No aliasing specification is provided for the method pair \"void setDoOutput(boolean dooutput)\" and \"void setFileNameMap(FileNameMap map)\".\n- No aliasing specification is provided for the method pair \"void setIfModifiedSince(long ifmodifiedsince)\" and \"void setReadTimeout(int timeout)\".\n- When the two methods have the same value of the first parameter, the return value of \"Map getHeaderFields()\" may be aliased with the second parameter of \"void setRequestProperty(String key, String value)\" if the method getHeaderFields is invoked after the method setRequestProperty.\n- No aliasing specification is provided for the method pair \"void setUseCaches(boolean usecaches)\" and \"String toString()\".",
    "java.net.URLConnection": "When the methods \"void addRequestProperty(String key, String value)\" and \"void setRequestProperty(String key, String value)\" have the same value of the first parameter, the second parameter of \"void addRequestProperty(String key, String value)\" may be aliased with the second parameter of \"void setRequestProperty(String key, String value)\" if the method setRequestProperty is invoked after the method addRequestProperty.\n\nWhen the method \"Object getContent()\" is invoked after the method \"void setDoOutput(boolean dooutput)\", the return value of \"Object getContent()\" may be aliased with the output stream obtained from the method \"void setDoOutput(boolean dooutput)\".\n\nWhen the method \"Object getContent(Class[] classes)\" is invoked after the method \"void setDoOutput(boolean dooutput)\", the return value of \"Object getContent(Class[] classes)\" may be aliased with the output stream obtained from the method \"void setDoOutput(boolean dooutput)\".\n\nWhen the method \"InputStream getInputStream()\" is invoked after the method \"void setDoOutput(boolean dooutput)\", the return value of \"InputStream getInputStream()\" may be aliased with the output stream obtained from the method \"void setDoOutput(boolean dooutput)\".\n\nWhen the method \"OutputStream getOutputStream()\" is invoked after the method \"void setDoInput(boolean doinput)\", the return value of \"OutputStream getOutputStream()\" may be aliased with the input stream obtained from the method \"void setDoInput(boolean doinput)\".\n\nWhen the method \"Object getContent()\" is invoked after the method \"void setDoInput(boolean doinput)\", the return value of \"Object getContent()\" may be aliased with the input stream obtained from the method \"void setDoInput(boolean doinput)\".\n\nWhen the method \"Object getContent(Class[] classes)\" is invoked after the method \"void setDoInput(boolean doinput)\", the return value of \"Object getContent(Class[] classes)\" may be aliased with the input stream obtained from the method \"void setDoInput(boolean doinput)\".",
    "java.nio.ByteBuffer": "When the two methods have the same value of the first parameter, the return value of \"ByteBuffer asCharBuffer()\" may be aliased with the return value of \"CharBuffer asReadOnlyBuffer()\" if the method asCharBuffer is invoked after the method asReadOnlyBuffer.\n\nWhen the two methods have the same value of the first parameter, the return value of \"ByteBuffer asCharBuffer()\" may be aliased with the k-th parameter of \"ByteBuffer putChar(int index, char value)\" if the method asCharBuffer is invoked after the method putChar.\n\nWhen the two methods have the same value of the first parameter, the return value of \"ByteBuffer asDoubleBuffer()\" may be aliased with the return value of \"DoubleBuffer asReadOnlyBuffer()\" if the method asDoubleBuffer is invoked after the method asReadOnlyBuffer.\n\nWhen the two methods have the same value of the first parameter, the return value of \"ByteBuffer asDoubleBuffer()\" may be aliased with the k-th parameter of \"ByteBuffer putDouble(int index, double value)\" if the method asDoubleBuffer is invoked after the method putDouble.\n\nWhen the two methods have the same value of the first parameter, the return value of \"ByteBuffer asFloatBuffer()\" may be aliased with the return value of \"FloatBuffer asReadOnlyBuffer()\" if the method asFloatBuffer is invoked after the method asReadOnlyBuffer.\n\nWhen the two methods have the same value of the first parameter, the return value of \"ByteBuffer asFloatBuffer()\" may be aliased with the k-th parameter of \"ByteBuffer putFloat(int index, float value)\" if the method asFloatBuffer is invoked after the method putFloat.\n\nWhen the two methods have the same value of the first parameter, the return value of \"ByteBuffer asIntBuffer()\" may be aliased with the return value of \"IntBuffer asReadOnlyBuffer()\" if the method asIntBuffer is invoked after the method asReadOnlyBuffer.\n\nWhen the two methods have the same value of the first parameter, the return value of \"ByteBuffer asIntBuffer()\" may be aliased with the k-th parameter of \"ByteBuffer putInt(int index, int value)\" if the method asIntBuffer is invoked after the method putInt.\n\nWhen the two methods have the same value of the first parameter, the return value of \"ByteBuffer asLongBuffer()\" may be aliased with the return value of \"LongBuffer asReadOnlyBuffer()\" if the method asLongBuffer is invoked after the method asReadOnlyBuffer.\n\nWhen the two methods have the same value of the first parameter, the return value of \"ByteBuffer asLongBuffer()\" may be aliased with the k-th parameter of \"ByteBuffer putLong(int index, long value)\" if the method asLongBuffer is invoked after the method putLong.\n\nWhen the two methods have the same value of the first parameter, the return value of \"ByteBuffer asShortBuffer()\" may be aliased with the return value of \"ShortBuffer asReadOnlyBuffer()\" if the method asShortBuffer is invoked after the method asReadOnlyBuffer.\n\nWhen the two methods have the same value of the first parameter, the return value of \"ByteBuffer asShortBuffer()\" may be aliased with the k-th parameter of \"ByteBuffer putShort(int index, short value)\" if the method asShortBuffer is invoked after the method putShort.\n\nWhen the two methods have the same value of the first parameter, the return value of \"ByteBuffer get(byte[] dst)\" may be aliased with the k-th parameter of \"ByteBuffer put(byte[] src)\" if the method get is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"ByteBuffer get(byte[] dst, int offset, int length)\" may be aliased with the k-th parameter of \"ByteBuffer put(byte[] src, int offset, int length)\" if the method get is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"ByteBuffer get(ByteBuffer dst)\" may be aliased with the k-th parameter of \"ByteBuffer put(ByteBuffer src)\" if the method get is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"byte get()\" may be aliased with the k-th parameter of \"ByteBuffer put(byte b)\" if the method get is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"char getChar()\" may be aliased with the k-th parameter of \"ByteBuffer putChar(int index, char value)\" if the method getChar is invoked after the method putChar.\n\nWhen the two methods have the same value of the first parameter, the return value of \"double getDouble()\" may be aliased with the k-th parameter of \"ByteBuffer putDouble(int index, double value)\" if the method getDouble is invoked after the method putDouble.\n\nWhen the two methods have the same value of the first parameter, the return value of \"float getFloat()\" may be aliased with the k-th parameter of \"ByteBuffer putFloat(int index, float value)\" if the method getFloat is invoked after the method putFloat.\n\nWhen the two methods have the same value of the first parameter, the return value of \"int getInt()\" may be aliased with the k-th parameter of \"ByteBuffer putInt(int index, int value)\" if the method getInt is invoked after the method putInt.\n\nWhen the two methods have the same value of the first parameter, the return value of \"long getLong()\" may be aliased with the k-th parameter of \"ByteBuffer putLong(int index, long value)\" if the method getLong is invoked after the method putLong.\n\nWhen the two methods have the same value of the first parameter, the return value of \"short getShort()\" may be aliased with the k-th parameter of \"ByteBuffer putShort(int index, short value)\" if the method getShort is invoked after the method putShort.",
    "java.nio.Buffer": "When the methods \"Object array()\" and \"Buffer clear()\" are invoked upon the same object, the return value of \"Object array()\" may be aliased with the first parameter of \"Buffer clear()\".\n\nWhen the methods \"Buffer flip()\" and \"Buffer clear()\" are invoked upon the same object, the return value of \"Buffer flip()\" may be aliased with the first parameter of \"Buffer clear()\".\n\nWhen the methods \"Buffer limit(int newLimit)\" and \"Buffer position(int newPosition)\" are invoked upon the same object, the return value of \"Buffer limit(int newLimit)\" may be aliased with the first parameter of \"Buffer position(int newPosition)\" if \"newPosition\" is smaller than the original value of \"limit\".\n\nWhen the methods \"Buffer position(int newPosition)\" and \"Buffer mark()\" are invoked upon the same object, the return value of \"Buffer position(int newPosition)\" may be aliased with the first parameter of \"Buffer mark()\".\n\nWhen the methods \"Buffer reset()\" and \"Buffer mark()\" are invoked upon the same object, the return value of \"Buffer reset()\" may be aliased with the first parameter of \"Buffer mark()\".\n\nWhen the methods \"Buffer rewind()\" and \"Buffer clear()\" are invoked upon the same object, the return value of \"Buffer rewind()\" may be aliased with the first parameter of \"Buffer clear()\".",
    "java.nio.IntBuffer": "When the method \"IntBuffer asReadOnlyBuffer()\" is invoked after the method \"IntBuffer allocate(int capacity)\", the return value of \"IntBuffer asReadOnlyBuffer()\" may be aliased with the first parameter of \"IntBuffer put(IntBuffer src)\".\n\nWhen the method \"IntBuffer duplicate()\" is invoked after the method \"IntBuffer allocate(int capacity)\", the return value of \"IntBuffer duplicate()\" may be aliased with the first parameter of \"IntBuffer put(IntBuffer src)\".\n\nWhen the method \"IntBuffer slice()\" is invoked after the method \"IntBuffer allocate(int capacity)\", the return value of \"IntBuffer slice()\" may be aliased with the first parameter of \"IntBuffer put(IntBuffer src)\". \n\nWhen the method \"int get()\" is invoked after the method \"IntBuffer put(int i)\", the return value of \"int get()\" may be aliased with the first parameter of \"IntBuffer put(int index, int i)\".\n\nWhen the method \"int get(int index)\" is invoked after the method \"IntBuffer put(int i)\", the return value of \"int get(int index)\" may be aliased with the first parameter of \"IntBuffer put(int index, int i)\".\n\nWhen the method \"IntBuffer get(int[] dst)\" is invoked after the method \"IntBuffer put(int[] src)\", the return value of \"IntBuffer get(int[] dst)\" may be aliased with the first parameter of \"IntBuffer put(int[] src, int offset, int length)\".\n\nWhen the method \"IntBuffer get(int[] dst, int offset, int length)\" is invoked after the method \"IntBuffer put(int[] src)\", the return value of \"IntBuffer get(int[] dst, int offset, int length)\" may be aliased with the first parameter of \"IntBuffer put(int[] src, int offset, int length)\".\n\nWhen the method \"IntBuffer put(int index, int i)\" is invoked after the method \"IntBuffer put(int[] src)\", the parameter of \"IntBuffer put(int index, int i)\" may be aliased with the elements of the array in the first parameter of \"IntBuffer put(int[] src)\". \n\nWhen the method \"IntBuffer put(int[] src)\" is invoked after the method \"IntBuffer put(IntBuffer src)\", the elements of the array in the first parameter of \"IntBuffer put(int[] src)\" may be aliased with the elements of the buffer in the parameter of \"IntBuffer put(IntBuffer src)\". \n\nWhen the method \"IntBuffer put(int[] src, int offset, int length)\" is invoked after the method \"IntBuffer put(IntBuffer src)\", the elements of the array in the first parameter of \"IntBuffer put(int[] src, int offset, int length)\" may be aliased with the elements of the buffer in the parameter of \"IntBuffer put(IntBuffer src)\". \n\nWhen the method \"IntBuffer put(IntBuffer src)\" is invoked after the method \"IntBuffer put(int[] src)\", the parameter of \"IntBuffer put(IntBuffer src)\" may be aliased with the elements of the array in the first parameter of \"IntBuffer put(int[] src)\". \n\nWhen the method \"IntBuffer put(int i)\" is invoked after the method \"IntBuffer put(IntBuffer src)\", the parameter of \"IntBuffer put(int i)\" may be aliased with the elements of the buffer in the parameter of \"IntBuffer put(IntBuffer src)\". \n\nWhen the method \"IntBuffer put(int[] src)\" is invoked after the method \"IntBuffer slice()\", the elements of the array in the first parameter of \"IntBuffer put(int[] src)\" may be aliased with the elements of the buffer in the return value of \"IntBuffer slice()\". \n\nWhen the method \"IntBuffer put(int[] src, int offset, int length)\" is invoked after the method \"IntBuffer slice()\", the elements of the array in the first parameter of \"IntBuffer put(int[] src, int offset, int length)\" may be aliased with the elements of the buffer in the return value of \"IntBuffer slice()\". \n\nWhen the method \"IntBuffer put(IntBuffer src)\" is invoked after the method \"IntBuffer slice()\", the parameter of \"IntBuffer put(IntBuffer src)\" may be aliased with the elements of the buffer in the return value of \"IntBuffer slice()\". \n\nWhen the method \"IntBuffer put(int i)\" is invoked after the method \"IntBuffer slice()\", the parameter of \"IntBuffer put(int i)\" may be aliased with the elements of the buffer in the return value of \"IntBuffer slice()\". \n\nWhen the method \"IntBuffer put(int[] src)\" is invoked after the method \"IntBuffer duplicate()\", the elements of the array in the first parameter of \"IntBuffer put(int[] src)\" may be aliased with the elements of the buffer in the return value of \"IntBuffer duplicate()\". \n\nWhen the method \"IntBuffer put(int[] src, int offset, int length)\" is invoked after the method \"IntBuffer duplicate()\", the elements of the array in the first parameter of \"IntBuffer put(int[] src, int offset, int length)\" may be aliased with the elements of the buffer in the return value of \"IntBuffer duplicate()\". \n\nWhen the method \"IntBuffer put(IntBuffer src)\" is invoked after the method \"IntBuffer duplicate()\", the parameter of \"IntBuffer put(IntBuffer src)\" may be aliased with the elements of the buffer in the return value of \"IntBuffer duplicate()\". \n\nWhen the method \"IntBuffer put(int i)\" is invoked after the method \"IntBuffer duplicate()\", the parameter of \"IntBuffer put(int i)\" may be aliased with the elements of the buffer in the return value of \"IntBuffer duplicate()\". \n\nWhen the method \"IntBuffer put(int[] src)\" is invoked after the method \"IntBuffer asReadOnlyBuffer()\", the elements of the array in the first parameter of \"IntBuffer put(int[] src)\" may be aliased with the elements of the buffer in the return value of \"IntBuffer asReadOnlyBuffer()\". \n\nWhen the method \"IntBuffer put(int[] src, int offset, int length)\" is invoked after the method \"IntBuffer asReadOnlyBuffer()\", the elements of the array in the first parameter of \"IntBuffer put(int[] src, int offset, int length)\" may be aliased with the elements of the buffer in the return value of \"IntBuffer asReadOnlyBuffer()\". \n\nWhen the method \"IntBuffer put(IntBuffer src)\" is invoked after the method \"IntBuffer asReadOnlyBuffer()\", the parameter of \"IntBuffer put(IntBuffer src)\" may be aliased with the elements of the buffer in the return value of \"IntBuffer asReadOnlyBuffer()\". \n\nWhen the method \"IntBuffer put(int i)\" is invoked after the method \"IntBuffer asReadOnlyBuffer()\", the parameter of \"IntBuffer put(int i)\" may be aliased with the elements of the buffer in the return value of \"IntBuffer asReadOnlyBuffer()\". \n\nWhen the method \"int get(int index)\" is invoked after the method \"IntBuffer asReadOnlyBuffer()\", the return value of \"int get(int index)\" may be aliased with the first parameter of \"IntBuffer put(int index, int i)\". \n\nWhen the method \"int get()\" is invoked after the method \"IntBuffer asReadOnlyBuffer()\", the return value of \"int get()\" may be aliased with the first parameter of \"IntBuffer put(int index, int i)\". \n\nWhen the method \"IntBuffer get(int[] dst)\" is invoked after the method \"IntBuffer asReadOnlyBuffer()\", the return value of \"IntBuffer get(int[] dst)\" may be aliased with the first parameter of \"IntBuffer put(int[] src, int offset, int length)\". \n\nWhen the method \"IntBuffer get(int[] dst, int offset, int length)\" is invoked after the method \"IntBuffer asReadOnlyBuffer()\", the return value of \"IntBuffer get(int[] dst, int offset, int length)\" may be aliased with the first parameter of \"IntBuffer put(int[] src, int offset, int length)\". \n\nWhen the method \"IntBuffer put(int[] src)\" is invoked after the method \"IntBuffer asReadOnlyBuffer()\", the elements of the array in the first parameter of \"IntBuffer put(int[] src)\" may be aliased with the elements of the buffer in the return value of \"IntBuffer asReadOnlyBuffer()\". \n\nWhen the method \"IntBuffer put(int[] src, int offset, int length)\" is invoked after the method \"IntBuffer asReadOnlyBuffer()\", the elements of the array in the first parameter of \"IntBuffer put(int[] src, int offset, int length)\" may be aliased with the elements of the buffer in the return value of \"IntBuffer asReadOnlyBuffer()\". \n\nWhen the method \"IntBuffer put(IntBuffer src)\" is invoked after the method \"IntBuffer asReadOnlyBuffer()\", the parameter of \"IntBuffer put(IntBuffer src)\" may be aliased with the elements of the buffer in the return value of \"IntBuffer asReadOnlyBuffer()\". \n\nWhen the method \"IntBuffer put(int i)\" is invoked after the method \"IntBuffer asReadOnlyBuffer()\", the parameter of \"IntBuffer put(int i)\" may be aliased with the elements of the buffer in the return value of \"IntBuffer asReadOnlyBuffer()\".",
    "java.security.KeyStore": "When method getCertificate(String alias) is invoked after method setCertificateEntry(String alias, Certificate cert), the return value of getCertificate(String alias) may be aliased with the second parameter of setCertificateEntry(String alias, Certificate cert).\n\nWhen method getCertificateChain(String alias) is invoked after method setKeyEntry(String alias, Key key, char[] password, Certificate[] chain), the return value of getCertificateChain(String alias) may be aliased with the fourth parameter of setKeyEntry(String alias, Key key, char[] password, Certificate[] chain).\n\nWhen method getEntry(String alias, KeyStore.ProtectionParameter protParam) is invoked after method setEntry(String alias, KeyStore.Entry entry, KeyStore.ProtectionParameter protParam), the return value of getEntry(String alias, KeyStore.ProtectionParameter protParam) may be aliased with the second parameter of setEntry(String alias, KeyStore.Entry entry, KeyStore.ProtectionParameter protParam).\n\nWhen method getKey(String alias, char[] password) is invoked after method setKeyEntry(String alias, byte[] key, Certificate[] chain), the return value of getKey(String alias, char[] password) may be aliased with the second parameter of setKeyEntry(String alias, byte[] key, Certificate[] chain).\n\nWhen method store(OutputStream stream, char[] password) is invoked after method load(InputStream stream, char[] password), the second parameter of store(OutputStream stream, char[] password) may be aliased with the second parameter of load(InputStream stream, char[] password).\n\nWhen method store(KeyStore.LoadStoreParameter param) is invoked after method load(KeyStore.LoadStoreParameter param), the parameter of store(KeyStore.LoadStoreParameter param) may be aliased with the parameter of load(KeyStore.LoadStoreParameter param).",
    "java.sql.CallableStatement": "(<class 'openai.error.InvalidRequestError'>, InvalidRequestError(message=\"This model's maximum context length is 4097 tokens. However, your messages resulted in 7720 tokens. Please reduce the length of the messages.\", param='messages', code='context_length_exceeded', http_status=400, request_id=None), <traceback object at 0x118b57c80>)",
    "java.lang.AutoCloseable": "There are no aliasing specifications for this class as it only contains one method.",
    "java.sql.PreparedStatement": "The aliasing specifications for the given Java class \"PreparedStatement\" are:\n\n- When the method \"addBatch()\" is invoked before the method \"clearParameters()\", the return value of \"clearParameters()\" may be aliased with the first parameter of \"addBatch()\".\n- When the method \"execute()\" is invoked after any of the following methods:\n  - \"setArray(int parameterIndex, Array x)\"\n  - \"setAsciiStream(int parameterIndex, InputStream x)\"\n  - \"setAsciiStream(int parameterIndex, InputStream x, int length)\"\n  - \"setAsciiStream(int parameterIndex, InputStream x, long length)\"\n  - \"setBigDecimal(int parameterIndex, BigDecimal x)\"\n  - \"setBinaryStream(int parameterIndex, InputStream x)\"\n  - \"setBinaryStream(int parameterIndex, InputStream x, int length)\"\n  - \"setBinaryStream(int parameterIndex, InputStream x, long length)\"\n  - \"setBlob(int parameterIndex, Blob x)\"\n  - \"setBlob(int parameterIndex, InputStream inputStream)\"\n  - \"setBlob(int parameterIndex, InputStream inputStream, long length)\"\n  - \"setBoolean(int parameterIndex, boolean x)\"\n  - \"setByte(int parameterIndex, byte x)\"\n  - \"setBytes(int parameterIndex, byte[] x)\"\n  - \"setCharacterStream(int parameterIndex, Reader reader)\"\n  - \"setCharacterStream(int parameterIndex, Reader reader, int length)\"\n  - \"setCharacterStream(int parameterIndex, Reader reader, long length)\"\n  - \"setClob(int parameterIndex, Clob x)\"\n  - \"setClob(int parameterIndex, Reader reader)\"\n  - \"setClob(int parameterIndex, Reader reader, long length)\"\n  - \"setDate(int parameterIndex, Date x)\"\n  - \"setDate(int parameterIndex, Date x, Calendar cal)\"\n  - \"setDouble(int parameterIndex, double x)\"\n  - \"setFloat(int parameterIndex, float x)\"\n  - \"setInt(int parameterIndex, int x)\"\n  - \"setLong(int parameterIndex, long x)\"\n  - \"setNCharacterStream(int parameterIndex, Reader value)\"\n  - \"setNCharacterStream(int parameterIndex, Reader value, long length)\"\n  - \"setNClob(int parameterIndex, NClob value)\"\n  - \"setNClob(int parameterIndex, Reader reader)\"\n  - \"setNClob(int parameterIndex, Reader reader, long length)\"\n  - \"setNString(int parameterIndex, String value)\"\n  - \"setNull(int parameterIndex, int sqlType)\"\n  - \"setNull(int parameterIndex, int sqlType, String typeName)\"\n  - \"setObject(int parameterIndex, Object x)\"\n  - \"setObject(int parameterIndex, Object x, int targetSqlType)\"\n  - \"setObject(int parameterIndex, Object x, int targetSqlType, int scaleOrLength)\"\n  - \"setObject(int parameterIndex, Object x, SQLType targetSqlType)\"\n  - \"setObject(int parameterIndex, Object x, SQLType targetSqlType, int scaleOrLength)\"\n  - \"setRef(int parameterIndex, Ref x)\"\n  - \"setRowId(int parameterIndex, RowId x)\"\n  - \"setShort(int parameterIndex, short x)\"\n  - \"setSQLXML(int parameterIndex, SQLXML xmlObject)\"\n  - \"setString(int parameterIndex, String x)\"\n  - \"setTime(int parameterIndex, Time x)\"\n  - \"setTime(int parameterIndex, Time x, Calendar cal)\"\n  - \"setTimestamp(int parameterIndex, Timestamp x)\"\n  - \"setTimestamp(int parameterIndex, Timestamp x, Calendar cal)\"\n  - \"setURL(int parameterIndex, URL x)\"\n  \n  The return value of \"execute()\" may be aliased with the k-th parameter of the above methods, where k is the value of the \"parameterIndex\" parameter in the corresponding method call.\n  \n- When the method \"executeLargeUpdate()\" is invoked after any of the following methods:\n  - \"setArray(int parameterIndex, Array x)\"\n  - \"setAsciiStream(int parameterIndex, InputStream x)\"\n  - \"setAsciiStream(int parameterIndex, InputStream x, int length)\"\n  - \"setAsciiStream(int parameterIndex, InputStream x, long length)\"\n  - \"setBigDecimal(int parameterIndex, BigDecimal x)\"\n  - \"setBinaryStream(int parameterIndex, InputStream x)\"\n  - \"setBinaryStream(int parameterIndex, InputStream x, int length)\"\n  - \"setBinaryStream(int parameterIndex, InputStream x, long length)\"\n  - \"setBlob(int parameterIndex, Blob x)\"\n  - \"setBlob(int parameterIndex, InputStream inputStream)\"\n  - \"setBlob(int parameterIndex, InputStream inputStream, long length)\"\n  - \"setBoolean(int parameterIndex, boolean x)\"\n  - \"setByte(int parameterIndex, byte x)\"\n  - \"setBytes(int parameterIndex, byte[] x)\"\n  - \"setCharacterStream(int parameterIndex, Reader reader)\"\n  - \"setCharacterStream(int parameterIndex, Reader reader, int length)\"\n  - \"setCharacterStream(int parameterIndex, Reader reader, long length)\"\n  - \"setClob(int parameterIndex, Clob x)\"\n  - \"setClob(int parameterIndex, Reader reader)\"\n  - \"setClob(int parameterIndex, Reader reader, long length)\"\n  - \"setDate(int parameterIndex, Date x)\"\n  - \"setDate(int parameterIndex, Date x, Calendar cal)\"\n  - \"setDouble(int parameterIndex, double x)\"\n  - \"setFloat(int parameterIndex, float x)\"\n  - \"setInt(int parameterIndex, int x)\"\n  - \"setLong(int parameterIndex, long x)\"\n  - \"setNCharacterStream(int parameterIndex, Reader value)\"\n  - \"setNCharacterStream(int parameterIndex, Reader value, long length)\"\n  - \"setNClob(int parameterIndex, NClob value)\"\n  - \"setNClob(int parameterIndex, Reader reader)\"\n  - \"setNClob(int parameterIndex, Reader reader, long length)\"\n  - \"setNString(int parameterIndex, String value)\"\n  - \"setNull(int parameterIndex, int sqlType)\"\n  - \"setNull(int parameterIndex, int sqlType, String typeName)\"\n  - \"setObject(int parameterIndex, Object x)\"\n  - \"setObject(int parameterIndex, Object x, int targetSqlType)\"\n  - \"setObject(int parameterIndex, Object x, int targetSqlType, int scaleOrLength)\"\n  - \"setObject(int parameterIndex, Object x, SQLType targetSqlType)\"\n  - \"setObject(int parameterIndex, Object x, SQLType targetSqlType, int scaleOrLength)\"\n  - \"setRef(int parameterIndex, Ref x)\"\n  - \"setRowId(int parameterIndex, RowId x)\"\n  - \"setShort(int parameterIndex, short x)\"\n  - \"setSQLXML(int parameterIndex, SQLXML xmlObject)\"\n  - \"setString(int parameterIndex, String x)\"\n  - \"setTime(int parameterIndex, Time x)\"\n  - \"setTime(int parameterIndex, Time x, Calendar cal)\"\n  - \"setTimestamp(int parameterIndex, Timestamp x)\"\n  - \"setTimestamp(int parameterIndex, Timestamp x, Calendar cal)\"\n  - \"setURL(int parameterIndex, URL x)\"\n  \n  The return value of \"executeLargeUpdate()\" may be aliased with the k-th parameter of the above methods, where k is the value of the \"parameterIndex\" parameter in the corresponding method call.\n  \n- When the method \"executeQuery()\" is invoked after any of the following methods:\n  - \"setArray(int parameterIndex, Array x)\"\n  - \"setAsciiStream(int parameterIndex, InputStream x)\"\n  - \"setAsciiStream(int parameterIndex, InputStream x, int length)\"\n  - \"setAsciiStream(int parameterIndex, InputStream x, long length)\"\n  - \"setBigDecimal(int parameterIndex, BigDecimal x)\"\n  - \"setBinaryStream(int parameterIndex, InputStream x)\"\n  - \"setBinaryStream(int parameterIndex, InputStream x, int length)\"\n  - \"setBinaryStream(int parameterIndex, InputStream x, long length)\"\n  - \"setBlob(int parameterIndex, Blob x)\"\n  - \"setBlob(int parameterIndex, InputStream inputStream)\"\n  - \"setBlob(int parameterIndex, InputStream inputStream, long length)\"\n  - \"setBoolean(int parameterIndex, boolean x)\"\n  - \"setByte(int parameterIndex, byte x)\"\n  - \"setBytes(int parameterIndex, byte[] x)\"\n  - \"setCharacterStream(int parameterIndex, Reader reader)\"\n  - \"setCharacterStream(int parameter",
    "java.sql.Statement": "When the method \"void addBatch(String sql)\" is invoked before the method \"int[] executeBatch()\", the return value of \"int[] executeBatch()\" may be aliased with the first parameter of \"void addBatch(String sql)\".\n\nWhen the method \"void clearBatch()\" is invoked before the method \"int[] executeBatch()\", the return value of \"int[] executeBatch()\" may be aliased with the list of SQL commands cleared by \"void clearBatch()\".\n\nWhen the method \"void close()\" is invoked before the method \"ResultSet getGeneratedKeys()\", the return value of \"ResultSet getGeneratedKeys()\" may be aliased with the Statement object being closed.\n\nWhen the method \"void close()\" is invoked before the method \"ResultSet getResultSet()\", the return value of \"ResultSet getResultSet()\" may be aliased with the Statement object being closed.\n\nWhen the method \"void close()\" is invoked before the method \"int getUpdateCount()\", the return value of \"int getUpdateCount()\" may be aliased with the Statement object being closed.\n\nWhen the method \"void close()\" is invoked before the method \"SQLWarning getWarnings()\", the return value of \"SQLWarning getWarnings()\" may be aliased with the Statement object being closed.\n\nWhen the method \"void close()\" is invoked before the method \"boolean isClosed()\", the return value of \"boolean isClosed()\" may be aliased with the Statement object being closed.\n\nWhen the method \"boolean execute(String sql)\" is invoked before the method \"ResultSet getResultSet()\", the return value of \"ResultSet getResultSet()\" may be aliased with the ResultSet object produced by \"boolean execute(String sql)\".\n\nWhen the method \"boolean execute(String sql)\" is invoked before the method \"int getUpdateCount()\", the return value of \"int getUpdateCount()\" may be aliased with the ResultSet object produced by \"boolean execute(String sql)\".\n\nWhen the method \"boolean execute(String sql, int autoGeneratedKeys)\" is invoked before the method \"ResultSet getGeneratedKeys()\", the return value of \"ResultSet getGeneratedKeys()\" may be aliased with the ResultSet object produced by \"boolean execute(String sql, int autoGeneratedKeys)\".\n\nWhen the method \"boolean execute(String sql, int autoGeneratedKeys)\" is invoked before the method \"int getUpdateCount()\", the return value of \"int getUpdateCount()\" may be aliased with the ResultSet object produced by \"boolean execute(String sql, int autoGeneratedKeys)\".\n\nWhen the method \"boolean execute(String sql, int[] columnIndexes)\" is invoked before the method \"ResultSet getGeneratedKeys()\", the return value of \"ResultSet getGeneratedKeys()\" may be aliased with the ResultSet object produced by \"boolean execute(String sql, int[] columnIndexes)\".\n\nWhen the method \"boolean execute(String sql, int[] columnIndexes)\" is invoked before the method \"int getUpdateCount()\", the return value of \"int getUpdateCount()\" may be aliased with the ResultSet object produced by \"boolean execute(String sql, int[] columnIndexes)\".\n\nWhen the method \"boolean execute(String sql, String[] columnNames)\" is invoked before the method \"ResultSet getGeneratedKeys()\", the return value of \"ResultSet getGeneratedKeys()\" may be aliased with the ResultSet object produced by \"boolean execute(String sql, String[] columnNames)\".\n\nWhen the method \"boolean execute(String sql, String[] columnNames)\" is invoked before the method \"int getUpdateCount()\", the return value of \"int getUpdateCount()\" may be aliased with the ResultSet object produced by \"boolean execute(String sql, String[] columnNames)\".\n\nWhen the method \"int executeUpdate(String sql)\" is invoked before the method \"ResultSet getGeneratedKeys()\", the return value of \"ResultSet getGeneratedKeys()\" may be aliased with the ResultSet object produced by \"int executeUpdate(String sql)\".\n\nWhen the method \"int executeUpdate(String sql)\" is invoked before the method \"int getUpdateCount()\", the return value of \"int getUpdateCount()\" may be aliased with the ResultSet object produced by \"int executeUpdate(String sql)\".\n\nWhen the method \"int executeUpdate(String sql, int autoGeneratedKeys)\" is invoked before the method \"ResultSet getGeneratedKeys()\", the return value of \"ResultSet getGeneratedKeys()\" may be aliased with the ResultSet object produced by \"int executeUpdate(String sql, int autoGeneratedKeys)\".\n\nWhen the method \"int executeUpdate(String sql, int autoGeneratedKeys)\" is invoked before the method \"int getUpdateCount()\", the return value of \"int getUpdateCount()\" may be aliased with the ResultSet object produced by \"int executeUpdate(String sql, int autoGeneratedKeys)\".\n\nWhen the method \"int executeUpdate(String sql, int[] columnIndexes)\" is invoked before the method \"ResultSet getGeneratedKeys()\", the return value of \"ResultSet getGeneratedKeys()\" may be aliased with the ResultSet object produced by \"int executeUpdate(String sql, int[] columnIndexes)\".\n\nWhen the method \"int executeUpdate(String sql, int[] columnIndexes)\" is invoked before the method \"int getUpdateCount()\", the return value of \"int getUpdateCount()\" may be aliased with the ResultSet object produced by \"int executeUpdate(String sql, int[] columnIndexes)\".\n\nWhen the method \"int executeUpdate(String sql, String[] columnNames)\" is invoked before the method \"ResultSet getGeneratedKeys()\", the return value of \"ResultSet getGeneratedKeys()\" may be aliased with the ResultSet object produced by \"int executeUpdate(String sql, String[] columnNames)\".\n\nWhen the method \"int executeUpdate(String sql, String[] columnNames)\" is invoked before the method \"int getUpdateCount()\", the return value of \"int getUpdateCount()\" may be aliased with the ResultSet object produced by \"int executeUpdate(String sql, String[] columnNames)\".",
    "java.sql.Wrapper": "The aliasing specification for the given Java class \"Wrapper\" is as follows:\n\nThe return value of \"T unwrap(Class iface)\" may be aliased with the first parameter of \"boolean isWrapperFor(Class iface)\" if the method unwrap is invoked after the method isWrapperFor.",
    "java.util.ArrayList": "When the two methods have the same value of the first paramters, the return value of \"E get(int index)\" may be aliased with the second parameter of \"void add(int index, E element)\" if the method get is invoked after the method add.\nThe return value of \"E remove(int index)\" may be aliased with the second parameter of \"void add(int index, E element)\" if the method remove is invoked after the method add.\nThe return value of \"E set(int index, E element)\" may be aliased with the second parameter of \"void add(int index, E element)\" if the method set is invoked after the method add. \nThe return value of \"E get(int index)\" may be aliased with the first parameter of \"void addAll(int index, Collection c)\" if the method get is invoked after the method addAll.\nThe return value of \"E remove(int index)\" may be aliased with the first parameter of \"void addAll(int index, Collection c)\" if the method remove is invoked after the method addAll.\nThe return value of \"E set(int index, E element)\" may be aliased with the first parameter of \"void addAll(int index, Collection c)\" if the method set is invoked after the method addAll.\nThe return value of \"E get(int index)\" may be aliased with the parameter of \"boolean removeAll(Collection c)\" if the method get is invoked after the method removeAll.\nThe return value of \"E remove(int index)\" may be aliased with the parameter of \"boolean removeAll(Collection c)\" if the method remove is invoked after the method removeAll.\nThe return value of \"E set(int index, E element)\" may be aliased with the parameter of \"boolean removeAll(Collection c)\" if the method set is invoked after the method removeAll.\nThe return value of \"E get(int index)\" may be aliased with the parameter of \"boolean retainAll(Collection c)\" if the method get is invoked after the method retainAll.\nThe return value of \"E remove(int index)\" may be aliased with the parameter of \"boolean retainAll(Collection c)\" if the method remove is invoked after the method retainAll.\nThe return value of \"E set(int index, E element)\" may be aliased with the parameter of \"boolean retainAll(Collection c)\" if the method set is invoked after the method retainAll.\nThe return value of \"E get(int index)\" may be aliased with the second parameter of \"E set(int index, E element)\" if the method get is invoked after the method set. \nThe return value of \"E remove(int index)\" may be aliased with the second parameter of \"E set(int index, E element)\" if the method remove is invoked after the method set. \nThe return value of \"E get(int index)\" may be aliased with the first parameter of \"List subList(int fromIndex, int toIndex)\" if the method get is invoked after the method subList. \nThe return value of \"E remove(int index)\" may be aliased with the first parameter of \"List subList(int fromIndex, int toIndex)\" if the method remove is invoked after the method subList. \nThe return value of \"E set(int index, E element)\" may be aliased with the first parameter of \"List subList(int fromIndex, int toIndex)\" if the method set is invoked after the method subList.",
    "java.util.AbstractList": "When the two methods have the same value of the first parameters, the return value of \"boolean contains(Object o)\" may be aliased with the parameter of \"boolean remove(Object o)\" if the method contains is invoked after the method remove.\n\nWhen the two methods have the same value of the first parameters, the return value of \"boolean contains(Object o)\" may be aliased with the parameter of \"boolean removeAll(Collection c)\" if the method contains is invoked after the method removeAll.\n\nWhen the two methods have the same value of the first parameters, the return value of \"boolean contains(Object o)\" may be aliased with the parameter of \"boolean retainAll(Collection c)\" if the method contains is invoked after the method retainAll.\n\nThe return value of \"E get(int index)\" may be aliased with the second parameter of \"void add(int index, E element)\" if the method get is invoked after the method add.\n\nWhen the two methods have the same value of the first parameters, the return value of \"int indexOf(Object o)\" may be aliased with the parameter of \"E remove(int index)\" if the method indexOf is invoked after the method remove.\n\nWhen the two methods have the same value of the first parameters, the return value of \"int indexOf(Object o)\" may be aliased with the parameter of \"boolean remove(Object o)\" if the method indexOf is invoked after the method remove.\n\nWhen the two methods have the same value of the first parameters, the return value of \"int indexOf(Object o)\" may be aliased with the parameter of \"boolean removeAll(Collection c)\" if the method indexOf is invoked after the method removeAll.\n\nWhen the two methods have the same value of the first parameters, the return value of \"int indexOf(Object o)\" may be aliased with the parameter of \"boolean retainAll(Collection c)\" if the method indexOf is invoked after the method retainAll.\n\nWhen the two methods have the same value of the first parameters, the return value of \"int lastIndexOf(Object o)\" may be aliased with the parameter of \"E remove(int index)\" if the method lastIndexOf is invoked after the method remove.\n\nWhen the two methods have the same value of the first parameters, the return value of \"int lastIndexOf(Object o)\" may be aliased with the parameter of \"boolean remove(Object o)\" if the method lastIndexOf is invoked after the method remove.\n\nWhen the two methods have the same value of the first parameters, the return value of \"int lastIndexOf(Object o)\" may be aliased with the parameter of \"boolean removeAll(Collection c)\" if the method lastIndexOf is invoked after the method removeAll.\n\nWhen the two methods have the same value of the first parameters, the return value of \"int lastIndexOf(Object o)\" may be aliased with the parameter of \"boolean retainAll(Collection c)\" if the method lastIndexOf is invoked after the method retainAll.\n\nThe return value of \"ListIterator listIterator(int index)\" may be aliased with the second parameter of \"void add(int index, E element)\" if the method listIterator is invoked after the method add.\n\nThe return value of \"E remove(int index)\" may be aliased with the second parameter of \"void add(int index, E element)\" if the method remove is invoked after the method add.\n\nThe return value of \"E set(int index, E element)\" may be aliased with the second parameter of \"void add(int index, E element)\" if the method set is invoked after the method add.\n\nWhen the two methods have the same value of the first parameters, the return value of \"boolean remove(Object o)\" may be aliased with the parameter of \"int indexOf(Object o)\" if the method remove is invoked after the method indexOf.\n\nWhen the two methods have the same value of the first parameters, the return value of \"boolean remove(Object o)\" may be aliased with the parameter of \"int lastIndexOf(Object o)\" if the method remove is invoked after the method lastIndexOf.\n\nWhen the two methods have the same value of the first parameters, the return value of \"boolean removeAll(Collection c)\" may be aliased with the parameter of \"int indexOf(Object o)\" if the method removeAll is invoked after the method indexOf.\n\nWhen the two methods have the same value of the first parameters, the return value of \"boolean removeAll(Collection c)\" may be aliased with the parameter of \"int lastIndexOf(Object o)\" if the method removeAll is invoked after the method lastIndexOf.\n\nWhen the two methods have the same value of the first parameters, the return value of \"boolean retainAll(Collection c)\" may be aliased with the parameter of \"int indexOf(Object o)\" if the method retainAll is invoked after the method indexOf.\n\nWhen the two methods have the same value of the first parameters, the return value of \"boolean retainAll(Collection c)\" may be aliased with the parameter of \"int lastIndexOf(Object o)\" if the method retainAll is invoked after the method lastIndexOf.",
    "java.util.AbstractCollection": "When the method \"boolean add(E e)\" is invoked after the method \"void forEach(Consumer action)\", the return value of \"boolean add(E e)\" may be aliased with the first parameter of \"void forEach(Consumer action)\".\nWhen the method \"Iterator iterator()\" is invoked after the method \"boolean add(E e)\", the return value of \"Iterator iterator()\" may be aliased with the first parameter of \"boolean add(E e)\".\nWhen the method \"Iterator iterator()\" is invoked after the method \"boolean remove(Object o)\", the return value of \"Iterator iterator()\" may be aliased with the first parameter of \"boolean remove(Object o)\".\nWhen the method \"Iterator iterator()\" is invoked after the method \"boolean removeAll(Collection c)\", the return value of \"Iterator iterator()\" may be aliased with the first parameter of \"boolean removeAll(Collection c)\".\nWhen the method \"Iterator iterator()\" is invoked after the method \"boolean retainAll(Collection c)\", the return value of \"Iterator iterator()\" may be aliased with the first parameter of \"boolean retainAll(Collection c)\".\nWhen the method \"Iterator iterator()\" is invoked after the method \"boolean removeIf(Predicate filter)\", the return value of \"Iterator iterator()\" may be aliased with the first parameter of \"boolean removeIf(Predicate filter)\".\nWhen the method \"Object[] toArray()\" is invoked after the method \"boolean add(E e)\", the return value of \"Object[] toArray()\" may be aliased with the first parameter of \"boolean add(E e)\".\nWhen the method \"Object[] toArray()\" is invoked after the method \"boolean remove(Object o)\", the return value of \"Object[] toArray()\" may be aliased with the first parameter of \"boolean remove(Object o)\".\nWhen the method \"Object[] toArray()\" is invoked after the method \"boolean removeAll(Collection c)\", the return value of \"Object[] toArray()\" may be aliased with the first parameter of \"boolean removeAll(Collection c)\".\nWhen the method \"Object[] toArray()\" is invoked after the method \"boolean retainAll(Collection c)\", the return value of \"Object[] toArray()\" may be aliased with the first parameter of \"boolean retainAll(Collection c)\".\nWhen the method \"Object[] toArray()\" is invoked after the method \"boolean removeIf(Predicate filter)\", the return value of \"Object[] toArray()\" may be aliased with the first parameter of \"boolean removeIf(Predicate filter)\".\nWhen the method \"T[] toArray(T[] a)\" is invoked after the method \"boolean add(E e)\", the return value of \"T[] toArray(T[] a)\" may be aliased with the first parameter of \"boolean add(E e)\".\nWhen the method \"T[] toArray(T[] a)\" is invoked after the method \"boolean remove(Object o)\", the return value of \"T[] toArray(T[] a)\" may be aliased with the first parameter of \"boolean remove(Object o)\".\nWhen the method \"T[] toArray(T[] a)\" is invoked after the method \"boolean removeAll(Collection c)\", the return value of \"T[] toArray(T[] a)\" may be aliased with the first parameter of \"boolean removeAll(Collection c)\".\nWhen the method \"T[] toArray(T[] a)\" is invoked after the method \"boolean retainAll(Collection c)\", the return value of \"T[] toArray(T[] a)\" may be aliased with the first parameter of \"boolean retainAll(Collection c)\".\nWhen the method \"T[] toArray(T[] a)\" is invoked after the method \"boolean removeIf(Predicate filter)\", the return value of \"T[] toArray(T[] a)\" may be aliased with the first parameter of \"boolean removeIf(Predicate filter)\".\nWhen the method \"Stream parallelStream()\" is invoked after the method \"boolean add(E e)\", the return value of \"Stream parallelStream()\" may be aliased with the first parameter of \"boolean add(E e)\".\nWhen the method \"Stream parallelStream()\" is invoked after the method \"boolean remove(Object o)\", the return value of \"Stream parallelStream()\" may be aliased with the first parameter of \"boolean remove(Object o)\".\nWhen the method \"Stream parallelStream()\" is invoked after the method \"boolean removeAll(Collection c)\", the return value of \"Stream parallelStream()\" may be aliased with the first parameter of \"boolean removeAll(Collection c)\".\nWhen the method \"Stream parallelStream()\" is invoked after the method \"boolean retainAll(Collection c)\", the return value of \"Stream parallelStream()\" may be aliased with the first parameter of \"boolean retainAll(Collection c)\".\nWhen the method \"Stream parallelStream()\" is invoked after the method \"boolean removeIf(Predicate filter)\", the return value of \"Stream parallelStream()\" may be aliased with the first parameter of \"boolean removeIf(Predicate filter)\".\nWhen the method \"Spliterator spliterator()\" is invoked after the method \"boolean add(E e)\", the return value of \"Spliterator spliterator()\" may be aliased with the first parameter of \"boolean add(E e)\".\nWhen the method \"Spliterator spliterator()\" is invoked after the method \"boolean remove(Object o)\", the return value of \"Spliterator spliterator()\" may be aliased with the first parameter of \"boolean remove(Object o)\".\nWhen the method \"Spliterator spliterator()\" is invoked after the method \"boolean removeAll(Collection c)\", the return value of \"Spliterator spliterator()\" may be aliased with the first parameter of \"boolean removeAll(Collection c)\".\nWhen the method \"Spliterator spliterator()\" is invoked after the method \"boolean retainAll(Collection c)\", the return value of \"Spliterator spliterator()\" may be aliased with the first parameter of \"boolean retainAll(Collection c)\".\nWhen the method \"Spliterator spliterator()\" is invoked after the method \"boolean removeIf(Predicate filter)\", the return value of \"Spliterator spliterator()\" may be aliased with the first parameter of \"boolean removeIf(Predicate filter)\".\nWhen the method \"Stream stream()\" is invoked after the method \"boolean add(E e)\", the return value of \"Stream stream()\" may be aliased with the first parameter of \"boolean add(E e)\".\nWhen the method \"Stream stream()\" is invoked after the method \"boolean remove(Object o)\", the return value of \"Stream stream()\" may be aliased with the first parameter of \"boolean remove(Object o)\".\nWhen the method \"Stream stream()\" is invoked after the method \"boolean removeAll(Collection c)\", the return value of \"Stream stream()\" may be aliased with the first parameter of \"boolean removeAll(Collection c)\".\nWhen the method \"Stream stream()\" is invoked after the method \"boolean retainAll(Collection c)\", the return value of \"Stream stream()\" may be aliased with the first parameter of \"boolean retainAll(Collection c)\".\nWhen the method \"Stream stream()\" is invoked after the method \"boolean removeIf(Predicate filter)\", the return value of \"Stream stream()\" may be aliased with the first parameter of \"boolean removeIf(Predicate filter)\".\nWhen the method \"void forEach(Consumer action)\" is invoked after the method \"boolean add(E e)\", the return value of \"void forEach(Consumer action)\" may be aliased with the first parameter of \"boolean add(E e)\".\nWhen the method \"void forEach(Consumer action)\" is invoked after the method \"boolean remove(Object o)\", the return value of \"void forEach(Consumer action)\" may be aliased with the first parameter of \"boolean remove(Object o)\".\nWhen the method \"void forEach(Consumer action)\" is invoked after the method \"boolean removeAll(Collection c)\", the return value of \"void forEach(Consumer action)\" may be aliased with the first parameter of \"boolean removeAll(Collection c)\".\nWhen the method \"void forEach(Consumer action)\" is invoked after the method \"boolean retainAll(Collection c)\", the return value of \"void forEach(Consumer action)\" may be aliased with the first parameter of \"boolean retainAll(Collection c)\".\nWhen the method \"void forEach(Consumer action)\" is invoked after the method \"boolean removeIf(Predicate filter)\", the return value of \"void forEach(Consumer action)\" may be aliased with the first parameter of \"boolean removeIf(Predicate filter)\".",
    "java.util.AbstractSequentialList": "When the two methods have the same value of the first parameters:\n- \"void add(int index, E element)\" and \"E get(int index)\": The return value of \"E get(int index)\" may be aliased with the second parameter of \"void add(int index, E element)\" if the method get is invoked after the method add.\n- \"boolean addAll(int index, Collection c)\" and \"E get(int index)\": The return value of \"E get(int index)\" may be aliased with the second parameter of \"boolean addAll(int index, Collection c)\" if the method get is invoked after the method addAll.\n- \"E remove(int index)\" and \"E get(int index)\": The return value of \"E get(int index)\" may be aliased with the first parameter of \"E remove(int index)\" if the method get is invoked after the method remove.\n- \"E set(int index, E element)\" and \"E get(int index)\": The return value of \"E get(int index)\" may be aliased with the first parameter of \"E set(int index, E element)\" if the method get is invoked after the method set.\n\nThe return value of:\n- \"Iterator iterator()\" may be aliased with the k-th parameter of \"void forEach(Consumer action)\" if the method iterator is invoked before the method forEach.\n- \"ListIterator listIterator(int index)\" may be aliased with the k-th parameter of \"void forEach(Consumer action)\" if the method listIterator is invoked before the method forEach.\n\nThe return value of \"E remove(int index)\" may be aliased with the k-th parameter of \"void forEach(Consumer action)\" if the method remove is invoked before the method forEach.\n\nThe return value of \"E set(int index, E element)\" may be aliased with the k-th parameter of \"void forEach(Consumer action)\" if the method set is invoked before the method forEach.\n\nThe return value of:\n- \"boolean add(E e)\" may be aliased with the k-th parameter of \"void forEach(Consumer action)\" if the method add is invoked before the method forEach.\n- \"boolean addAll(Collection c)\" may be aliased with the k-th parameter of \"void forEach(Consumer action)\" if the method addAll is invoked before the method forEach.\n\nThe return value of:\n- \"boolean remove(Object o)\" may be aliased with the k-th parameter of \"void forEach(Consumer action)\" if the method remove is invoked before the method forEach.\n- \"boolean removeAll(Collection c)\" may be aliased with the k-th parameter of \"void forEach(Consumer action)\" if the method removeAll is invoked before the method forEach.\n- \"boolean retainAll(Collection c)\" may be aliased with the k-th parameter of \"void forEach(Consumer action)\" if the method retainAll is invoked before the method forEach.\n\nThe return value of:\n- \"Object[] toArray()\" may be aliased with the k-th parameter of \"void forEach(Consumer action)\" if the method toArray is invoked before the method forEach.\n- \"T[] toArray(T[] a)\" may be aliased with the k-th parameter of \"void forEach(Consumer action)\" if the method toArray is invoked before the method forEach.",
    "java.util.AbstractMap": "When the method \"put(K key, V value)\" is invoked after the method \"get(Object key)\", the return value of \"get(Object key)\" may be aliased with the second parameter of \"put(K key, V value)\".\n\nWhen the method \"put(K key, V value)\" is invoked after the method \"compute(K key, BiFunction remappingFunction)\", the return value of \"compute(K key, BiFunction remappingFunction)\" may be aliased with the second parameter of \"put(K key, V value)\".\n\nWhen the method \"put(K key, V value)\" is invoked after the method \"computeIfAbsent(K key, Function mappingFunction)\", the return value of \"computeIfAbsent(K key, Function mappingFunction)\" may be aliased with the second parameter of \"put(K key, V value)\".\n\nWhen the method \"put(K key, V value)\" is invoked after the method \"computeIfPresent(K key, BiFunction remappingFunction)\", the return value of \"computeIfPresent(K key, BiFunction remappingFunction)\" may be aliased with the second parameter of \"put(K key, V value)\".\n\nWhen the method \"put(K key, V value)\" is invoked after the method \"merge(K key, V value, BiFunction remappingFunction)\", the return value of \"merge(K key, V value, BiFunction remappingFunction)\" may be aliased with the second parameter of \"put(K key, V value)\".\n\nWhen the method \"putIfAbsent(K key, V value)\" is invoked after the method \"get(Object key)\", the return value of \"get(Object key)\" may be aliased with the second parameter of \"putIfAbsent(K key, V value)\".\n\nWhen the method \"putIfAbsent(K key, V value)\" is invoked after the method \"compute(K key, BiFunction remappingFunction)\", the return value of \"compute(K key, BiFunction remappingFunction)\" may be aliased with the second parameter of \"putIfAbsent(K key, V value)\".\n\nWhen the method \"putIfAbsent(K key, V value)\" is invoked after the method \"computeIfAbsent(K key, Function mappingFunction)\", the return value of \"computeIfAbsent(K key, Function mappingFunction)\" may be aliased with the second parameter of \"putIfAbsent(K key, V value)\".\n\nWhen the method \"putIfAbsent(K key, V value)\" is invoked after the method \"computeIfPresent(K key, BiFunction remappingFunction)\", the return value of \"computeIfPresent(K key, BiFunction remappingFunction)\" may be aliased with the second parameter of \"putIfAbsent(K key, V value)\".\n\nWhen the method \"putIfAbsent(K key, V value)\" is invoked after the method \"merge(K key, V value, BiFunction remappingFunction)\", the return value of \"merge(K key, V value, BiFunction remappingFunction)\" may be aliased with the second parameter of \"putIfAbsent(K key, V value)\".\n\nWhen the method \"remove(Object key)\" is invoked after the method \"get(Object key)\", the return value of \"get(Object key)\" may be aliased with the first parameter of \"remove(Object key)\".\n\nWhen the method \"remove(Object key)\" is invoked after the method \"compute(K key, BiFunction remappingFunction)\", the return value of \"compute(K key, BiFunction remappingFunction)\" may be aliased with the first parameter of \"remove(Object key)\".\n\nWhen the method \"remove(Object key)\" is invoked after the method \"computeIfAbsent(K key, Function mappingFunction)\", the return value of \"computeIfAbsent(K key, Function mappingFunction)\" may be aliased with the first parameter of \"remove(Object key)\".\n\nWhen the method \"remove(Object key)\" is invoked after the method \"computeIfPresent(K key, BiFunction remappingFunction)\", the return value of \"computeIfPresent(K key, BiFunction remappingFunction)\" may be aliased with the first parameter of \"remove(Object key)\".\n\nWhen the method \"remove(Object key)\" is invoked after the method \"merge(K key, V value, BiFunction remappingFunction)\", the return value of \"merge(K key, V value, BiFunction remappingFunction)\" may be aliased with the first parameter of \"remove(Object key)\".\n\nWhen the method \"remove(Object key, Object value)\" is invoked after the method \"get(Object key)\", the return value of \"get(Object key)\" may be aliased with the first parameter of \"remove(Object key, Object value)\".\n\nWhen the method \"remove(Object key, Object value)\" is invoked after the method \"compute(K key, BiFunction remappingFunction)\", the return value of \"compute(K key, BiFunction remappingFunction)\" may be aliased with the first parameter of \"remove(Object key, Object value)\".\n\nWhen the method \"remove(Object key, Object value)\" is invoked after the method \"computeIfAbsent(K key, Function mappingFunction)\", the return value of \"computeIfAbsent(K key, Function mappingFunction)\" may be aliased with the first parameter of \"remove(Object key, Object value)\".\n\nWhen the method \"remove(Object key, Object value)\" is invoked after the method \"computeIfPresent(K key, BiFunction remappingFunction)\", the return value of \"computeIfPresent(K key, BiFunction remappingFunction)\" may be aliased with the first parameter of \"remove(Object key, Object value)\".\n\nWhen the method \"remove(Object key, Object value)\" is invoked after the method \"merge(K key, V value, BiFunction remappingFunction)\", the return value of \"merge(K key, V value, BiFunction remappingFunction)\" may be aliased with the first parameter of \"remove(Object key, Object value)\".\n\nWhen the method \"replace(K key, V value)\" is invoked after the method \"get(Object key)\", the return value of \"get(Object key)\" may be aliased with the second parameter of \"replace(K key, V value)\".\n\nWhen the method \"replace(K key, V value)\" is invoked after the method \"compute(K key, BiFunction remappingFunction)\", the return value of \"compute(K key, BiFunction remappingFunction)\" may be aliased with the second parameter of \"replace(K key, V value)\".\n\nWhen the method \"replace(K key, V value)\" is invoked after the method \"computeIfAbsent(K key, Function mappingFunction)\", the return value of \"computeIfAbsent(K key, Function mappingFunction)\" may be aliased with the second parameter of \"replace(K key, V value)\".\n\nWhen the method \"replace(K key, V value)\" is invoked after the method \"computeIfPresent(K key, BiFunction remappingFunction)\", the return value of \"computeIfPresent(K key, BiFunction remappingFunction)\" may be aliased with the second parameter of \"replace(K key, V value)\".\n\nWhen the method \"replace(K key, V value)\" is invoked after the method \"merge(K key, V value, BiFunction remappingFunction)\", the return value of \"merge(K key, V value, BiFunction remappingFunction)\" may be aliased with the second parameter of \"replace(K key, V value)\".\n\nWhen the method \"replace(K key, V oldValue, V newValue)\" is invoked after the method \"get(Object key)\", the return value of \"get(Object key)\" may be aliased with the first parameter of \"replace(K key, V oldValue, V newValue)\".\n\nWhen the method \"replace(K key, V oldValue, V newValue)\" is invoked after the method \"compute(K key, BiFunction remappingFunction)\", the return value of \"compute(K key, BiFunction remappingFunction)\" may be aliased with the first parameter of \"replace(K key, V oldValue, V newValue)\".\n\nWhen the method \"replace(K key, V oldValue, V newValue)\" is invoked after the method \"computeIfAbsent(K key, Function mappingFunction)\", the return value of \"computeIfAbsent(K key, Function mappingFunction)\" may be aliased with the first parameter of \"replace(K key, V oldValue, V newValue)\".\n\nWhen the method \"replace(K key, V oldValue, V newValue)\" is invoked after the method \"computeIfPresent(K key, BiFunction remappingFunction)\", the return value of \"computeIfPresent(K key, BiFunction remappingFunction)\" may be aliased with the first parameter of \"replace(K key, V oldValue, V newValue)\".\n\nWhen the method \"replace(K key, V oldValue, V newValue)\" is invoked after the method \"merge(K key, V value, BiFunction remappingFunction)\", the return value of \"merge(K key, V value, BiFunction remappingFunction)\" may be aliased with the first parameter of \"replace(K key, V oldValue, V newValue)\".\n\nWhen the method \"forEach(BiConsumer action)\" is invoked after the method \"get(Object key)\", the return value of \"get(Object key)\" may be aliased with the first parameter of \"forEach(BiConsumer action)\".\n\nWhen the method \"forEach(BiConsumer action)\" is invoked after the method \"compute(K key, BiFunction remappingFunction)\", the return value of \"compute(K key, BiFunction remappingFunction)\" may be aliased with the first parameter of \"forEach(BiConsumer action)\".\n\nWhen the method \"forEach(BiConsumer action)\" is invoked after the method \"computeIfAbsent(K key, Function mappingFunction)\", the return value of \"computeIfAbsent(K key, Function mappingFunction)\" may be aliased with the first parameter of \"forEach(BiConsumer action)\".\n\nWhen the method \"forEach(BiConsumer action)\" is invoked after the method \"computeIfPresent(K key, BiFunction remappingFunction)\", the return value of \"computeIfPresent(K key, BiFunction remappingFunction)\" may be aliased with the first parameter of \"forEach(BiConsumer action)\".\n\nWhen the method \"forEach(BiConsumer action)\" is invoked after the method \"merge(K key, V value, BiFunction remappingFunction)\", the return value of \"merge(K key, V value, BiFunction remappingFunction)\" may be aliased with the first parameter of \"forEach(BiConsumer action)\".\n\nWhen the method \"compute(K key, BiFunction remappingFunction)\" is invoked after the method \"get(Object key)\", the return value of \"get(Object key)\" may be aliased with the first parameter of \"compute(K key, BiFunction remappingFunction)\".\n\nWhen the method \"computeIfAbsent(K key, Function mappingFunction)\" is invoked after the method \"get(Object key)\", the return value of \"get(Object key)\" may be aliased with the first parameter of \"computeIfAbsent(K key, Function mappingFunction)\".\n\nWhen the method \"computeIfPresent(K key, BiFunction remappingFunction)\" is invoked after the method \"get(Object key)\", the return value of \"get(Object key)\" may be aliased with the first parameter of \"computeIfPresent(K key, BiFunction remappingFunction)\".\n\nWhen the method \"merge(K key, V value, BiFunction remappingFunction)\" is invoked after the method \"get(Object key)\", the return value of \"get(Object key)\" may be aliased with the first parameter of \"merge(K key, V value, BiFunction remappingFunction)\".\n\nWhen the method \"put(K key, V value)\" is invoked after the method \"putIfAbsent(K key, V value)\", the return value of \"putIfAbsent(K key, V value)\" may be aliased with the second parameter of \"put(K key, V value)\".\n\nWhen the method \"replace(K key, V value)\" is invoked after the method \"putIfAbsent(K key, V value)\", the return value of \"putIfAbsent(K key, V value)\" may be aliased with the second parameter of \"replace(K key, V value)\".\n\nWhen the method \"replace(K key, V oldValue, V newValue)\" is invoked after the method \"putIfAbsent(K key, V value)\", the return value of \"putIfAbsent(K key, V value)\" may be aliased with the second parameter of \"replace(K key, V oldValue, V newValue)\".\n\nWhen the method \"remove(Object key)\" is invoked after the method \"putIfAbsent(K key, V value)\", the return value of \"putIfAbsent(K key, V value)\" may be aliased with the first parameter of \"remove(Object key)\".\n\nWhen the method \"remove(Object key, Object value)\" is invoked after the method \"putIfAbsent(K key, V value)\", the return value of \"putIfAbsent(K key, V value)\" may be aliased with the first parameter of \"remove(Object key, Object value)\".\n\nWhen the method \"replace(K",
    "java.util.BitSet": "When the method \"void and(BitSet set)\" is invoked after the method \"void andNot(BitSet set)\" upon the same object, the return value of \"void and(BitSet set)\" may be aliased with the parameter of \"void andNot(BitSet set)\".\n\nWhen the method \"void and(BitSet set)\" is invoked after the method \"void or(BitSet set)\" upon the same object, the return value of \"void and(BitSet set)\" may be aliased with the parameter of \"void or(BitSet set)\".\n\nWhen the method \"void or(BitSet set)\" is invoked after the method \"void and(BitSet set)\" upon the same object, the return value of \"void or(BitSet set)\" may be aliased with the parameter of \"void and(BitSet set)\".\n\nWhen the method \"BitSet get(int fromIndex, int toIndex)\" is invoked after the method \"void clear(int fromIndex, int toIndex)\" upon the same object, the return value of \"BitSet get(int fromIndex, int toIndex)\" may be aliased with the parameters of \"void clear(int fromIndex, int toIndex)\".\n\nWhen the method \"void clear(int bitIndex)\" is invoked after the method \"void set(int bitIndex)\" upon the same object, the return value of \"void clear(int bitIndex)\" may be aliased with the parameter of \"void set(int bitIndex)\".\n\nWhen the method \"void set(int bitIndex)\" is invoked after the method \"void clear(int bitIndex)\" upon the same object, the return value of \"void set(int bitIndex)\" may be aliased with the parameter of \"void clear(int bitIndex)\".\n\nWhen the method \"void flip(int bitIndex)\" is invoked after the method \"void set(int bitIndex, boolean value)\" upon the same object, the return value of \"void flip(int bitIndex)\" may be aliased with the first parameter of \"void set(int bitIndex, boolean value)\".\n\nWhen the method \"void set(int bitIndex, boolean value)\" is invoked after the method \"void flip(int bitIndex)\" upon the same object, the first parameter of \"void set(int bitIndex, boolean value)\" may be aliased with the return value of \"void flip(int bitIndex)\".\n\nWhen the method \"BitSet valueOf(byte[] bytes)\" is invoked after the method \"BitSet valueOf(long[] longs)\" upon the same object, the return value of \"BitSet valueOf(byte[] bytes)\" may be aliased with the parameter of \"BitSet valueOf(long[] longs)\".\n\nWhen the method \"BitSet valueOf(long[] longs)\" is invoked after the method \"BitSet valueOf(byte[] bytes)\" upon the same object, the parameter of \"BitSet valueOf(long[] longs)\" may be aliased with the return value of \"BitSet valueOf(byte[] bytes)\".\n\nWhen the method \"BitSet valueOf(ByteBuffer bb)\" is invoked after the method \"BitSet valueOf(LongBuffer lb)\" upon the same object, the return value of \"BitSet valueOf(ByteBuffer bb)\" may be aliased with the parameter of \"BitSet valueOf(LongBuffer lb)\".\n\nWhen the method \"BitSet valueOf(LongBuffer lb)\" is invoked after the method \"BitSet valueOf(ByteBuffer bb)\" upon the same object, the parameter of \"BitSet valueOf(LongBuffer lb)\" may be aliased with the return value of \"BitSet valueOf(ByteBuffer bb)\".",
    "java.util.Collection": "When we invoke the method toArray(T[] a) after the method add(E e) upon the same object, the return value of toArray(T[] a) may be aliased with the first parameter of add(E e).\n\nWhen we invoke the method toArray() after the method addAll(Collection c) upon the same object, the return value of toArray() may be aliased with any element in the parameter of addAll(Collection c).\n\nWhen we invoke the method toArray(T[] a) after the method removeAll(Collection c) upon the same object, the return value of toArray(T[] a) may be aliased with the first parameter of removeAll(Collection c).\n\nWhen we invoke the method toArray(T[] a) after the method retainAll(Collection c) upon the same object, the return value of toArray(T[] a) may be aliased with the first parameter of retainAll(Collection c).",
    "java.util.Deque": "When the two methods \"void addFirst(E e)\" and \"E peekFirst()\" have the same value of the first parameter, the return value of \"E peekFirst()\" may be aliased with the first parameter of \"void addFirst(E e)\" if the method peekFirst is invoked after the method addFirst.\n\nWhen the two methods \"void addLast(E e)\" and \"E peekLast()\" have the same value of the first parameter, the return value of \"E peekLast()\" may be aliased with the first parameter of \"void addLast(E e)\" if the method peekLast is invoked after the method addLast.\n\nWhen the two methods \"boolean offer(E e)\" and \"E poll()\" have the same value of the first parameter, the return value of \"E poll()\" may be aliased with the first parameter of \"boolean offer(E e)\" if the method poll is invoked after the method offer.\n\nWhen the two methods \"boolean offerFirst(E e)\" and \"E pollFirst()\" have the same value of the first parameter, the return value of \"E pollFirst()\" may be aliased with the first parameter of \"boolean offerFirst(E e)\" if the method pollFirst is invoked after the method offerFirst.\n\nWhen the two methods \"boolean offerLast(E e)\" and \"E pollLast()\" have the same value of the first parameter, the return value of \"E pollLast()\" may be aliased with the first parameter of \"boolean offerLast(E e)\" if the method pollLast is invoked after the method offerLast.\n\nWhen the two methods \"void push(E e)\" and \"E pop()\" have the same value of the first parameter, the return value of \"E pop()\" may be aliased with the first parameter of \"void push(E e)\" if the method pop is invoked after the method push.\n\nWhen the two methods \"E removeFirst()\" and \"E peekFirst()\" have the same value of the first parameter, the return value of \"E peekFirst()\" may be aliased with the first parameter of \"E removeFirst()\" if the method peekFirst is invoked after the method removeFirst.\n\nWhen the two methods \"E removeLast()\" and \"E peekLast()\" have the same value of the first parameter, the return value of \"E peekLast()\" may be aliased with the first parameter of \"E removeLast()\" if the method peekLast is invoked after the method removeLast.",
    "java.util.Dictionary": "When we invoke the method get after method put upon the same object, the return value of the method get is aliased with the second parameter of the method put if the method get is invoked after the method put.\n\nWhen we invoke the method remove after method put upon the same object, the second parameter of the method put may be aliased with the parameter of the method remove if the method remove is invoked after the method put.\n\nWhen we invoke the method remove after method get upon the same object, the return value of the method get may be aliased with the parameter of the method remove if the method remove is invoked after the method get.",
    "java.util.EnumMap": "The aliasing specifications for the given Java class EnumMap are:\n\n- The return value of \"EnumMap clone()\" may be aliased with the k-th parameter of \"V put(K key, V value)\" if the method clone is invoked after the method put.\n- The return value of \"V get(Object key)\" may be aliased with the second parameter of \"V put(K key, V value)\" if the method get is invoked after the method put.\n- The return value of \"V put(K key, V value)\" may be aliased with the second parameter of \"V putIfAbsent(K key, V value)\" if the method put is invoked before the method putIfAbsent.\n- The return value of \"V put(K key, V value)\" may be aliased with the second parameter of \"V replace(K key, V value)\" if the method put is invoked before the method replace.\n- The return value of \"V put(K key, V value)\" may be aliased with the second parameter of \"boolean replace(K key, V oldValue, V newValue)\" if the method put is invoked before the method replace.\n- The return value of \"V put(K key, V value)\" may be aliased with the second parameter of \"V compute(K key, BiFunction remappingFunction)\" if the method put is invoked before the method compute.\n- The return value of \"V put(K key, V value)\" may be aliased with the second parameter of \"V computeIfAbsent(K key, Function mappingFunction)\" if the method put is invoked before the method computeIfAbsent.\n- The return value of \"V put(K key, V value)\" may be aliased with the second parameter of \"V computeIfPresent(K key, BiFunction remappingFunction)\" if the method put is invoked before the method computeIfPresent.\n- The return value of \"V put(K key, V value)\" may be aliased with the second parameter of \"V merge(K key, V value, BiFunction remappingFunction)\" if the method put is invoked before the method merge.\n- The return value of \"V putIfAbsent(K key, V value)\" may be aliased with the second parameter of \"V replace(K key, V value)\" if the method putIfAbsent is invoked before the method replace.\n- The return value of \"V putIfAbsent(K key, V value)\" may be aliased with the second parameter of \"boolean replace(K key, V oldValue, V newValue)\" if the method putIfAbsent is invoked before the method replace.\n- The return value of \"V putIfAbsent(K key, V value)\" may be aliased with the second parameter of \"V compute(K key, BiFunction remappingFunction)\" if the method putIfAbsent is invoked before the method compute.\n- The return value of \"V putIfAbsent(K key, V value)\" may be aliased with the second parameter of \"V computeIfAbsent(K key, Function mappingFunction)\" if the method putIfAbsent is invoked before the method computeIfAbsent.\n- The return value of \"V putIfAbsent(K key, V value)\" may be aliased with the second parameter of \"V computeIfPresent(K key, BiFunction remappingFunction)\" if the method putIfAbsent is invoked before the method computeIfPresent.\n- The return value of \"V putIfAbsent(K key, V value)\" may be aliased with the second parameter of \"V merge(K key, V value, BiFunction remappingFunction)\" if the method putIfAbsent is invoked before the method merge.\n- The return value of \"boolean remove(Object key, Object value)\" may be aliased with the second parameter of \"V put(K key, V value)\" if the method remove is invoked before the method put.\n- The return value of \"boolean remove(Object key, Object value)\" may be aliased with the second parameter of \"V putIfAbsent(K key, V value)\" if the method remove is invoked before the method putIfAbsent.\n- The return value of \"boolean remove(Object key, Object value)\" may be aliased with the second parameter of \"V compute(K key, BiFunction remappingFunction)\" if the method remove is invoked before the method compute.\n- The return value of \"boolean remove(Object key, Object value)\" may be aliased with the second parameter of \"V computeIfAbsent(K key, Function mappingFunction)\" if the method remove is invoked before the method computeIfAbsent.\n- The return value of \"boolean remove(Object key, Object value)\" may be aliased with the second parameter of \"V computeIfPresent(K key, BiFunction remappingFunction)\" if the method remove is invoked before the method computeIfPresent.\n- The return value of \"boolean remove(Object key, Object value)\" may be aliased with the second parameter of \"V merge(K key, V value, BiFunction remappingFunction)\" if the method remove is invoked before the method merge.\n- The return value of \"V replace(K key, V value)\" may be aliased with the second parameter of \"V put(K key, V value)\" if the method replace is invoked before the method put.\n- The return value of \"V replace(K key, V value)\" may be aliased with the second parameter of \"V putIfAbsent(K key, V value)\" if the method replace is invoked before the method putIfAbsent.\n- The return value of \"V replace(K key, V value)\" may be aliased with the second parameter of \"V compute(K key, BiFunction remappingFunction)\" if the method replace is invoked before the method compute.\n- The return value of \"V replace(K key, V value)\" may be aliased with the second parameter of \"V computeIfAbsent(K key, Function mappingFunction)\" if the method replace is invoked before the method computeIfAbsent.\n- The return value of \"V replace(K key, V value)\" may be aliased with the second parameter of \"V computeIfPresent(K key, BiFunction remappingFunction)\" if the method replace is invoked before the method computeIfPresent.\n- The return value of \"V replace(K key, V value)\" may be aliased with the second parameter of \"V merge(K key, V value, BiFunction remappingFunction)\" if the method replace is invoked before the method merge.\n- The return value of \"boolean replace(K key, V oldValue, V newValue)\" may be aliased with the second parameter of \"V put(K key, V value)\" if the method replace is invoked before the method put.\n- The return value of \"boolean replace(K key, V oldValue, V newValue)\" may be aliased with the second parameter of \"V putIfAbsent(K key, V value)\" if the method replace is invoked before the method putIfAbsent.\n- The return value of \"boolean replace(K key, V oldValue, V newValue)\" may be aliased with the second parameter of \"V compute(K key, BiFunction remappingFunction)\" if the method replace is invoked before the method compute.\n- The return value of \"boolean replace(K key, V oldValue, V newValue)\" may be aliased with the second parameter of \"V computeIfAbsent(K key, Function mappingFunction)\" if the method replace is invoked before the method computeIfAbsent.\n- The return value of \"boolean replace(K key, V oldValue, V newValue)\" may be aliased with the second parameter of \"V computeIfPresent(K key, BiFunction remappingFunction)\" if the method replace is invoked before the method computeIfPresent.\n- The return value of \"boolean replace(K key, V oldValue, V newValue)\" may be aliased with the second parameter of \"V merge(K key, V value, BiFunction remappingFunction)\" if the method replace is invoked before the method merge.",
    "java.util.HashMap": "When the method \"V compute(K key, BiFunction remappingFunction)\" is invoked after the method \"V computeIfPresent(K key, BiFunction remappingFunction)\" upon the same object, the return value of the method \"V computeIfPresent(K key, BiFunction remappingFunction)\" may be aliased with the second parameter of the method \"V compute(K key, BiFunction remappingFunction)\".\n\nWhen the method \"V compute(K key, BiFunction remappingFunction)\" is invoked after the method \"V computeIfAbsent(K key, Function mappingFunction)\" upon the same object, the return value of the method \"V computeIfAbsent(K key, Function mappingFunction)\" may be aliased with the second parameter of the method \"V compute(K key, BiFunction remappingFunction)\".\n\nWhen the method \"V put(K key, V value)\" is invoked after the method \"V remove(Object key)\" upon the same object, the return value of the method \"V remove(Object key)\" may be aliased with the second parameter of the method \"V put(K key, V value)\".\n\nWhen the method \"V put(K key, V value)\" is invoked after the method \"V putIfAbsent(K key, V value)\" upon the same object, the return value of the method \"V putIfAbsent(K key, V value)\" may be aliased with the second parameter of the method \"V put(K key, V value)\".\n\nWhen the method \"V replace(K key, V value)\" is invoked after the method \"boolean remove(Object key, Object value)\" upon the same object, the return value of the method \"boolean remove(Object key, Object value)\" may be aliased with the second parameter of the method \"V replace(K key, V value)\".\n\nWhen the method \"V replace(K key, V oldValue, V newValue)\" is invoked after the method \"V replace(K key, V value)\" upon the same object, the return value of the method \"V replace(K key, V value)\" may be aliased with the second parameter of the method \"V replace(K key, V oldValue, V newValue)\".",
    "java.util.Hashtable": "When the method \"void clear()\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"Object clone()\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"V compute(K key, BiFunction remappingFunction)\" is invoked after the method \"V put(K key, V value)\", the return value of \"V compute(K key, BiFunction remappingFunction)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"V computeIfAbsent(K key, Function mappingFunction)\" is invoked after the method \"V put(K key, V value)\", the return value of \"V computeIfAbsent(K key, Function mappingFunction)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"V computeIfPresent(K key, BiFunction remappingFunction)\" is invoked after the method \"V put(K key, V value)\", the return value of \"V computeIfPresent(K key, BiFunction remappingFunction)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"boolean contains(Object value)\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"boolean containsKey(Object key)\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"boolean containsValue(Object value)\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"Enumeration elements()\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"Set entrySet()\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"boolean equals(Object o)\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"void forEach(BiConsumer action)\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"V get(Object key)\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"V getOrDefault(Object key, V defaultValue)\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"int hashCode()\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"boolean isEmpty()\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"Enumeration keys()\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"Set keySet()\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"V merge(K key, V value, BiFunction remappingFunction)\" is invoked after the method \"V put(K key, V value)\", the return value of \"V merge(K key, V value, BiFunction remappingFunction)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"V put(K key, V value)\" is invoked after the method \"V compute(K key, BiFunction remappingFunction)\", the return value of \"V compute(K key, BiFunction remappingFunction)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"V put(K key, V value)\" is invoked after the method \"V computeIfAbsent(K key, Function mappingFunction)\", the return value of \"V computeIfAbsent(K key, Function mappingFunction)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"V put(K key, V value)\" is invoked after the method \"V computeIfPresent(K key, BiFunction remappingFunction)\", the return value of \"V computeIfPresent(K key, BiFunction remappingFunction)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"V put(K key, V value)\" is invoked after the method \"V putIfAbsent(K key, V value)\", the return value of \"V putIfAbsent(K key, V value)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"void putAll(Map t)\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"V putIfAbsent(K key, V value)\" is invoked after the method \"V put(K key, V value)\", the return value of \"V put(K key, V value)\" may be aliased with the second parameter of \"V putIfAbsent(K key, V value)\".\n\nWhen the method \"void rehash()\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"V remove(Object key)\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"boolean remove(Object key, Object value)\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"V replace(K key, V value)\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"boolean replace(K key, V oldValue, V newValue)\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"void replaceAll(BiFunction function)\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"int size()\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"String toString()\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"Collection values()\" is invoked, there is no aliasing relation with any other method.\n\nWhen the method \"void putAll(Map m)\" is invoked, there is no aliasing relation with any other method.",
    "java.util.IdentityHashMap": "When the method \"V get(Object key)\" is invoked after the method \"V put(K key, V value)\" upon the same object, the return value of \"V get(Object key)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"void putAll(Map m)\" is invoked after the method \"V put(K key, V value)\" upon the same object, the return value of \"V put(K key, V value)\" may be aliased with the values of \"Map m\".\n\nWhen the method \"V remove(Object key)\" is invoked after the method \"V put(K key, V value)\" upon the same object, the return value of \"V remove(Object key)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"V compute(K key, BiFunction remappingFunction)\" is invoked after the method \"V put(K key, V value)\" upon the same object, the return value of \"V compute(K key, BiFunction remappingFunction)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"V computeIfAbsent(K key, Function mappingFunction)\" is invoked after the method \"V put(K key, V value)\" upon the same object, the return value of \"V computeIfAbsent(K key, Function mappingFunction)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"V computeIfPresent(K key, BiFunction remappingFunction)\" is invoked after the method \"V put(K key, V value)\" upon the same object, the return value of \"V computeIfPresent(K key, BiFunction remappingFunction)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"V merge(K key, V value, BiFunction remappingFunction)\" is invoked after the method \"V put(K key, V value)\" upon the same object, the return value of \"V merge(K key, V value, BiFunction remappingFunction)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"V putIfAbsent(K key, V value)\" is invoked after the method \"V put(K key, V value)\" upon the same object, the return value of \"V putIfAbsent(K key, V value)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"boolean remove(Object key, Object value)\" is invoked after the method \"V put(K key, V value)\" upon the same object, the return value of \"boolean remove(Object key, Object value)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"V replace(K key, V value)\" is invoked after the method \"V put(K key, V value)\" upon the same object, the return value of \"V replace(K key, V value)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"boolean replace(K key, V oldValue, V newValue)\" is invoked after the method \"V put(K key, V value)\" upon the same object, the return value of \"boolean replace(K key, V oldValue, V newValue)\" may be aliased with the second parameter of \"V put(K key, V value)\".",
    "java.util.Iterator": "When the method \"void forEachRemaining(Consumer action)\" is invoked, the return value of \"E next()\" may be aliased with the first parameter of \"void forEachRemaining(Consumer action)\" if the method next is invoked after the method forEachRemaining.\n\nWhen the method \"void remove()\" is invoked, the return value of \"E next()\" may be aliased with the first parameter of \"void remove()\" if the method next is invoked after the method remove.",
    "java.util.LinkedHashMap": "When the two methods \"V put(K key, V value)\" and \"V putIfAbsent(K key, V value)\" have the same value of the first parameter, the return value of \"V putIfAbsent(K key, V value)\" may be aliased with the second parameter of \"V put(K key, V value)\" if the method putIfAbsent is invoked after the method put.\n\nWhen the two methods \"V put(K key, V value)\" and \"V replace(K key, V value)\" have the same value of the first parameter, the return value of \"V replace(K key, V value)\" may be aliased with the second parameter of \"V put(K key, V value)\" if the method replace is invoked after the method put.\n\nWhen the two methods \"V put(K key, V value)\" and \"boolean replace(K key, V oldValue, V newValue)\" have the same value of the first parameter, the return value of \"boolean replace(K key, V oldValue, V newValue)\" may be aliased with the second parameter of \"V put(K key, V value)\" if the method replace is invoked after the method put.\n\nWhen the two methods \"V put(K key, V value)\" and \"V remove(Object key)\" have the same value of the first parameter, the return value of \"V remove(Object key)\" may be aliased with the second parameter of \"V put(K key, V value)\" if the method remove is invoked after the method put.\n\nWhen the two methods \"V put(K key, V value)\" and \"boolean remove(Object key, Object value)\" have the same value of the first parameter, the return value of \"boolean remove(Object key, Object value)\" may be aliased with the second parameter of \"V put(K key, V value)\" if the method remove is invoked after the method put.\n\nWhen the two methods \"V get(Object key)\" and \"V put(K key, V value)\" have the same value of the first parameter, the return value of \"V put(K key, V value)\" may be aliased with the parameter of \"V get(Object key)\" if the method put is invoked after the method get.\n\nWhen the two methods \"V get(Object key)\" and \"V getOrDefault(Object key, V defaultValue)\" have the same value of the first parameter, the return value of \"V getOrDefault(Object key, V defaultValue)\" may be aliased with the parameter of \"V get(Object key)\" if the method getOrDefault is invoked after the method get.\n\nWhen the two methods \"V get(Object key)\" and \"V compute(K key, BiFunction remappingFunction)\" have the same value of the first parameter, the return value of \"V compute(K key, BiFunction remappingFunction)\" may be aliased with the parameter of \"V get(Object key)\" if the method compute is invoked after the method get.\n\nWhen the two methods \"V get(Object key)\" and \"V computeIfAbsent(K key, Function mappingFunction)\" have the same value of the first parameter, the return value of \"V computeIfAbsent(K key, Function mappingFunction)\" may be aliased with the parameter of \"V get(Object key)\" if the method computeIfAbsent is invoked after the method get.\n\nWhen the two methods \"V get(Object key)\" and \"V computeIfPresent(K key, BiFunction remappingFunction)\" have the same value of the first parameter, the return value of \"V computeIfPresent(K key, BiFunction remappingFunction)\" may be aliased with the parameter of \"V get(Object key)\" if the method computeIfPresent is invoked after the method get.\n\nWhen the two methods \"boolean containsKey(Object key)\" and \"V get(Object key)\" have the same value of the first parameter, the return value of \"V get(Object key)\" may be aliased with the parameter of \"boolean containsKey(Object key)\" if the method get is invoked after the method containsKey.\n\nWhen the two methods \"V remove(Object key)\" and \"V get(Object key)\" have the same value of the first parameter, the return value of \"V remove(Object key)\" may be aliased with the parameter of \"V get(Object key)\" if the method remove is invoked after the method get.\n\nWhen the two methods \"boolean remove(Object key, Object value)\" and \"V get(Object key)\" have the same value of the first parameter, the return value of \"boolean remove(Object key, Object value)\" may be aliased with the parameter of \"V get(Object key)\" if the method remove is invoked after the method get.\n\nWhen the two methods \"V replace(K key, V value)\" and \"V get(Object key)\" have the same value of the first parameter, the return value of \"V replace(K key, V value)\" may be aliased with the parameter of \"V get(Object key)\" if the method replace is invoked after the method get.\n\nWhen the two methods \"boolean replace(K key, V oldValue, V newValue)\" and \"V get(Object key)\" have the same value of the first parameter, the return value of \"boolean replace(K key, V oldValue, V newValue)\" may be aliased with the parameter of \"V get(Object key)\" if the method replace is invoked after the method get.",
    "java.util.LinkedList": "When the two methods have the same value of the first parameter, the return value of \"boolean add(E e)\" may be aliased with the first parameter of \"void push(E e)\" if the method add is invoked after the method push.\n\nWhen the two methods have the same value of the first parameter, the return value of \"E poll()\" may be aliased with the first parameter of \"boolean offer(E e)\" if the method poll is invoked after the method offer.\n\nWhen the two methods have the same value of the first parameter, the return value of \"E pollFirst()\" may be aliased with the first parameter of \"boolean offerFirst(E e)\" if the method pollFirst is invoked after the method offerFirst.\n\nWhen the two methods have the same value of the first parameter, the return value of \"E pollLast()\" may be aliased with the first parameter of \"boolean offerLast(E e)\" if the method pollLast is invoked after the method offerLast.\n\nWhen the two methods have the same value of the first parameter, the return value of \"boolean remove(Object o)\" may be aliased with the first parameter of \"E get(int index)\" if the method remove is invoked after the method get.\n\nWhen the two methods have the same value of the first parameter, the return value of \"E removeFirst()\" may be aliased with the first parameter of \"void addFirst(E e)\" if the method removeFirst is invoked after the method addFirst.\n\nWhen the two methods have the same value of the first parameter, the return value of \"boolean removeFirstOccurrence(Object o)\" may be aliased with the first parameter of \"void add(E e)\" if the method removeFirstOccurrence is invoked after the method add.\n\nWhen the two methods have the same value of the first parameter, the return value of \"E removeLast()\" may be aliased with the first parameter of \"void addLast(E e)\" if the method removeLast is invoked after the method addLast.\n\nWhen the two methods have the same value of the first parameter, the return value of \"boolean removeLastOccurrence(Object o)\" may be aliased with the first parameter of \"void add(E e)\" if the method removeLastOccurrence is invoked after the method add.",
    "java.util.List": "When the two methods have the same value of the first parameter:\n- The return value of \"E get(int index)\" may be aliased with the second parameter of \"void add(int index, E element)\" if the method get is invoked after the method add.\n\nThe return value of \"E poll(long timeout, TimeUnit unit)\" may be aliased with the first parameter of \"boolean offer(E e, long timeout, TimeUnit unit)\" if the method poll is invoked after the method offer.\n\nThe return value of \"ActionMap getActionMap()\" may be aliased with the first parameter of \"void setActionMap(ActionMap am)\" if the method getActionMap is invoked after the method setActionMap.",
    "java.util.ListIterator": "When we invoke the method \"E next()\" after method \"void add(E e)\", the return value of \"E next()\" may be aliased with the parameter of \"void set(E e)\".\nWhen we invoke the method \"E previous()\" after method \"void add(E e)\", the return value of \"E previous()\" may be aliased with the parameter of \"void set(E e)\".\nWhen we invoke the method \"E next()\" after method \"void set(E e)\", the return value of \"E next()\" may be aliased with the parameter of \"void set(E e)\".\nWhen we invoke the method \"E previous()\" after method \"void set(E e)\", the return value of \"E previous()\" may be aliased with the parameter of \"void set(E e)\".",
    "java.util.Map": "When the method \"V compute(K key, BiFunction remappingFunction)\" is invoked after the method \"V put(K key, V value)\", the return value of \"V compute(K key, BiFunction remappingFunction)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"V computeIfAbsent(K key, Function mappingFunction)\" is invoked after the method \"V put(K key, V value)\", the return value of \"V computeIfAbsent(K key, Function mappingFunction)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"V computeIfPresent(K key, BiFunction remappingFunction)\" is invoked after the method \"V put(K key, V value)\", the return value of \"V computeIfPresent(K key, BiFunction remappingFunction)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"V merge(K key, V value, BiFunction remappingFunction)\" is invoked after the method \"V put(K key, V value)\", the return value of \"V merge(K key, V value, BiFunction remappingFunction)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"V putIfAbsent(K key, V value)\" is invoked after the method \"V put(K key, V value)\", the return value of \"V putIfAbsent(K key, V value)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"V remove(Object key)\" is invoked after the method \"V put(K key, V value)\", the return value of \"V remove(Object key)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"boolean remove(Object key, Object value)\" is invoked after the method \"V put(K key, V value)\", the return value of \"boolean remove(Object key, Object value)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"V replace(K key, V value)\" is invoked after the method \"V put(K key, V value)\", the return value of \"V replace(K key, V value)\" may be aliased with the second parameter of \"V put(K key, V value)\".\n\nWhen the method \"boolean replace(K key, V oldValue, V newValue)\" is invoked after the method \"V put(K key, V value)\", the return value of \"boolean replace(K key, V oldValue, V newValue)\" may be aliased with the second parameter of \"V put(K key, V value)\".",
    "java.util.NavigableMap": "The aliasing specifications for the given methods are:\n\n- When the method \"Map.Entry ceilingEntry(K key)\" is invoked after the method \"NavigableMap descendingMap()\", the return value of \"Map.Entry ceilingEntry(K key)\" may be aliased with the k-th parameter of \"NavigableMap descendingMap()\" if the i_m-th parameter of \"NavigableMap descendingMap()\" is aliased with the j_m-th parameter of \"Map.Entry ceilingEntry(K key)\" for each 1 <= m <= n.\n- When the method \"K ceilingKey(K key)\" is invoked after the method \"NavigableMap descendingMap()\", the return value of \"K ceilingKey(K key)\" may be aliased with the k-th parameter of \"NavigableMap descendingMap()\" if the i_m-th parameter of \"NavigableMap descendingMap()\" is aliased with the j_m-th parameter of \"K ceilingKey(K key)\" for each 1 <= m <= n.\n- When the method \"NavigableSet descendingKeySet()\" is invoked after the method \"NavigableMap descendingMap()\", the return value of \"NavigableSet descendingKeySet()\" may be aliased with the k-th parameter of \"NavigableMap descendingMap()\" if the i_m-th parameter of \"NavigableMap descendingMap()\" is aliased with the j_m-th parameter of \"NavigableSet descendingKeySet()\" for each 1 <= m <= n.\n- When the method \"Map.Entry firstEntry()\" is invoked after the method \"NavigableMap descendingMap()\", the return value of \"Map.Entry firstEntry()\" may be aliased with the k-th parameter of \"NavigableMap descendingMap()\" if the i_m-th parameter of \"NavigableMap descendingMap()\" is aliased with the j_m-th parameter of \"Map.Entry firstEntry()\" for each 1 <= m <= n.\n- When the method \"Map.Entry floorEntry(K key)\" is invoked after the method \"NavigableMap descendingMap()\", the return value of \"Map.Entry floorEntry(K key)\" may be aliased with the k-th parameter of \"NavigableMap descendingMap()\" if the i_m-th parameter of \"NavigableMap descendingMap()\" is aliased with the j_m-th parameter of \"Map.Entry floorEntry(K key)\" for each 1 <= m <= n.\n- When the method \"K floorKey(K key)\" is invoked after the method \"NavigableMap descendingMap()\", the return value of \"K floorKey(K key)\" may be aliased with the k-th parameter of \"NavigableMap descendingMap()\" if the i_m-th parameter of \"NavigableMap descendingMap()\" is aliased with the j_m-th parameter of \"K floorKey(K key)\" for each 1 <= m <= n.\n- When the method \"NavigableSet headMap(K toKey)\" is invoked after the method \"NavigableMap descendingMap()\", the return value of \"NavigableSet headMap(K toKey)\" may be aliased with the k-th parameter of \"NavigableMap descendingMap()\" if the i_m-th parameter of \"NavigableMap descendingMap()\" is aliased with the j_m-th parameter of \"NavigableSet headMap(K toKey)\" for each 1 <= m <= n.\n- When the method \"NavigableMap headMap(K toKey, boolean inclusive)\" is invoked after the method \"NavigableMap descendingMap()\", the return value of \"NavigableMap headMap(K toKey, boolean inclusive)\" may be aliased with the k-th parameter of \"NavigableMap descendingMap()\" if the i_m-th parameter of \"NavigableMap descendingMap()\" is aliased with the j_m-th parameter of \"NavigableMap headMap(K toKey, boolean inclusive)\" for each 1 <= m <= n.\n- When the method \"Map.Entry higherEntry(K key)\" is invoked after the method \"NavigableMap descendingMap()\", the return value of \"Map.Entry higherEntry(K key)\" may be aliased with the k-th parameter of \"NavigableMap descendingMap()\" if the i_m-th parameter of \"NavigableMap descendingMap()\" is aliased with the j_m-th parameter of \"Map.Entry higherEntry(K key)\" for each 1 <= m <= n.\n- When the method \"K higherKey(K key)\" is invoked after the method \"NavigableMap descendingMap()\", the return value of \"K higherKey(K key)\" may be aliased with the k-th parameter of \"NavigableMap descendingMap()\" if the i_m-th parameter of \"NavigableMap descendingMap()\" is aliased with the j_m-th parameter of \"K higherKey(K key)\" for each 1 <= m <= n.\n- When the method \"Map.Entry lastEntry()\" is invoked after the method \"NavigableMap descendingMap()\", the return value of \"Map.Entry lastEntry()\" may be aliased with the k-th parameter of \"NavigableMap descendingMap()\" if the i_m-th parameter of \"NavigableMap descendingMap()\" is aliased with the j_m-th parameter of \"Map.Entry lastEntry()\" for each 1 <= m <= n.\n- When the method \"Map.Entry lowerEntry(K key)\" is invoked after the method \"NavigableMap descendingMap()\", the return value of \"Map.Entry lowerEntry(K key)\" may be aliased with the k-th parameter of \"NavigableMap descendingMap()\" if the i_m-th parameter of \"NavigableMap descendingMap()\" is aliased with the j_m-th parameter of \"Map.Entry lowerEntry(K key)\" for each 1 <= m <= n.\n- When the method \"K lowerKey(K key)\" is invoked after the method \"NavigableMap descendingMap()\", the return value of \"K lowerKey(K key)\" may be aliased with the k-th parameter of \"NavigableMap descendingMap()\" if the i_m-th parameter of \"NavigableMap descendingMap()\" is aliased with the j_m-th parameter of \"K lowerKey(K key)\" for each 1 <= m <= n.\n- When the method \"NavigableSet navigableKeySet()\" is invoked after the method \"NavigableMap descendingMap()\", the return value of \"NavigableSet navigableKeySet()\" may be aliased with the k-th parameter of \"NavigableMap descendingMap()\" if the i_m-th parameter of \"NavigableMap descendingMap()\" is aliased with the j_m-th parameter of \"NavigableSet navigableKeySet()\" for each 1 <= m <= n.\n- When the method \"Map.Entry pollFirstEntry()\" is invoked after the method \"NavigableMap descendingMap()\", the return value of \"Map.Entry pollFirstEntry()\" may be aliased with the k-th parameter of \"NavigableMap descendingMap()\" if the i_m-th parameter of \"NavigableMap descendingMap()\" is aliased with the j_m-th parameter of \"Map.Entry pollFirstEntry()\" for each 1 <= m <= n.\n- When the method \"Map.Entry pollLastEntry()\" is invoked after the method \"NavigableMap descendingMap()\", the return value of \"Map.Entry pollLastEntry()\" may be aliased with the k-th parameter of \"NavigableMap descendingMap()\" if the i_m-th parameter of \"NavigableMap descendingMap()\" is aliased with the j_m-th parameter of \"Map.Entry pollLastEntry()\" for each 1 <= m <= n.\n- When the method \"NavigableMap subMap(K fromKey, boolean fromInclusive, K toKey, boolean toInclusive)\" is invoked after the method \"NavigableMap descendingMap()\", the return value of \"NavigableMap subMap(K fromKey, boolean fromInclusive, K toKey, boolean toInclusive)\" may be aliased with the k-th parameter of \"NavigableMap descendingMap()\" if the i_m-th parameter of \"NavigableMap descendingMap()\" is aliased with the j_m-th parameter of \"NavigableMap subMap(K fromKey, boolean fromInclusive, K toKey, boolean toInclusive)\" for each 1 <= m <= n.\n- When the method \"SortedMap subMap(K fromKey, K toKey)\" is invoked after the method \"NavigableMap descendingMap()\", the return value of \"SortedMap subMap(K fromKey, K toKey)\" may be aliased with the k-th parameter of \"NavigableMap descendingMap()\" if the i_m-th parameter of \"NavigableMap descendingMap()\" is aliased with the j_m-th parameter of \"SortedMap subMap(K fromKey, K toKey)\" for each 1 <= m <= n.\n- When the method \"SortedMap tailMap(K fromKey)\" is invoked after the method \"NavigableMap descendingMap()\", the return value of \"SortedMap tailMap(K fromKey)\" may be aliased with the k-th parameter of \"NavigableMap descendingMap()\" if the i_m-th parameter of \"NavigableMap descendingMap()\" is aliased with the j_m-th parameter of \"SortedMap tailMap(K fromKey)\" for each 1 <= m <= n.\n- When the method \"NavigableMap tailMap(K fromKey, boolean inclusive",
    "java.util.Properties": "When the two methods have the same value of the first parameter, the return value of \"String getProperty(String key)\" may be aliased with the second parameter of \"Object setProperty(String key, String value)\" if the method getProperty is invoked after the method setProperty.\n\nWhen the two methods have the same value of the first parameter, the return value of \"String getProperty(String key)\" may be aliased with the second parameter of \"String getProperty(String key, String defaultValue)\" if the method getProperty is invoked after the method getProperty.\n\nThe return value of \"Enumeration propertyNames()\" may be aliased with the parameter of \"void list(PrintStream out)\" if the method propertyNames is invoked after the method list.\n\nThe return value of \"Enumeration propertyNames()\" may be aliased with the parameter of \"void list(PrintWriter out)\" if the method propertyNames is invoked after the method list.\n\nThe return value of \"Object setProperty(String key, String value)\" may be aliased with the parameter of \"void list(PrintStream out)\" if the method setProperty is invoked after the method list.\n\nThe return value of \"Object setProperty(String key, String value)\" may be aliased with the parameter of \"void list(PrintWriter out)\" if the method setProperty is invoked after the method list.\n\nThe return value of \"void load(InputStream inStream)\" may be aliased with the parameter of \"void load(Reader reader)\" if the method load is invoked after the method load.\n\nThe return value of \"void load(InputStream inStream)\" may be aliased with the parameter of \"void loadFromXML(InputStream in)\" if the method load is invoked after the method loadFromXML.\n\nThe return value of \"void load(Reader reader)\" may be aliased with the parameter of \"void loadFromXML(InputStream in)\" if the method load is invoked after the method loadFromXML.\n\nThe return value of \"Object setProperty(String key, String value)\" may be aliased with the parameter of \"void load(InputStream inStream)\" if the method setProperty is invoked after the method load.\n\nThe return value of \"Object setProperty(String key, String value)\" may be aliased with the parameter of \"void load(Reader reader)\" if the method setProperty is invoked after the method load.\n\nThe return value of \"Object setProperty(String key, String value)\" may be aliased with the parameter of \"void loadFromXML(InputStream in)\" if the method setProperty is invoked after the method loadFromXML.\n\nThe return value of \"Enumeration propertyNames()\" may be aliased with the parameter of \"Object setProperty(String key, String value)\" if the method propertyNames is invoked after the method setProperty.\n\nThe return value of \"void store(OutputStream out, String comments)\" may be aliased with the parameter of \"void store(Writer writer, String comments)\" if the method store is invoked after the method store.\n\nThe return value of \"Object setProperty(String key, String value)\" may be aliased with the parameter of \"void store(OutputStream out, String comments)\" if the method setProperty is invoked after the method store.\n\nThe return value of \"Object setProperty(String key, String value)\" may be aliased with the parameter of \"void store(Writer writer, String comments)\" if the method setProperty is invoked after the method store.\n\nThe return value of \"Enumeration propertyNames()\" may be aliased with the parameter of \"void store(OutputStream out, String comments)\" if the method propertyNames is invoked after the method store.\n\nThe return value of \"Enumeration propertyNames()\" may be aliased with the parameter of \"void store(Writer writer, String comments)\" if the method propertyNames is invoked after the method store.\n\nThe return value of \"String getProperty(String key)\" may be aliased with the parameter of \"Object setProperty(String key, String value)\" if the method getProperty is invoked after the method store.\n\nThe return value of \"String getProperty(String key)\" may be aliased with the parameter of \"void store(OutputStream out, String comments)\" if the method getProperty is invoked after the method store.\n\nThe return value of \"String getProperty(String key)\" may be aliased with the parameter of \"void store(Writer writer, String comments)\" if the method getProperty is invoked after the method store.\n\nThe return value of \"String getProperty(String key, String defaultValue)\" may be aliased with the parameter of \"Object setProperty(String key, String value)\" if the method getProperty is invoked after the method store.\n\nThe return value of \"String getProperty(String key, String defaultValue)\" may be aliased with the parameter of \"void store(OutputStream out, String comments)\" if the method getProperty is invoked after the method store.\n\nThe return value of \"String getProperty(String key, String defaultValue)\" may be aliased with the parameter of \"void store(Writer writer, String comments)\" if the method getProperty is invoked after the method store.\n\nThe return value of \"Enumeration propertyNames()\" may be aliased with the parameter of \"void storeToXML(OutputStream os, String comment)\" if the method propertyNames is invoked after the method storeToXML.\n\nThe return value of \"Enumeration propertyNames()\" may be aliased with the parameter of \"void storeToXML(OutputStream os, String comment, String encoding)\" if the method propertyNames is invoked after the method storeToXML.\n\nThe return value of \"Object setProperty(String key, String value)\" may be aliased with the parameter of \"void storeToXML(OutputStream os, String comment)\" if the method setProperty is invoked after the method storeToXML.\n\nThe return value of \"Object setProperty(String key, String value)\" may be aliased with the parameter of \"void storeToXML(OutputStream os, String comment, String encoding)\" if the method setProperty is invoked after the method storeToXML.\n\nThe return value of \"String getProperty(String key)\" may be aliased with the parameter of \"void storeToXML(OutputStream os, String comment)\" if the method getProperty is invoked after the method storeToXML.\n\nThe return value of \"String getProperty(String key)\" may be aliased with the parameter of \"void storeToXML(OutputStream os, String comment, String encoding)\" if the method getProperty is invoked after the method storeToXML.\n\nThe return value of \"String getProperty(String key, String defaultValue)\" may be aliased with the parameter of \"void storeToXML(OutputStream os, String comment)\" if the method getProperty is invoked after the method storeToXML.\n\nThe return value of \"String getProperty(String key, String defaultValue)\" may be aliased with the parameter of \"void storeToXML(OutputStream os, String comment, String encoding)\" if the method getProperty is invoked after the method storeToXML.\n\nThe return value of \"Enumeration propertyNames()\" may be aliased with the parameter of \"Set stringPropertyNames()\" if the method propertyNames is invoked after the method stringPropertyNames.\n\nThe return value of \"Object setProperty(String key, String value)\" may be aliased with the parameter of \"Set stringPropertyNames()\" if the method setProperty is invoked after the method stringPropertyNames.\n\nThe return value of \"void store(OutputStream out, String comments)\" may be aliased with the parameter of \"void storeToXML(OutputStream os, String comment)\" if the method store is invoked after the method storeToXML.\n\nThe return value of \"String getProperty(String key)\" may be aliased with the parameter of \"void store(OutputStream out, String comments)\" if the method getProperty is invoked after the method storeToXML.\n\nThe return value of \"String getProperty(String key, String defaultValue)\" may be aliased with the parameter of \"void store(OutputStream out, String comments)\" if the method getProperty is invoked after the method storeToXML.\n\nThe return value of \"Object setProperty(String key, String value)\" may be aliased with the parameter of \"void store(OutputStream out, String comments)\" if the method setProperty is invoked after the method storeToXML.\n\nThe return value of \"Enumeration propertyNames()\" may be aliased with the parameter of \"void store(Writer writer, String comments)\" if the method propertyNames is invoked after the method store.\n\nThe return value of \"Object setProperty(String key, String value)\" may be aliased with the parameter of \"void store(Writer writer, String comments)\" if the method setProperty is invoked after the method store.\n\nThe return value of \"void store(OutputStream out, String comments)\" may be aliased with the parameter of \"void store(Writer writer, String comments)\" if the method store is invoked after the method store.\n\nThe return value of \"String getProperty(String key)\" may be aliased with the parameter of \"void store(Writer writer, String comments)\" if the method getProperty is invoked after the method store.\n\nThe return value of \"String getProperty(String key, String defaultValue)\" may be aliased with the parameter of \"void store(Writer writer, String comments)\" if the method getProperty is invoked after the method store.\n\nThe return value of \"Object setProperty(String key, String value)\" may be aliased with the parameter of \"void store(Writer writer, String comments)\" if the method setProperty is invoked after the method store.\n\nThe return value of \"Enumeration propertyNames()\" may be aliased with the parameter of \"V put(K key, V value)\" if the method propertyNames is invoked after the method put.\n\nThe return value of \"Enumeration propertyNames()\" may be aliased with the parameter of \"V putIfAbsent(K key, V value)\" if the method propertyNames is invoked after the method putIfAbsent.\n\nThe return value of \"Enumeration propertyNames()\" may be aliased with the parameter of \"void putAll(Map t)\" if the method propertyNames is invoked after the method putAll.\n\nThe return value of \"Enumeration propertyNames()\" may be aliased with the parameter of \"V merge(K key, V value, BiFunction remappingFunction)\" if the method propertyNames",
    "java.util.Queue": "When the method \"E element()\" is invoked after the method \"E peek()\", the return value of \"E element()\" may be aliased with the return value of \"E peek()\".\n\nWhen the method \"E poll()\" is invoked after the method \"boolean offer(E e)\", the return value of \"E poll()\" may be aliased with the first parameter of \"boolean offer(E e)\".\n\nWhen the method \"E remove()\" is invoked after the method \"boolean add(E e)\", the return value of \"E remove()\" may be aliased with the first parameter of \"boolean add(E e)\".\n\nWhen the method \"boolean addAll(Collection c)\" is invoked after the method \"void clear()\", the return value of \"boolean addAll(Collection c)\" may be aliased with the return value of \"void clear()\".\n\nWhen the method \"boolean contains(Object o)\" is invoked after the method \"boolean add(E e)\", the return value of \"boolean contains(Object o)\" may be aliased with the first parameter of \"boolean add(E e)\".\n\nWhen the method \"boolean containsAll(Collection c)\" is invoked after the method \"boolean addAll(Collection c)\", the return value of \"boolean containsAll(Collection c)\" may be aliased with the return value of \"boolean addAll(Collection c)\".\n\nWhen the method \"boolean removeAll(Collection c)\" is invoked after the method \"boolean addAll(Collection c)\", the return value of \"boolean removeAll(Collection c)\" may be aliased with the return value of \"boolean addAll(Collection c)\".\n\nWhen the method \"boolean retainAll(Collection c)\" is invoked after the method \"boolean addAll(Collection c)\", the return value of \"boolean retainAll(Collection c)\" may be aliased with the return value of \"boolean addAll(Collection c)\".\n\nWhen the method \"Object[] toArray()\" is invoked after the method \"Iterator iterator()\", the return value of \"Object[] toArray()\" may be aliased with the return value of \"Iterator iterator()\".\n\nWhen the method \"T[] toArray(T[] a)\" is invoked after the method \"Iterator iterator()\", the return value of \"T[] toArray(T[] a)\" may be aliased with the return value of \"Iterator iterator()\".",
    "java.util.SortedMap": "When we invoke the method \"entrySet\" after the method \"put\", the return value of \"entrySet\" may be aliased with the parameter of \"putAll\".\n\nWhen we invoke the method \"firstKey\" after the method \"put\", the return value of \"firstKey\" may be aliased with the parameter of \"putIfAbsent\".\n\nWhen we invoke the method \"headMap\" after the method \"put\", the return value of \"headMap\" may be aliased with the parameter of \"putAll\".\n\nWhen we invoke the method \"keySet\" after the method \"put\", the return value of \"keySet\" may be aliased with the parameter of \"putAll\".\n\nWhen we invoke the method \"lastKey\" after the method \"put\", the return value of \"lastKey\" may be aliased with the parameter of \"putIfAbsent\".\n\nWhen we invoke the method \"subMap\" after the method \"put\", the return value of \"subMap\" may be aliased with the parameter of \"putAll\".\n\nWhen we invoke the method \"tailMap\" after the method \"put\", the return value of \"tailMap\" may be aliased with the parameter of \"putAll\".\n\nWhen we invoke the method \"values\" after the method \"put\", the return value of \"values\" may be aliased with the parameter of \"putAll\".",
    "java.util.Stack": "When the two methods have the same value of the first parameter, the return value of \"E get(int index)\" may be aliased with the second parameter of \"void add(int index, E element)\" if the method get is invoked after the method add.\n\nThe return value of \"E get(int index)\" may be aliased with the first parameter of \"void add(E e)\" if the method get is invoked after the method add.\n\nThe return value of \"E poll(long timeout, TimeUnit unit)\" may be aliased with the first parameter of \"offer(E e, long timeout, TimeUnit unit)\" if the method poll is invoked after the method offer.\n\nThe return value of \"ActionMap getActionMap()\" may be aliased with the first parameter of \"void setActionMap(ActionMap am)\" if the method getActionMap is invoked after the method setActionMap.",
    "java.util.TreeMap": "The aliasing specifications for TreeMap class are:\n\n- The return value of \"Map.Entry ceilingEntry(K key)\" may be aliased with the return value of \"Map.Entry floorEntry(K key)\" if the method ceilingEntry is invoked after the method floorEntry.\n- The return value of \"K ceilingKey(K key)\" may be aliased with the return value of \"K floorKey(K key)\" if the method ceilingKey is invoked after the method floorKey.\n- No aliasing specification between \"void clear()\" and other methods.\n- No aliasing specification between \"Object clone()\" and other methods.\n- No aliasing specification between \"Comparator comparator()\" and other methods.\n- No aliasing specification between \"boolean containsKey(Object key)\" and other methods.\n- No aliasing specification between \"boolean containsValue(Object value)\" and other methods.\n- No aliasing specification between \"NavigableSet descendingKeySet()\" and other methods.\n- The return value of \"NavigableMap descendingMap()\" may be aliased with the return value of \"NavigableMap headMap(K toKey, boolean inclusive)\" if the method descendingMap is invoked after the method headMap.\n- No aliasing specification between \"Set entrySet()\" and other methods.\n- No aliasing specification between \"Map.Entry firstEntry()\" and other methods.\n- The return value of \"K firstKey()\" may be aliased with the return value of \"K lastKey()\" if the method firstKey is invoked after the method lastKey.\n- The return value of \"Map.Entry floorEntry(K key)\" may be aliased with the return value of \"Map.Entry ceilingEntry(K key)\" if the method floorEntry is invoked after the method ceilingEntry.\n- The return value of \"K floorKey(K key)\" may be aliased with the return value of \"K ceilingKey(K key)\" if the method floorKey is invoked after the method ceilingKey.\n- The return value of \"void forEach(BiConsumer action)\" may be aliased with the k-th parameter of \"V put(K key, V value)\" if the method forEach is invoked after the method put for each 1 <= k <= 2.\n- No aliasing specification between \"V get(Object key)\" and other methods.\n- The return value of \"SortedMap headMap(K toKey)\" may be aliased with the return value of \"NavigableMap headMap(K toKey, boolean inclusive)\" if the method headMap is invoked after the method headMap.\n- No aliasing specification between \"NavigableMap headMap(K toKey, boolean inclusive)\" and other methods.\n- The return value of \"Map.Entry higherEntry(K key)\" may be aliased with the return value of \"Map.Entry lowerEntry(K key)\" if the method higherEntry is invoked after the method lowerEntry.\n- The return value of \"K higherKey(K key)\" may be aliased with the return value of \"K lowerKey(K key)\" if the method higherKey is invoked after the method lowerKey.\n- No aliasing specification between \"Set keySet()\" and other methods.\n- No aliasing specification between \"Map.Entry lastEntry()\" and other methods.\n- The return value of \"K lastKey()\" may be aliased with the return value of \"K firstKey()\" if the method lastKey is invoked after the method firstKey.\n- The return value of \"Map.Entry ceilingEntry(K key)\" may be aliased with the return value of \"Map.Entry floorEntry(K key)\" if the method ceilingEntry is invoked after the method floorEntry.\n- The return value of \"K ceilingKey(K key)\" may be aliased with the return value of \"K floorKey(K key)\" if the method ceilingKey is invoked after the method floorKey.\n- No aliasing specification between \"NavigableSet navigableKeySet()\" and other methods.\n- The return value of \"Map.Entry pollFirstEntry()\" may be aliased with the return value of \"Map.Entry pollLastEntry()\" if the method pollFirstEntry is invoked after the method pollLastEntry.\n- The return value of \"Map.Entry pollLastEntry()\" may be aliased with the return value of \"Map.Entry pollFirstEntry()\" if the method pollLastEntry is invoked after the method pollFirstEntry.\n- The return value of \"V put(K key, V value)\" may be aliased with the k-th parameter of \"void replace(K key, V value)\" if the method put is invoked after the method replace for each 1 <= k <= 2.\n- The return value of \"V put(K key, V value)\" may be aliased with the k-th parameter of \"boolean replace(K key, V oldValue, V newValue)\" if the method put is invoked after the method replace for each 1 <= k <= 3.\n- The return value of \"void replace(K key, V value)\" may be aliased with the k-th parameter of \"V put(K key, V value)\" if the method replace is invoked after the method put for each 1 <= k <= 2.\n- The return value of \"boolean replace(K key, V oldValue, V newValue)\" may be aliased with the k-th parameter of \"V put(K key, V value)\" if the method replace is invoked after the method put for each 1 <= k <= 3.\n- The return value of \"void forEach(BiConsumer action)\" may be aliased with the k-th parameter of \"V compute(K key, BiFunction remappingFunction)\" if the method forEach is invoked after the method compute for each 1 <= k <= 2.\n- The return value of \"V compute(K key, BiFunction remappingFunction)\" may be aliased with the k-th parameter of \"void forEach(BiConsumer action)\" if the method compute is invoked after the method forEach for each 1 <= k <= 2.\n- The return value of \"void forEach(BiConsumer action)\" may be aliased with the k-th parameter of \"V computeIfAbsent(K key, Function mappingFunction)\" if the method forEach is invoked after the method computeIfAbsent for each 1 <= k <= 2.\n- The return value of \"V computeIfAbsent(K key, Function mappingFunction)\" may be aliased with the k-th parameter of \"void forEach(BiConsumer action)\" if the method computeIfAbsent is invoked after the method forEach for each 1 <= k <= 2.\n- The return value of \"void forEach(BiConsumer action)\" may be aliased with the k-th parameter of \"V computeIfPresent(K key, BiFunction remappingFunction)\" if the method forEach is invoked after the method computeIfPresent for each 1 <= k <= 2.\n- The return value of \"V computeIfPresent(K key, BiFunction remappingFunction)\" may be aliased with the k-th parameter of \"void forEach(BiConsumer action)\" if the method computeIfPresent is invoked after the method forEach for each 1 <= k <= 2.\n- No aliasing specification between \"V getOrDefault(Object key, V defaultValue)\" and other methods.\n- The return value of \"V merge(K key, V value, BiFunction remappingFunction)\" may be aliased with the k-th parameter of \"V put(K key, V value)\" if the method merge is invoked after the method put for each 1 <= k <= 2.\n- The return value of \"V put(K key, V value)\" may be aliased with the return value of \"V putIfAbsent(K key, V value)\" if the method put is invoked after the method putIfAbsent.\n- The return value of \"V putIfAbsent(K key, V value)\" may be aliased with the return value of \"V put(K key, V value)\" if the method putIfAbsent is invoked after the method put.\n- No aliasing specification between \"boolean remove(Object key, Object value)\" and other methods.\n- The return value of \"void forEach(Consumer action)\" may be aliased with the k-th parameter of \"V replace(K key, V value)\" if the method forEach is invoked after the method replace for each 1 <= k <= 2.\n- The return value of \"V replace(K key, V value)\" may be aliased with the k-th parameter of \"void forEach(Consumer action)\" if the method replace is invoked after the method forEach for each 1 <= k <= 2.\n- No alias",
    "java.util.Vector": "When the two methods have the same value of the first parameter:\n- The return value of \"E get(int index)\" may be aliased with the second parameter of \"void add(int index, E element)\" if the method get is invoked after the method add.\n- The return value of \"ListIterator listIterator()\" may be aliased with the second parameter of \"void add(int index, E element)\" if the method listIterator is invoked after the method add.\n- The return value of \"ListIterator listIterator(int index)\" may be aliased with the second parameter of \"void add(int index, E element)\" if the method listIterator is invoked after the method add.\n- The return value of \"E remove(int index)\" may be aliased with the second parameter of \"void add(int index, E element)\" if the method remove is invoked after the method add.\n- The return value of \"E set(int index, E element)\" may be aliased with the second parameter of \"void add(int index, E element)\" if the method set is invoked after the method add.\n- The return value of \"E remove(int index)\" may be aliased with the second parameter of \"boolean addAll(int index, Collection c)\" if the method remove is invoked after the method addAll.\n- The return value of \"E set(int index, E element)\" may be aliased with the second parameter of \"boolean addAll(int index, Collection c)\" if the method set is invoked after the method addAll.\n\nThe return value of \"E get(int index)\" may be aliased with the first parameter of \"void add(E e)\" if the method get is invoked after the method add.\n\nThe return value of \"E get(int index)\" may be aliased with the first parameter of \"boolean addAll(Collection c)\" if the method get is invoked after the method addAll.\n\nThe return value of \"E get(int index)\" may be aliased with the first parameter of \"boolean addAll(int index, Collection c)\" if the method get is invoked after the method addAll.\n\nThe return value of \"E get(int index)\" may be aliased with the parameter of \"void addElement(E obj)\" if the method get is invoked after the method addElement.\n\nThe return value of \"E get(int index)\" may be aliased with the parameter of \"void insertElementAt(E obj, int index)\" if the method get is invoked after the method insertElementAt.\n\nThe return value of \"E get(int index)\" may be aliased with the parameter of \"void setElementAt(E obj, int index)\" if the method get is invoked after the method setElementAt.\n\nThe return value of \"E remove(int index)\" may be aliased with the first parameter of \"boolean remove(Object o)\" if the method remove is invoked after the method removeElement.\n\nThe return value of \"E remove(int index)\" may be aliased with the parameter of \"void removeElementAt(int index)\" if the method remove is invoked after the method removeElementAt.",
    "java.util.concurrent.ConcurrentHashMap": "When the method \"V compute(K key, BiFunction remappingFunction)\" is invoked after the method \"void forEach(long parallelismThreshold, BiConsumer action)\", the return value of \"V compute(K key, BiFunction remappingFunction)\" may be aliased with the second parameter of \"void forEach(long parallelismThreshold, BiConsumer action)\".\n\nWhen the method \"V compute(K key, BiFunction remappingFunction)\" is invoked after the method \"void forEach(long parallelismThreshold, Function, ? extends U transformer, Consumer action)\", the return value of \"V compute(K key, BiFunction remappingFunction)\" may be aliased with the third parameter of \"void forEach(long parallelismThreshold, Function, ? extends U transformer, Consumer action)\".\n\nWhen the method \"V computeIfAbsent(K key, Function mappingFunction)\" is invoked after the method \"void forEach(long parallelismThreshold, BiConsumer action)\", the return value of \"V computeIfAbsent(K key, Function mappingFunction)\" may be aliased with the second parameter of \"void forEach(long parallelismThreshold, BiConsumer action)\".\n\nWhen the method \"V computeIfAbsent(K key, Function mappingFunction)\" is invoked after the method \"void forEach(long parallelismThreshold, Function, ? extends U transformer, Consumer action)\", the return value of \"V computeIfAbsent(K key, Function mappingFunction)\" may be aliased with the third parameter of \"void forEach(long parallelismThreshold, Function, ? extends U transformer, Consumer action)\".\n\nWhen the method \"V computeIfPresent(K key, BiFunction remappingFunction)\" is invoked after the method \"void forEach(long parallelismThreshold, BiConsumer action)\", the return value of \"V computeIfPresent(K key, BiFunction remappingFunction)\" may be aliased with the second parameter of \"void forEach(long parallelismThreshold, BiConsumer action)\".\n\nWhen the method \"V computeIfPresent(K key, BiFunction remappingFunction)\" is invoked after the method \"void forEach(long parallelismThreshold, Function, ? extends U transformer, Consumer action)\", the return value of \"V computeIfPresent(K key, BiFunction remappingFunction)\" may be aliased with the third parameter of \"void forEach(long parallelismThreshold, Function, ? extends U transformer, Consumer action)\".\n\nWhen the method \"V merge(K key, V value, BiFunction remappingFunction)\" is invoked after the method \"void forEach(long parallelismThreshold, BiConsumer action)\", the return value of \"V merge(K key, V value, BiFunction remappingFunction)\" may be aliased with the second parameter of \"void forEach(long parallelismThreshold, BiConsumer action)\".\n\nWhen the method \"V merge(K key, V value, BiFunction remappingFunction)\" is invoked after the method \"void forEach(long parallelismThreshold, Function, ? extends U transformer, Consumer action)\", the return value of \"V merge(K key, V value, BiFunction remappingFunction)\" may be aliased with the third parameter of \"void forEach(long parallelismThreshold, Function, ? extends U transformer, Consumer action)\".\n\nWhen the method \"void putAll(Map m)\" is invoked after the method \"void forEach(long parallelismThreshold, BiConsumer action)\", the parameter of \"void putAll(Map m)\" may be aliased with the second parameter of \"void forEach(long parallelismThreshold, BiConsumer action)\".\n\nWhen the method \"void putAll(Map m)\" is invoked after the method \"void forEach(long parallelismThreshold, Function, ? extends U transformer, Consumer action)\", the parameter of \"void putAll(Map m)\" may be aliased with the third parameter of \"void forEach(long parallelismThreshold, Function, ? extends U transformer, Consumer action)\".",
    "java.util.concurrent.ConcurrentMap": "The aliasing specifications for the given Java class \"ConcurrentMap\" are:\n\n1. When the method \"V compute(K key, BiFunction remappingFunction)\" is invoked after the method \"V computeIfAbsent(K key, Function mappingFunction)\" upon the same object, the return value of \"V compute(K key, BiFunction remappingFunction)\" may be aliased with the second parameter of \"V computeIfAbsent(K key, Function mappingFunction)\".\n\n2. When the method \"V compute(K key, BiFunction remappingFunction)\" is invoked after the method \"V computeIfPresent(K key, BiFunction remappingFunction)\" upon the same object, the return value of \"V compute(K key, BiFunction remappingFunction)\" may be aliased with the second parameter of \"V computeIfPresent(K key, BiFunction remappingFunction)\".\n\n3. When the method \"V computeIfAbsent(K key, Function mappingFunction)\" is invoked after the method \"V compute(K key, BiFunction remappingFunction)\" upon the same object, the return value of \"V computeIfAbsent(K key, Function mappingFunction)\" may be aliased with the second parameter of \"V compute(K key, BiFunction remappingFunction)\".\n\n4. When the method \"V computeIfPresent(K key, BiFunction remappingFunction)\" is invoked after the method \"V compute(K key, BiFunction remappingFunction)\" upon the same object, the return value of \"V computeIfPresent(K key, BiFunction remappingFunction)\" may be aliased with the second parameter of \"V compute(K key, BiFunction remappingFunction)\".\n\n5. When the method \"V putIfAbsent(K key, V value)\" is invoked after the method \"V getOrDefault(Object key, V defaultValue)\" upon the same object, the return value of \"V getOrDefault(Object key, V defaultValue)\" may be aliased with the second parameter of \"V putIfAbsent(K key, V value)\".\n\n6. When the method \"V merge(K key, V value, BiFunction remappingFunction)\" is invoked after the method \"V getOrDefault(Object key, V defaultValue)\" upon the same object, the return value of \"V getOrDefault(Object key, V defaultValue)\" may be aliased with the first parameter of \"V merge(K key, V value, BiFunction remappingFunction)\".\n\n7. When the method \"V putIfAbsent(K key, V value)\" is invoked after the method \"V merge(K key, V value, BiFunction remappingFunction)\" upon the same object, the return value of \"V merge(K key, V value, BiFunction remappingFunction)\" may be aliased with the second parameter of \"V putIfAbsent(K key, V value)\".\n\n8. When the method \"boolean remove(Object key, Object value)\" is invoked after the method \"V putIfAbsent(K key, V value)\" upon the same object, the return value of \"V putIfAbsent(K key, V value)\" may be aliased with the second parameter of \"boolean remove(Object key, Object value)\".\n\n9. When the method \"V replace(K key, V value)\" is invoked after the method \"V putIfAbsent(K key, V value)\" upon the same object, the return value of \"V putIfAbsent(K key, V value)\" may be aliased with the first parameter of \"V replace(K key, V value)\".\n\n10. When the method \"boolean replace(K key, V oldValue, V newValue)\" is invoked after the method \"V putIfAbsent(K key, V value)\" upon the same object, the return value of \"V putIfAbsent(K key, V value)\" may be aliased with the first parameter of \"boolean replace(K key, V oldValue, V newValue)\".\n\n11. When the method \"V replace(K key, V value)\" is invoked after the method \"boolean remove(Object key, Object value)\" upon the same object, the return value of \"boolean remove(Object key, Object value)\" may be aliased with the first parameter of \"V replace(K key, V value)\".\n\n12. When the method \"boolean replace(K key, V oldValue, V newValue)\" is invoked after the method \"boolean remove(Object key, Object value)\" upon the same object, the return value of \"boolean remove(Object key, Object value)\" may be aliased with the first parameter of \"boolean replace(K key, V oldValue, V newValue)\".\n\nNo aliasing specifications exist for the other method pairs.",
    "java.util.concurrent.atomic.AtomicLongArray": "When the method \"long accumulateAndGet(int i, long x, LongBinaryOperator accumulatorFunction)\" is invoked after the method \"long getAndAccumulate(int i, long x, LongBinaryOperator accumulatorFunction)\", the return value of \"long accumulateAndGet(int i, long x, LongBinaryOperator accumulatorFunction)\" may be aliased with the third parameter of \"long getAndAccumulate(int i, long x, LongBinaryOperator accumulatorFunction)\".\n\nWhen the method \"long addAndGet(int i, long delta)\" is invoked after the method \"long getAndAdd(int i, long delta)\", the return value of \"long addAndGet(int i, long delta)\" may be aliased with the second parameter of \"long getAndAdd(int i, long delta)\".\n\nWhen the method \"long decrementAndGet(int i)\" is invoked after the method \"long getAndDecrement(int i)\", the return value of \"long decrementAndGet(int i)\" may be aliased with the first parameter of \"long getAndDecrement(int i)\".\n\nWhen the method \"long incrementAndGet(int i)\" is invoked after the method \"long getAndIncrement(int i)\", the return value of \"long incrementAndGet(int i)\" may be aliased with the first parameter of \"long getAndIncrement(int i)\".\n\nWhen the method \"long getAndSet(int i, long newValue)\" is invoked after the method \"void lazySet(int i, long newValue)\", the return value of \"long getAndSet(int i, long newValue)\" may be aliased with the second parameter of \"void lazySet(int i, long newValue)\".\n\nWhen the method \"long getAndUpdate(int i, LongUnaryOperator updateFunction)\" is invoked after the method \"long updateAndGet(int i, LongUnaryOperator updateFunction)\", the return value of \"long getAndUpdate(int i, LongUnaryOperator updateFunction)\" may be aliased with the third parameter of \"long updateAndGet(int i, LongUnaryOperator updateFunction)\".",
    "java.util.concurrent.atomic.AtomicReference": "When the method \"V get()\" is invoked after the method \"void set(V newValue)\", the return value of \"V get()\" may be aliased with the parameter of \"void set(V newValue)\".\n\nWhen the method \"V getAndSet(V newValue)\" is invoked after the method \"void set(V newValue)\", the return value of \"V getAndSet(V newValue)\" may be aliased with the parameter of \"void set(V newValue)\".\n\nWhen the method \"V getAndUpdate(UnaryOperator updateFunction)\" is invoked after the method \"void set(V newValue)\", the first parameter of \"UnaryOperator updateFunction\" may be aliased with the parameter of \"void set(V newValue)\".\n\nWhen the method \"V accumulateAndGet(V x, BinaryOperator accumulatorFunction)\" is invoked after the method \"void set(V newValue)\", the second parameter of \"BinaryOperator accumulatorFunction\" may be aliased with the parameter of \"void set(V newValue)\".\n\nWhen the method \"V getAndAccumulate(V x, BinaryOperator accumulatorFunction)\" is invoked after the method \"void set(V newValue)\", the second parameter of \"BinaryOperator accumulatorFunction\" may be aliased with the parameter of \"void set(V newValue)\".\n\nWhen the method \"V updateAndGet(UnaryOperator updateFunction)\" is invoked after the method \"void set(V newValue)\", the first parameter of \"UnaryOperator updateFunction\" may be aliased with the parameter of \"void set(V newValue)\".\n\nWhen the method \"void lazySet(V newValue)\" is invoked after the method \"void set(V newValue)\", the parameter of \"void lazySet(V newValue)\" may be aliased with the parameter of \"void set(V newValue)\".\n\nWhen the method \"boolean compareAndSet(V expect, V update)\" is invoked after the method \"void set(V newValue)\", the first and second parameters of \"boolean compareAndSet(V expect, V update)\" may be aliased with the parameter of \"void set(V newValue)\".\n\nWhen the method \"boolean weakCompareAndSet(V expect, V update)\" is invoked after the method \"void set(V newValue)\", the first and second parameters of \"boolean weakCompareAndSet(V expect, V update)\" may be aliased with the parameter of \"void set(V newValue)\".",
    "java.util.concurrent.atomic.AtomicReferenceArray": "When the method \"E get(int i)\" is invoked after the method \"boolean compareAndSet(int i, E expect, E update)\", the return value of \"E get(int i)\" may be aliased with the third parameter of \"boolean compareAndSet(int i, E expect, E update)\".\n\nWhen the method \"E get(int i)\" is invoked after the method \"E getAndSet(int i, E newValue)\", the return value of \"E get(int i)\" may be aliased with the second parameter of \"E getAndSet(int i, E newValue)\".\n\nWhen the method \"E get(int i)\" is invoked after the method \"E getAndAccumulate(int i, E x, BinaryOperator accumulatorFunction)\", the return value of \"E get(int i)\" may be aliased with the second parameter of \"E getAndAccumulate(int i, E x, BinaryOperator accumulatorFunction)\".\n\nWhen the method \"void set(int i, E newValue)\" is invoked after the method \"boolean compareAndSet(int i, E expect, E update)\", the second parameter of \"boolean compareAndSet(int i, E expect, E update)\" may be aliased with the third parameter of \"void set(int i, E newValue)\".\n\nWhen the method \"void set(int i, E newValue)\" is invoked after the method \"E getAndSet(int i, E newValue)\", the return value of \"E getAndSet(int i, E newValue)\" may be aliased with the second parameter of \"void set(int i, E newValue)\".\n\nWhen the method \"void set(int i, E newValue)\" is invoked after the method \"E getAndAccumulate(int i, E x, BinaryOperator accumulatorFunction)\", the second parameter of \"E getAndAccumulate(int i, E x, BinaryOperator accumulatorFunction)\" may be aliased with the second parameter of \"void set(int i, E newValue)\".\n\nWhen the method \"E accumulateAndGet(int i, E x, BinaryOperator accumulatorFunction)\" is invoked after the method \"boolean compareAndSet(int i, E expect, E update)\", the third parameter of \"E accumulateAndGet(int i, E x, BinaryOperator accumulatorFunction)\" may be aliased with the third parameter of \"boolean compareAndSet(int i, E expect, E update)\".\n\nWhen the method \"E accumulateAndGet(int i, E x, BinaryOperator accumulatorFunction)\" is invoked after the method \"E getAndSet(int i, E newValue)\", the return value of \"E getAndSet(int i, E newValue)\" may be aliased with the second parameter of \"E accumulateAndGet(int i, E x, BinaryOperator accumulatorFunction)\".\n\nWhen the method \"E accumulateAndGet(int i, E x, BinaryOperator accumulatorFunction)\" is invoked after the method \"E getAndAccumulate(int i, E x, BinaryOperator accumulatorFunction)\", the return value of \"E getAndAccumulate(int i, E x, BinaryOperator accumulatorFunction)\" may be aliased with the second parameter of \"E accumulateAndGet(int i, E x, BinaryOperator accumulatorFunction)\".\n\nWhen the method \"E getAndUpdate(int i, UnaryOperator updateFunction)\" is invoked after the method \"boolean compareAndSet(int i, E expect, E update)\", the third parameter of \"boolean compareAndSet(int i, E expect, E update)\" may be aliased with the parameter of \"E getAndUpdate(int i, UnaryOperator updateFunction)\".\n\nWhen the method \"E getAndUpdate(int i, UnaryOperator updateFunction)\" is invoked after the method \"E getAndSet(int i, E newValue)\", the return value of \"E getAndSet(int i, E newValue)\" may be aliased with the parameter of \"E getAndUpdate(int i, UnaryOperator updateFunction)\".\n\nWhen the method \"E getAndUpdate(int i, UnaryOperator updateFunction)\" is invoked after the method \"E getAndAccumulate(int i, E x, BinaryOperator accumulatorFunction)\", the return value of \"E getAndAccumulate(int i, E x, BinaryOperator accumulatorFunction)\" may be aliased with the parameter of \"E getAndUpdate(int i, UnaryOperator updateFunction)\".\n\nWhen the method \"E updateAndGet(int i, UnaryOperator updateFunction)\" is invoked after the method \"boolean compareAndSet(int i, E expect, E update)\", the third parameter of \"boolean compareAndSet(int i, E expect, E update)\" may be aliased with the return value of \"E updateAndGet(int i, UnaryOperator updateFunction)\".\n\nWhen the method \"E updateAndGet(int i, UnaryOperator updateFunction)\" is invoked after the method \"E getAndSet(int i, E newValue)\", the return value of \"E getAndSet(int i, E newValue)\" may be aliased with the return value of \"E updateAndGet(int i, UnaryOperator updateFunction)\".\n\nWhen the method \"E updateAndGet(int i, UnaryOperator updateFunction)\" is invoked after the method \"E getAndAccumulate(int i, E x, BinaryOperator accumulatorFunction)\", the return value of \"E getAndAccumulate(int i, E x, BinaryOperator accumulatorFunction)\" may be aliased with the return value of \"E updateAndGet(int i, UnaryOperator updateFunction)\".\n\nWhen the method \"boolean weakCompareAndSet(int i, E expect, E update)\" is invoked after the method \"boolean compareAndSet(int i, E expect, E update)\", the second parameter of \"boolean weakCompareAndSet(int i, E expect, E update)\" may be aliased with the third parameter of \"boolean compareAndSet(int i, E expect, E update)\".",
    "javafx.collections.Observable": "When the method \"void removeListener(InvalidationListener listener)\" is invoked after the method \"void addListener(InvalidationListener listener)\", the first parameter of \"void removeListener(InvalidationListener listener)\" may be aliased with the parameter of \"void addListener(InvalidationListener listener)\".",
    "javafx.collections.ObservableMap": "When the two methods have the same value of the first parameters, the return value of \"V get(Object key)\" may be aliased with the second parameter of \"V put(K key, V value)\" if the method get is invoked after the method put.\n\nWhen the two methods have the same value of the first parameters, the return value of \"V get(Object key)\" may be aliased with the second parameter of \"V putIfAbsent(K key, V value)\" if the method get is invoked after the method putIfAbsent.\n\nWhen the two methods have the same value of the first parameters, the return value of \"V get(Object key)\" may be aliased with the second parameter of \"V merge(K key, V value, BiFunction remappingFunction)\" if the method get is invoked after the method merge.\n\nWhen the two methods have the same value of the first parameters, the return value of \"V remove(Object key)\" may be aliased with the second parameter of \"boolean remove(Object key, Object value)\" if the method remove is invoked after the method remove with two parameters.\n\nWhen the two methods have the same value of the first parameters, the return value of \"V replace(K key, V value)\" may be aliased with the second parameter of \"boolean replace(K key, V oldValue, V newValue)\" if the method replace is invoked after the method replace with three parameters.\n\nWhen the two methods have the same value of the first parameters, the return value of \"V getOrDefault(Object key, V defaultValue)\" may be aliased with the second parameter of \"V putIfAbsent(K key, V value)\" if the method getOrDefault is invoked after the method putIfAbsent.\n\nWhen the two methods have no parameters, the return value of \"int size()\" may be aliased with the parameter of \"void forEach(BiConsumer action)\" if the method size is invoked after the method forEach.\n\nWhen the two methods have no parameters, the return value of \"int size()\" may be aliased with the parameter of \"void replaceAll(BiFunction function)\" if the method size is invoked after the method replaceAll.\n\nWhen the two methods have no parameters, the return value of \"int size()\" may be aliased with the parameter of \"void clear()\" if the method size is invoked after the method clear.\n\nWhen the two methods have no parameters, the return value of \"int size()\" may be aliased with the parameter of \"void putAll(Map m)\" if the method size is invoked after the method putAll.\n\nWhen the two methods have no parameters, the return value of \"int size()\" may be aliased with the parameter of \"void addListener(MapChangeListener listener)\" if the method size is invoked after the method addListener.\n\nWhen the two methods have no parameters, the return value of \"int size()\" may be aliased with the parameter of \"void removeListener(MapChangeListener listener)\" if the method size is invoked after the method removeListener.\n\nWhen the two methods have no parameters, the return value of \"int size()\" may be aliased with the parameter of \"void addListener(InvalidationListener listener)\" if the method size is invoked after the method addListener.\n\nWhen the two methods have no parameters, the return value of \"int size()\" may be aliased with the parameter of \"void removeListener(InvalidationListener listener)\" if the method size is invoked after the method removeListener.",
    "javax.cache.CacheManager": "When the two methods have the same value of the first parameter, the return value of \"Cache getCache(String cacheName)\" may be aliased with the first parameter of \"Cache createCache(String cacheName, C configuration)\" if the method getCache is invoked after the method createCache.\n\nWhen the two methods have the same value of the first parameter, the return value of \"Cache getCache(String cacheName, Class keyType, Class valueType)\" may be aliased with the first parameter of \"Cache createCache(String cacheName, C configuration)\" if the method getCache is invoked after the method createCache. \n\nWhen the two methods have the same value of the first parameter, the return value of \"Iterable getCacheNames()\" may be aliased with the first parameter of \"void destroyCache(String cacheName)\" if the method getCacheNames is invoked after the method destroyCache. \n\nWhen the two methods have the same value of the first parameter, the return value of \"String getCacheNames()\" may be aliased with the first parameter of \"void enableManagement(String cacheName, boolean enabled)\" if the method getCacheNames is invoked after the method enableManagement.\n\nWhen the two methods have the same value of the first parameter, the return value of \"String getCacheNames()\" may be aliased with the first parameter of \"void enableStatistics(String cacheName, boolean enabled)\" if the method getCacheNames is invoked after the method enableStatistics.\n\nThe return value of \"CachingProvider getCachingProvider()\" may be aliased with the first parameter of \"T unwrap(Class clazz)\" if the method getCachingProvider is invoked after the method unwrap.\n\nThe return value of \"ClassLoader getClassLoader()\" may be aliased with the first parameter of \"T unwrap(Class clazz)\" if the method getClassLoader is invoked after the method unwrap.\n\nThe return value of \"Properties getProperties()\" may be aliased with the first parameter of \"T unwrap(Class clazz)\" if the method getProperties is invoked after the method unwrap.\n\nThe return value of \"URI getURI()\" may be aliased with the first parameter of \"T unwrap(Class clazz)\" if the method getURI is invoked after the method unwrap.",
    "javax.servlet.ServletContext": "The aliasing specifications are as follows:\n\n- When the methods \"FilterRegistration.Dynamic addFilter(String filterName, Class filterClass)\" and \"FilterRegistration.Dynamic addFilter(String filterName, Filter filter)\" are invoked upon the same object with the same value of the first parameter, the return value of \"FilterRegistration.Dynamic addFilter(String filterName, Filter filter)\" may be aliased with the second parameter of \"FilterRegistration.Dynamic addFilter(String filterName, Class filterClass)\" if the method \"FilterRegistration.Dynamic addFilter(String filterName, Filter filter)\" is invoked after the method \"FilterRegistration.Dynamic addFilter(String filterName, Class filterClass)\".\n- When the methods \"FilterRegistration.Dynamic addFilter(String filterName, Class filterClass)\" and \"FilterRegistration.Dynamic addFilter(String filterName, String className)\" are invoked upon the same object with the same value of the first parameter, the return value of \"FilterRegistration.Dynamic addFilter(String filterName, String className)\" may be aliased with the second parameter of \"FilterRegistration.Dynamic addFilter(String filterName, Class filterClass)\" if the method \"FilterRegistration.Dynamic addFilter(String filterName, String className)\" is invoked after the method \"FilterRegistration.Dynamic addFilter(String filterName, Class filterClass)\".\n- When the methods \"ServletRegistration.Dynamic addServlet(String servletName, Class servletClass)\" and \"ServletRegistration.Dynamic addServlet(String servletName, Servlet servlet)\" are invoked upon the same object with the same value of the first parameter, the return value of \"ServletRegistration.Dynamic addServlet(String servletName, Servlet servlet)\" may be aliased with the second parameter of \"ServletRegistration.Dynamic addServlet(String servletName, Class servletClass)\" if the method \"ServletRegistration.Dynamic addServlet(String servletName, Servlet servlet)\" is invoked after the method \"ServletRegistration.Dynamic addServlet(String servletName, Class servletClass)\".\n- When the methods \"ServletRegistration.Dynamic addServlet(String servletName, Class servletClass)\" and \"ServletRegistration.Dynamic addServlet(String servletName, String className)\" are invoked upon the same object with the same value of the first parameter, the return value of \"ServletRegistration.Dynamic addServlet(String servletName, String className)\" may be aliased with the second parameter of \"ServletRegistration.Dynamic addServlet(String servletName, Class servletClass)\" if the method \"ServletRegistration.Dynamic addServlet(String servletName, String className)\" is invoked after the method \"ServletRegistration.Dynamic addServlet(String servletName, Class servletClass)\".\n- When the methods \"void addListener(Class listenerClass)\" and \"void addListener(String className)\" are invoked upon the same object with the same value of the parameter, the return value of \"void addListener(String className)\" may be aliased with the parameter of \"void addListener(Class listenerClass)\" if the method \"void addListener(String className)\" is invoked after the method \"void addListener(Class listenerClass)\".\n- When the methods \"void addListener(Class listenerClass)\" and \"void addListener(T t)\" are invoked upon the same object with the same value of the parameter, the return value of \"void addListener(T t)\" may be aliased with the parameter of \"void addListener(Class listenerClass)\" if the method \"void addListener(T t)\" is invoked after the method \"void addListener(Class listenerClass)\".\n- When the methods \"ServletContext getContext(String uripath)\" and \"RequestDispatcher getNamedDispatcher(String name)\" are invoked upon the same object with the same value of the parameter, the return value of \"RequestDispatcher getNamedDispatcher(String name)\" may be aliased with the parameter of \"ServletContext getContext(String uripath)\" if the method \"RequestDispatcher getNamedDispatcher(String name)\" is invoked after the method \"ServletContext getContext(String uripath)\".\n- When the methods \"void log(String msg)\" and \"void log(String message, Throwable throwable)\" are invoked upon the same object, the return value of \"void log(String message, Throwable throwable)\" may be aliased with the first parameter of \"void log(String msg)\" if the method \"void log(String message, Throwable throwable)\" is invoked after the method \"void log(String msg)\".\n- When the methods \"void setAttribute(String name, Object object)\" and \"Object getAttribute(String name)\" are invoked upon the same object with the same value of the first parameter, the return value of \"Object getAttribute(String name)\" may be aliased with the second parameter of \"void setAttribute(String name, Object object)\" if the method \"Object getAttribute(String name)\" is invoked after the method \"void setAttribute(String name, Object object)\".\n- When the methods \"boolean setInitParameter(String name, String value)\" and \"String getInitParameter(String name)\" are invoked upon the same object with the same value of the parameter, the return value of \"String getInitParameter(String name)\" may be aliased with the second parameter of \"boolean setInitParameter(String name, String value)\" if the method \"String getInitParameter(String name)\" is invoked after the method \"boolean setInitParameter(String name, String value)\".\n- When the methods \"void setRequestCharacterEncoding(String encoding)\" and \"String getRequestCharacterEncoding()\" are invoked upon the same object, the return value of \"String getRequestCharacterEncoding()\" may be aliased with the parameter of \"void setRequestCharacterEncoding(String encoding)\" if the method \"String getRequestCharacterEncoding()\" is invoked after the method \"void setRequestCharacterEncoding(String encoding)\".\n- When the methods \"void setResponseCharacterEncoding(String encoding)\" and \"String getResponseCharacterEncoding()\" are invoked upon the same object, the return value of \"String getResponseCharacterEncoding()\" may be aliased with the parameter of \"void setResponseCharacterEncoding(String encoding)\" if the method \"String getResponseCharacterEncoding()\" is invoked after the method \"void setResponseCharacterEncoding(String encoding)\".\n- When the methods \"void setSessionTimeout(int sessionTimeout)\" and \"int getSessionTimeout()\" are invoked upon the same object, the return value of \"int getSessionTimeout()\" may be aliased with the parameter of \"void setSessionTimeout(int sessionTimeout)\" if the method \"int getSessionTimeout()\" is invoked after the method \"void setSessionTimeout(int sessionTimeout)\".\n- When the methods \"void setSessionTrackingModes(Set sessionTrackingModes)\" and \"Set getEffectiveSessionTrackingModes()\" are invoked upon the same object, the return value of \"Set getEffectiveSessionTrackingModes()\" may be aliased with the parameter of \"void setSessionTrackingModes(Set sessionTrackingModes)\" if the method \"Set getEffectiveSessionTrackingModes()\" is invoked after the method \"void setSessionTrackingModes(Set sessionTrackingModes)\".",
    "javax.swing.JEditorPane": "(<class 'openai.error.InvalidRequestError'>, InvalidRequestError(message=\"This model's maximum context length is 4097 tokens. However, your messages resulted in 10510 tokens. Please reduce the length of the messages.\", param='messages', code='context_length_exceeded', http_status=400, request_id=None), <traceback object at 0x118b43340>)",
    "javax.swing.text.JTextComponent": "(<class 'openai.error.InvalidRequestError'>, InvalidRequestError(message=\"This model's maximum context length is 4097 tokens. However, your messages resulted in 9979 tokens. Please reduce the length of the messages.\", param='messages', code='context_length_exceeded', http_status=400, request_id=None), <traceback object at 0x1184dadc0>)",
    "javax.swing.JComponent": "(<class 'openai.error.InvalidRequestError'>, InvalidRequestError(message=\"This model's maximum context length is 4097 tokens. However, your messages resulted in 8232 tokens. Please reduce the length of the messages.\", param='messages', code='context_length_exceeded', http_status=400, request_id=None), <traceback object at 0x105172800>)",
    "java.awt.Container": "(<class 'openai.error.InvalidRequestError'>, InvalidRequestError(message=\"This model's maximum context length is 4097 tokens. However, your messages resulted in 6125 tokens. Please reduce the length of the messages.\", param='messages', code='context_length_exceeded', http_status=400, request_id=None), <traceback object at 0x118b56b00>)",
    "java.awt.Component": "(<class 'openai.error.InvalidRequestError'>, InvalidRequestError(message=\"This model's maximum context length is 4097 tokens. However, your messages resulted in 5208 tokens. Please reduce the length of the messages.\", param='messages', code='context_length_exceeded', http_status=400, request_id=None), <traceback object at 0x118b55e80>)",
    "javax.servlet.http.HttpSession": "The aliasing specifications for the given Java class HttpSession are as follows:\n\n- The return value of \"Object getAttribute(String name)\" may be aliased with the second parameter of \"void setAttribute(String name, Object value)\" if the method getAttribute is invoked after the method setAttribute.\n- There are no other aliasing specifications for this class.",
    "javax.swing.JTextPane": "(<class 'openai.error.InvalidRequestError'>, InvalidRequestError(message=\"This model's maximum context length is 4097 tokens. However, your messages resulted in 10865 tokens. Please reduce the length of the messages.\", param='messages', code='context_length_exceeded', http_status=400, request_id=None), <traceback object at 0x118b57d00>)",
    "javolution.util.FastMap": "When we invoke the method clear after method putAll upon the same object, the return value of the method clear may be aliased with the k-th parameter of the method putAll if the method clear is invoked after the method putAll.\n\nWhen we invoke the method entrySet after method putAll upon the same object, the return value of the method entrySet is aliased with the k-th parameter of the method putAll if the method entrySet is invoked after the method putAll.\n\nWhen we invoke the method get after method putAll upon the same object, the return value of the method get may be aliased with the k-th parameter of the method putAll if the method get is invoked after the method putAll.\n\nWhen we invoke the method keySet after method putAll upon the same object, the return value of the method keySet is aliased with the k-th parameter of the method putAll if the method keySet is invoked after the method putAll.\n\nWhen we invoke the method putAll after method putAll upon the same object, the return value of the method putAll may be aliased with the k-th parameter of the method putAll if the method putAll is invoked after the method putAll.\n\nWhen we invoke the method remove after method putAll upon the same object, the return value of the method remove may be aliased with the k-th parameter of the method putAll if the method remove is invoked after the method putAll.\n\nWhen we invoke the method replace after method putAll upon the same object, the return value of the method replace may be aliased with the k-th parameter of the method putAll if the method replace is invoked after the method putAll.\n\nWhen we invoke the method values after method putAll upon the same object, the return value of the method values is aliased with the k-th parameter of the method putAll if the method values is invoked after the method putAll.",
    "net.minecraft.inventory.AnimalChest": "When the two methods have the same value of the first parameters, the return value of \"ItemStack getStackInSlot(int index)\" may be aliased with the second parameter of \"ItemStack addItem(ItemStack stack)\" if the method getStackInSlot is invoked after the method addItem.\n\nThe return value of \"ItemStack removeStackFromSlot(int index)\" may be aliased with the second parameter of \"ItemStack addItem(ItemStack stack)\" if the method removeStackFromSlot is invoked after the method addItem.\n\nThe return value of \"ItemStack decrStackSize(int index, int count)\" may be aliased with the second parameter of \"ItemStack addItem(ItemStack stack)\" if the method decrStackSize is invoked after the method addItem.\n\nThe return value of \"ItemStack removeStackFromSlot(int index)\" may be aliased with the second parameter of \"void setInventorySlotContents(int index, ItemStack stack)\" if the method removeStackFromSlot is invoked after the method setInventorySlotContents.\n\nThe return value of \"ItemStack decrStackSize(int index, int count)\" may be aliased with the second parameter of \"void setInventorySlotContents(int index, ItemStack stack)\" if the method decrStackSize is invoked after the method setInventorySlotContents.",
    "net.minecraft.inventory.InventoryBasic": "When the method \"void closeInventory(EntityPlayer player)\" is invoked after the method \"void openInventory(EntityPlayer player)\", the return value of \"ITextComponent getDisplayName()\" may be aliased with the first parameter of \"void closeInventory(EntityPlayer player)\".\n\nWhen the method \"ItemStack removeStackFromSlot(int index)\" is invoked after the method \"void addInventoryChangeListener(IInventoryChangedListener listener)\", the return value of \"ItemStack removeStackFromSlot(int index)\" may be aliased with the first parameter of \"void addInventoryChangeListener(IInventoryChangedListener listener)\".\n\nWhen the method \"ItemStack removeStackFromSlot(int index)\" is invoked after the method \"void removeInventoryChangeListener(IInventoryChangedListener listener)\", the return value of \"ItemStack removeStackFromSlot(int index)\" may be aliased with the first parameter of \"void removeInventoryChangeListener(IInventoryChangedListener listener)\".\n\nWhen the method \"ItemStack decrStackSize(int index, int count)\" is invoked after the method \"ItemStack addItem(ItemStack stack)\", the return value of \"ItemStack decrStackSize(int index, int count)\" may be aliased with the second parameter of \"ItemStack addItem(ItemStack stack)\".\n\nWhen the method \"void setInventorySlotContents(int index, ItemStack stack)\" is invoked after the method \"ItemStack getStackInSlot(int index)\", the return value of \"ItemStack getStackInSlot(int index)\" may be aliased with the second parameter of \"void setInventorySlotContents(int index, ItemStack stack)\".",
    "net.minecraft.nbt.NBTTagCompound": "When the method \"void merge(NBTTagCompound other)\" is invoked after the method \"NBTTagCompound getCompoundTag(java.lang.String key)\", the return value of \"NBTTagCompound getCompoundTag(java.lang.String key)\" may be aliased with the parameter of \"void merge(NBTTagCompound other)\".\nWhen the method \"void removeTag(java.lang.String key)\" is invoked after the method \"NBTBase getTag(java.lang.String key)\", the return value of \"NBTBase getTag(java.lang.String key)\" may be aliased with the parameter of \"void removeTag(java.lang.String key)\".\nWhen the method \"void setTag(java.lang.String key, NBTBase value)\" is invoked after the method \"NBTBase getTag(java.lang.String key)\", the return value of \"NBTBase getTag(java.lang.String key)\" may be aliased with the second parameter of \"void setTag(java.lang.String key, NBTBase value)\".",
    "net.minecraft.nbt.NBTBase": "No aliasing specification can be derived from the given methods as none of them have parameters or return values that could be aliased with each other.",
    "net.sf.json.JSONObject": "When the method \"_processValue(Object value, JsonConfig jsonConfig)\" is invoked after the method \"JSONObject accumulate(String key, Object value, JsonConfig jsonConfig)\", the return value of \"_processValue\" may be aliased with the third parameter of \"accumulate(String key, Object value, JsonConfig jsonConfig)\".\n\nWhen the method \"JSONObject accumulate(String key, boolean value)\" is invoked after the method \"boolean addInstance(Object instance)\", the return value of \"accumulate(String key, boolean value)\" may be aliased with the parameter of \"addInstance(Object instance)\".\n\nWhen the method \"JSONObject accumulate(String key, double value)\" is invoked after the method \"void clear()\", the return value of \"accumulate(String key, double value)\" may be aliased with any parameter of \"void accumulateAll(Map map)\".\n\nWhen the method \"JSONObject accumulate(String key, int value)\" is invoked after the method \"void clear()\", the return value of \"accumulate(String key, int value)\" may be aliased with any parameter of \"void accumulateAll(Map map)\".\n\nWhen the method \"JSONObject accumulate(String key, long value)\" is invoked after the method \"void clear()\", the return value of \"accumulate(String key, long value)\" may be aliased with any parameter of \"void accumulateAll(Map map)\".\n\nWhen the method \"JSONObject accumulate(String key, Object value)\" is invoked after the method \"void clear()\", the return value of \"accumulate(String key, Object value)\" may be aliased with any parameter of \"void accumulateAll(Map map)\".\n\nWhen the method \"JSONObject accumulate(String key, Object value, JsonConfig jsonConfig)\" is invoked after the method \"void clear()\", the return value of \"accumulate(String key, Object value, JsonConfig jsonConfig)\" may be aliased with any parameter of \"void accumulateAll(Map map, JsonConfig jsonConfig)\".\n\nWhen the method \"void accumulateAll(Map map)\" is invoked after any of the methods \"JSONObject accumulate(String key, boolean value)\", \"JSONObject accumulate(String key, double value)\", \"JSONObject accumulate(String key, int value)\", \"JSONObject accumulate(String key, long value)\", \"JSONObject accumulate(String key, Object value)\", \"JSONObject accumulate(String key, Object value, JsonConfig jsonConfig)\", the parameter of \"accumulateAll(Map map)\" may be aliased with any of the parameters of the previous method.\n\nWhen the method \"void accumulateAll(Map map, JsonConfig jsonConfig)\" is invoked after any of the methods \"JSONObject accumulate(String key, boolean value)\", \"JSONObject accumulate(String key, double value)\", \"JSONObject accumulate(String key, int value)\", \"JSONObject accumulate(String key, long value)\", \"JSONObject accumulate(String key, Object value)\", \"JSONObject accumulate(String key, Object value, JsonConfig jsonConfig)\", the parameter of \"accumulateAll(Map map, JsonConfig jsonConfig)\" may be aliased with any of the parameters of the previous method.\n\nWhen the method \"boolean addInstance(Object instance)\" is invoked after any of the methods \"JSONObject accumulate(String key, boolean value)\", \"JSONObject accumulate(String key, double value)\", \"JSONObject accumulate(String key, int value)\", \"JSONObject accumulate(String key, long value)\", \"JSONObject accumulate(String key, Object value)\", \"JSONObject accumulate(String key, Object value, JsonConfig jsonConfig)\", the parameter of \"addInstance(Object instance)\" may be aliased with the return value of the previous method.\n\nWhen the method \"JSONObject discard(String key)\" is invoked after any of the methods \"JSONObject accumulate(String key, boolean value)\", \"JSONObject accumulate(String key, double value)\", \"JSONObject accumulate(String key, int value)\", \"JSONObject accumulate(String key, long value)\", \"JSONObject accumulate(String key, Object value)\", \"JSONObject accumulate(String key, Object value, JsonConfig jsonConfig)\", the return value of \"discard(String key)\" may be aliased with any parameter of the previous method.\n\nWhen the method \"JSONObject element(String key, boolean value)\" is invoked after the method \"boolean addInstance(Object instance)\", the return value of \"element(String key, boolean value)\" may be aliased with the parameter of \"addInstance(Object instance)\".\n\nWhen the method \"JSONObject element(String key, Collection value)\" is invoked after any of the methods \"JSONObject accumulate(String key, boolean value)\", \"JSONObject accumulate(String key, double value)\", \"JSONObject accumulate(String key, int value)\", \"JSONObject accumulate(String key, long value)\", \"JSONObject accumulate(String key, Object value)\", \"JSONObject accumulate(String key, Object value, JsonConfig jsonConfig)\", the return value of \"element(String key, Collection value)\" may be aliased with any parameter of the previous method.\n\nWhen the method \"JSONObject element(String key, Collection value, JsonConfig jsonConfig)\" is invoked after any of the methods \"JSONObject accumulate(String key, boolean value)\", \"JSONObject accumulate(String key, double value)\", \"JSONObject accumulate(String key, int value)\", \"JSONObject accumulate(String key, long value)\", \"JSONObject accumulate(String key, Object value)\", \"JSONObject accumulate(String key, Object value, JsonConfig jsonConfig)\", the return value of \"element(String key, Collection value, JsonConfig jsonConfig)\" may be aliased with any parameter of the previous method.\n\nWhen the method \"JSONObject element(String key, double value)\" is invoked after any of the methods \"JSONObject accumulate(String key, boolean value)\", \"JSONObject accumulate(String key, double value)\", \"JSONObject accumulate(String key, int value)\", \"JSONObject accumulate(String key, long value)\", \"JSONObject accumulate(String key, Object value)\", \"JSONObject accumulate(String key, Object value, JsonConfig jsonConfig)\", the return value of \"element(String key, double value)\" may be aliased with any parameter of the previous method.\n\nWhen the method \"JSONObject element(String key, int value)\" is invoked after any of the methods \"JSONObject accumulate(String key, boolean value)\", \"JSONObject accumulate(String key, double value)\", \"JSONObject accumulate(String key, int value)\", \"JSONObject accumulate(String key, long value)\", \"JSONObject accumulate(String key, Object value)\", \"JSONObject accumulate(String key, Object value, JsonConfig jsonConfig)\", the return value of \"element(String key, int value)\" may be aliased with any parameter of the previous method.\n\nWhen the method \"JSONObject element(String key, long value)\" is invoked after any of the methods \"JSONObject accumulate(String key, boolean value)\", \"JSONObject accumulate(String key, double value)\", \"JSONObject accumulate(String key, int value)\", \"JSONObject accumulate(String key, long value)\", \"JSONObject accumulate(String key, Object value)\", \"JSONObject accumulate(String key, Object value, JsonConfig jsonConfig)\", the return value of \"element(String key, long value)\" may be aliased with any parameter of the previous method.\n\nWhen the method \"JSONObject element(String key, Map value)\" is invoked after any of the methods \"JSONObject accumulate(String key, boolean value)\", \"JSONObject accumulate(String key, double value)\", \"JSONObject accumulate(String key, int value)\", \"JSONObject accumulate(String key, long value)\", \"JSONObject accumulate(String key, Object value)\", \"JSONObject accumulate(String key, Object value, JsonConfig jsonConfig)\", the return value of \"element(String key, Map value)\" may be aliased with any parameter of the previous method.\n\nWhen the method \"JSONObject element(String key, Map value, JsonConfig jsonConfig)\" is invoked after any of the methods \"JSONObject accumulate(String key, boolean value)\", \"JSONObject accumulate(String key, double value)\", \"JSONObject accumulate(String key, int value)\", \"JSONObject accumulate(String key, long value)\", \"JSONObject accumulate(String key, Object value)\", \"JSONObject accumulate(String key, Object value, JsonConfig jsonConfig)\", the return value of \"element(String key, Map value, JsonConfig jsonConfig)\" may be aliased with any parameter of the previous method.\n\nWhen the method \"JSONObject element(String key, Object value)\" is invoked after any of the methods \"JSONObject accumulate(String key, boolean value)\", \"JSONObject accumulate(String key, double value)\", \"JSONObject accumulate(String key, int value)\", \"JSONObject accumulate(String key, long value)\", \"JSONObject accumulate(String key, Object value)\", \"JSONObject accumulate(String key, Object value, JsonConfig jsonConfig)\", the return value of \"element(String key,",
    "okhttp3.ResponseBody": "When the method \"byte[] bytes()\" is invoked after the method \"InputStream byteStream()\", the return value of \"byte[] bytes()\" may be aliased with the first parameter of \"ResponseBody create(MediaType contentType, byte[] content)\".\n\nWhen the method \"InputStream byteStream()\" is invoked after the method \"byte[] bytes()\", the return value of \"InputStream byteStream()\" may be aliased with the second parameter of \"ResponseBody create(MediaType contentType, long contentLength, okio.BufferedSource content)\".\n\nWhen the method \"Reader charStream()\" is invoked after the method \"byte[] bytes()\", the return value of \"Reader charStream()\" may be aliased with the second parameter of \"ResponseBody create(MediaType contentType, long contentLength, okio.BufferedSource content)\".\n\nWhen the method \"Reader charStream()\" is invoked after the method \"InputStream byteStream()\", the return value of \"Reader charStream()\" may be aliased with the third parameter of \"ResponseBody create(MediaType contentType, long contentLength, okio.BufferedSource content)\".\n\nWhen the method \"String string()\" is invoked after the method \"InputStream byteStream()\", the return value of \"String string()\" may be aliased with the first parameter of \"ResponseBody create(MediaType contentType, String content)\".\n\nWhen the method \"String string()\" is invoked after the method \"byte[] bytes()\", the return value of \"String string()\" may be aliased with the first parameter of \"ResponseBody create(MediaType contentType, String content)\".\n\nWhen the method \"String string()\" is invoked after the method \"Reader charStream()\", the return value of \"String string()\" may be aliased with the first parameter of \"ResponseBody create(MediaType contentType, String content)\".",
    "org.antlr.runtime.tree.TreeAdaptor": "When the two methods have the same value of the first parameter, the return value of \"Object becomeRoot(Object newRoot, Object oldRoot)\" may be aliased with the first parameter of \"void addChild(Object t, Object child)\" if the method becomeRoot is invoked after the method addChild.\n\nThe return value of \"Object becomeRoot(Token newRoot, Object oldRoot)\" may be aliased with the first parameter of \"void addChild(Object t, Object child)\" if the method becomeRoot is invoked after the method addChild.\n\nThe return value of \"Object create(int tokenType, String text)\" may be aliased with the second parameter of \"void addChild(Object t, Object child)\" if the method create is invoked after the method addChild.\n\nThe return value of \"Object create(int tokenType, Token fromToken)\" may be aliased with the second parameter of \"void addChild(Object t, Object child)\" if the method create is invoked after the method addChild.\n\nThe return value of \"Object create(int tokenType, Token fromToken, String text)\" may be aliased with the second parameter of \"void addChild(Object t, Object child)\" if the method create is invoked after the method addChild.\n\nThe return value of \"Object create(Token payload)\" may be aliased with the second parameter of \"void addChild(Object t, Object child)\" if the method create is invoked after the method addChild.\n\nThe return value of \"Object dupNode(Object treeNode)\" may be aliased with the second parameter of \"void addChild(Object t, Object child)\" if the method dupNode is invoked after the method addChild.\n\nThe return value of \"Object dupTree(Object tree)\" may be aliased with the second parameter of \"void addChild(Object t, Object child)\" if the method dupTree is invoked after the method addChild.\n\nThe return value of \"Object errorNode(TokenStream input, Token start, Token stop, RecognitionException e)\" may be aliased with the second parameter of \"void addChild(Object t, Object child)\" if the method errorNode is invoked after the method addChild.\n\nThe return value of \"Object getChild(Object t, int i)\" may be aliased with the second parameter of \"void addChild(Object t, Object child)\" if the method getChild is invoked after the method addChild.\n\nThe return value of \"Object deleteChild(Object t, int i)\" may be aliased with the second parameter of \"void addChild(Object t, Object child)\" if the method deleteChild is invoked after the method addChild.\n\nThe return value of \"Object nil()\" may be aliased with the second parameter of \"void addChild(Object t, Object child)\" if the method nil is invoked after the method addChild.\n\nThe return value of \"Object rulePostProcessing(Object root)\" may be aliased with the second parameter of \"void addChild(Object t, Object child)\" if the method rulePostProcessing is invoked after the method addChild.\n\nThe return value of \"Object getChild(Object t, int i)\" may be aliased with the second parameter of \"void setChild(Object t, int i, Object child)\" if the method getChild is invoked after the method setChild.\n\nThe return value of \"String getText(Object t)\" may be aliased with the second parameter of \"void setText(Object t, String text)\" if the method getText is invoked after the method setText.\n\nThe return value of \"Token getToken(Object t)\" may be aliased with the second parameter of \"void setTokenBoundaries(Object t, Token startToken, Token stopToken)\" if the method getToken is invoked after the method setTokenBoundaries.\n\nThe return value of \"int getTokenStartIndex(Object t)\" may be aliased with the second parameter of \"void setTokenBoundaries(Object t, Token startToken, Token stopToken)\" if the method getTokenStartIndex is invoked after the method setTokenBoundaries.\n\nThe return value of \"int getTokenStopIndex(Object t)\" may be aliased with the second parameter of \"void setTokenBoundaries(Object t, Token startToken, Token stopToken)\" if the method getTokenStopIndex is invoked after the method setTokenBoundaries.\n\nThe return value of \"int getType(Object t)\" may be aliased with the second parameter of \"void setType(Object t, int type)\" if the method getType is invoked after the method setType.\n\nThe return value of \"int getUniqueID(Object node)\" may be aliased with the second parameter of \"void setType(Object t, int type)\" if the method getUniqueID is invoked after the method setType.\n\nThe return value of \"boolean isNil(Object tree)\" may be aliased with the second parameter of \"void setType(Object t, int type)\" if the method isNil is invoked after the method setType.\n\nThe return value of \"int getChildCount(Object t)\" may be aliased with the second parameter of \"void replaceChildren(Object parent, int startChildIndex, int stopChildIndex, Object t)\" if the method getChildCount is invoked after the method replaceChildren.\n\nThe return value of \"Object getParent(Object t)\" may be aliased with the second parameter of \"void replaceChildren(Object parent, int startChildIndex, int stopChildIndex, Object t)\" if the method getParent is invoked after the method replaceChildren.",
    "org.apache.hadoop.conf.Configuration": "When we invoke the method get after the method addResource(String name) upon the same object, the return value of the method get is aliased with the first parameter of addResource(Configuration conf) if the i_m-th parameter of addResource is aliased with the j_m-th parameter of get for each 1 <= m <= n.\n\nWhen we invoke the method get after the method addResource(InputStream in) upon the same object, the return value of the method get is aliased with the first parameter of addResource(InputStream in, String name) if the i_m-th parameter of addResource is aliased with the j_m-th parameter of get for each 1 <= m <= n.\n\nWhen we invoke the method get after the method addResource(Path file) upon the same object, the return value of the method get is aliased with the first parameter of addResource(Configuration conf) if the i_m-th parameter of addResource is aliased with the j_m-th parameter of get for each 1 <= m <= n.\n\nWhen we invoke the method get after the method addResource(URL url) upon the same object, the return value of the method get is aliased with the first parameter of addResource(Configuration conf) if the i_m-th parameter of addResource is aliased with the j_m-th parameter of get for each 1 <= m <= n.\n\nWhen we invoke the method set after the method setAllowNullValueProperties(boolean val) upon the same object, the return value of the method set is aliased with the first parameter of set(String name, String value) if the i_m-th parameter of set is aliased with the j_m-th parameter of setAllowNullValueProperties for each 1 <= m <= n.\n\nWhen we invoke the method set after the method setBooleanIfUnset(String name, boolean value) upon the same object, the return value of the method set is aliased with the first parameter of set(String name, String value) if the i_m-th parameter of set is aliased with the j_m-th parameter of setBooleanIfUnset for each 1 <= m <= n.\n\nWhen we invoke the method set after the method setClass(String name, Class theClass, Class xface) upon the same object, the return value of the method set is aliased with the first parameter of set(String name, String value) if the i_m-th parameter of set is aliased with the j_m-th parameter of setClass for each 1 <= m <= n.\n\nWhen we invoke the method set after the method setEnum(String name, T value) upon the same object, the return value of the method set is aliased with the first parameter of set(String name, String value) if the i_m-th parameter of set is aliased with the j_m-th parameter of setEnum for each 1 <= m <= n.\n\nWhen we invoke the method set after the method setFloat(String name, float value) upon the same object, the return value of the method set is aliased with the first parameter of set(String name, String value) if the i_m-th parameter of set is aliased with the j_m-th parameter of setFloat for each 1 <= m <= n.\n\nWhen we invoke the method set after the method setIfUnset(String name, String value) upon the same object, the return value of the method set is aliased with the first parameter of set(String name, String value) if the i_m-th parameter of set is aliased with the j_m-th parameter of setIfUnset for each 1 <= m <= n.\n\nWhen we invoke the method set after the method setInt(String name, int value) upon the same object, the return value of the method set is aliased with the first parameter of set(String name, String value) if the i_m-th parameter of set is aliased with the j_m-th parameter of setInt for each 1 <= m <= n.\n\nWhen we invoke the method set after the method setLong(String name, long value) upon the same object, the return value of the method set is aliased with the first parameter of set(String name, String value) if the i_m-th parameter of set is aliased with the j_m-th parameter of setLong for each 1 <= m <= n.\n\nWhen we invoke the method set after the method setPattern(String name, Pattern pattern) upon the same object, the return value of the method set is aliased with the first parameter of set(String name, String value) if the i_m-th parameter of set is aliased with the j_m-th parameter of setPattern for each 1 <= m <= n.\n\nWhen we invoke the method setSocketAddr after the method updateConnectAddr(String hostProperty, String addressProperty, String defaultAddressValue, InetSocketAddress addr) upon the same object, the return value of the method setSocketAddr is aliased with the first parameter of updateConnectAddr(String hostProperty, String addressProperty, String defaultAddressValue, InetSocketAddress addr) if the i_m-th parameter of setSocketAddr is aliased with the j_m-th parameter of updateConnectAddr for each 1 <= m <= n.\n\nWhen we invoke the method setStrings after the method setStrings(String name, String... values) upon the same object, the return value of the method setStrings is aliased with the first parameter of setStrings(String name, String... values) if the i_m-th parameter of setStrings is aliased with the j_m-th parameter of setStrings for each 1 <= m <= n.",
    "org.apache.hadoop.conf.Configured": "The aliasing specification for the given Java class \"Configured\" is:\n\nThe return value of \"Configuration getConf()\" may be aliased with the first parameter of \"void setConf(Configuration conf)\" if the method getConf is invoked after the method setConf.",
    "org.apache.hadoop.fs.FileSystem": "(<class 'openai.error.InvalidRequestError'>, InvalidRequestError(message=\"This model's maximum context length is 4097 tokens. However, your messages resulted in 4700 tokens. Please reduce the length of the messages.\", param='messages', code='context_length_exceeded', http_status=400, request_id=None), <traceback object at 0x118b57dc0>)",
    "org.apache.http.client.methods.HttpDelete": "When the two methods have the same value of the first parameter, the return value of \"Header getFirstHeader(String name)\" may be aliased with the first parameter of \"void addHeader(String name, String value)\" if the method getFirstHeader is invoked after the method addHeader.\n\nWhen the two methods have the same value of the first parameter, the return value of \"Header[] getHeaders(String name)\" may be aliased with the first parameter of \"void addHeader(String name, String value)\" if the method getHeaders is invoked after the method addHeader.\n\nWhen the two methods have the same value of the first parameter, the return value of \"Header getLastHeader(String name)\" may be aliased with the first parameter of \"void addHeader(String name, String value)\" if the method getLastHeader is invoked after the method addHeader.\n\nWhen the two methods have the same value of the first parameter, the return value of \"HeaderIterator headerIterator(String name)\" may be aliased with the first parameter of \"void addHeader(String name, String value)\" if the method headerIterator is invoked after the method addHeader.\n\nWhen the two methods have the same value of the first parameter, the return value of \"void removeHeaders(String name)\" may be aliased with the first parameter of \"void addHeader(String name, String value)\" if the method removeHeaders is invoked after the method addHeader.\n\nWhen the two methods have the same value of the first parameter, the return value of \"void setHeader(String name, String value)\" may be aliased with the first parameter of \"void addHeader(String name, String value)\" if the method setHeader is invoked after the method addHeader.\n\nWhen the two methods have the same value of the first parameter, the return value of \"void setHeaders(Header[] headers)\" may be aliased with the first parameter of \"void addHeader(String name, String value)\" if the method setHeaders is invoked after the method addHeader.",
    "org.apache.http.client.methods.AbstractExecutionAwareRequest": "The aliasing specifications for the given Java class are:\n\n1. When the method \"void abort()\" is invoked before the method \"boolean isAborted()\" on the same object, the return value of \"boolean isAborted()\" may be aliased with the return value of \"void abort()\".\n\n2. When the method \"Object clone()\" is invoked after the method \"void reset()\" on the same object, the return value of \"Object clone()\" may be aliased with the return value of \"void reset()\".\n\n3. When the method \"void completed()\" is invoked before the method \"void setCancellable(Cancellable cancellable)\" on the same object, the parameter \"cancellable\" of \"void setCancellable(Cancellable cancellable)\" may be aliased with the return value of \"void completed()\".\n\n4. When the method \"void reset()\" is invoked before the method \"void setCancellable(Cancellable cancellable)\" on the same object, the parameter \"cancellable\" of \"void setCancellable(Cancellable cancellable)\" may be aliased with the return value of \"void reset()\".\n\n5. When the method \"void addHeader(Header header)\" is invoked after the method \"HeaderIterator headerIterator()\" on the same object, each element of the returned iterator of \"HeaderIterator headerIterator()\" may be aliased with the parameter \"header\" of \"void addHeader(Header header)\".\n\n6. When the method \"void addHeader(String name, String value)\" is invoked after the method \"HeaderIterator headerIterator()\" on the same object, each element of the returned iterator of \"HeaderIterator headerIterator()\" may be aliased with the parameter \"name\" of \"void addHeader(String name, String value)\".\n\n7. When the method \"boolean containsHeader(String name)\" is invoked after the method \"HeaderIterator headerIterator()\" on the same object, each element of the returned iterator of \"HeaderIterator headerIterator()\" may be aliased with the parameter \"name\" of \"boolean containsHeader(String name)\".\n\n8. When the method \"Header[] getAllHeaders()\" is invoked after the methods \"void addHeader(Header header)\" or \"void addHeader(String name, String value)\" on the same object, each element of the returned array of \"Header[] getAllHeaders()\" may be aliased with the parameter \"header\" or \"name\" of \"void addHeader(Header header)\" or \"void addHeader(String name, String value)\".\n\n9. When the method \"Header getFirstHeader(String name)\" is invoked after the method \"HeaderIterator headerIterator(String name)\" on the same object, the return value of \"Header getFirstHeader(String name)\" may be aliased with the first element of the returned iterator of \"HeaderIterator headerIterator(String name)\".\n\n10. When the method \"Header[] getHeaders(String name)\" is invoked after the method \"HeaderIterator headerIterator(String name)\" on the same object, each element of the returned array of \"Header[] getHeaders(String name)\" may be aliased with each element of the returned iterator of \"HeaderIterator headerIterator(String name)\".\n\n11. When the method \"Header getLastHeader(String name)\" is invoked after the method \"HeaderIterator headerIterator(String name)\" on the same object, the return value of \"Header getLastHeader(String name)\" may be aliased with the last element of the returned iterator of \"HeaderIterator headerIterator(String name)\".\n\n12. When the method \"HeaderIterator headerIterator()\" is invoked after the methods \"void addHeader(Header header)\" or \"void addHeader(String name, String value)\" on the same object, each element of the returned iterator of \"HeaderIterator headerIterator()\" may be aliased with the parameter \"header\" or \"name\" of \"void addHeader(Header header)\" or \"void addHeader(String name, String value)\".\n\n13. When the method \"void removeHeader(Header header)\" is invoked after the method \"HeaderIterator headerIterator()\" on the same object, each element of the returned iterator of \"HeaderIterator headerIterator()\" may be aliased with the parameter \"header\" of \"void removeHeader(Header header)\".\n\n14. When the method \"void removeHeaders(String name)\" is invoked after the method \"HeaderIterator headerIterator(String name)\" on the same object, each element of the returned iterator of \"HeaderIterator headerIterator(String name)\" may be aliased with the parameter \"name\" of \"void removeHeaders(String name)\".\n\n15. When the method \"void setHeader(Header header)\" is invoked after the method \"HeaderIterator headerIterator(String name)\" on the same object, each element of the returned iterator of \"HeaderIterator headerIterator(String name)\" may be aliased with the parameter \"header\" of \"void setHeader(Header header)\".\n\n16. When the method \"void setHeader(String name, String value)\" is invoked after the method \"HeaderIterator headerIterator(String name)\" on the same object, each element of the returned iterator of \"HeaderIterator headerIterator(String name)\" may be aliased with the parameter \"name\" of \"void setHeader(String name, String value)\".\n\n17. When the method \"void setHeaders(Header[] headers)\" is invoked after the method \"HeaderIterator headerIterator()\" on the same object, each element of the returned iterator of \"HeaderIterator headerIterator()\" may be aliased with each element of the parameter \"headers\" of \"void setHeaders(Header[] headers)\".",
    "org.apache.http.message.AbstractHttpMessage": "When the method \"Header[] getAllHeaders()\" is invoked after the method \"void addHeader(Header header)\", the return value of \"Header[] getAllHeaders()\" may be aliased with the parameter of \"void removeHeader(Header header)\".\n\nWhen the method \"Header[] getAllHeaders()\" is invoked after the method \"void setHeader(Header header)\", the return value of \"Header[] getAllHeaders()\" may be aliased with the parameter of \"void removeHeader(Header header)\".\n\nWhen the method \"Header[] getAllHeaders()\" is invoked after the method \"void setHeaders(Header[] headers)\", the return value of \"Header[] getAllHeaders()\" may be aliased with the parameter of \"void removeHeaders(String name)\".\n\nWhen the method \"Header[] getAllHeaders()\" is invoked after the method \"void addHeader(String name, String value)\", the return value of \"Header[] getAllHeaders()\" may be aliased with the parameter of \"void removeHeaders(String name)\".\n\nWhen the method \"HeaderIterator headerIterator()\" is invoked after the method \"void addHeader(Header header)\", the return value of \"HeaderIterator headerIterator()\" may be aliased with the parameter of \"void removeHeader(Header header)\".\n\nWhen the method \"HeaderIterator headerIterator()\" is invoked after the method \"void setHeader(Header header)\", the return value of \"HeaderIterator headerIterator()\" may be aliased with the parameter of \"void removeHeader(Header header)\".\n\nWhen the method \"HeaderIterator headerIterator()\" is invoked after the method \"void setHeaders(Header[] headers)\", the return value of \"HeaderIterator headerIterator()\" may be aliased with the parameter of \"void removeHeaders(String name)\".\n\nWhen the method \"HeaderIterator headerIterator()\" is invoked after the method \"void addHeader(String name, String value)\", the return value of \"HeaderIterator headerIterator()\" may be aliased with the parameter of \"void removeHeaders(String name)\".\n\nWhen the method \"HeaderIterator headerIterator(String name)\" is invoked after the method \"void addHeader(Header header)\", the return value of \"HeaderIterator headerIterator(String name)\" may be aliased with the parameter of \"void removeHeader(Header header)\".\n\nWhen the method \"HeaderIterator headerIterator(String name)\" is invoked after the method \"void setHeader(Header header)\", the return value of \"HeaderIterator headerIterator(String name)\" may be aliased with the parameter of \"void removeHeader(Header header)\".\n\nWhen the method \"HeaderIterator headerIterator(String name)\" is invoked after the method \"void setHeaders(Header[] headers)\", the return value of \"HeaderIterator headerIterator(String name)\" may be aliased with the parameter of \"void removeHeaders(String name)\".\n\nWhen the method \"HeaderIterator headerIterator(String name)\" is invoked after the method \"void addHeader(String name, String value)\", the return value of \"HeaderIterator headerIterator(String name)\" may be aliased with the parameter of \"void removeHeaders(String name)\".",
    "org.apache.http.client.methods.HttpEntityEnclosingRequestBase": "The aliasing specifications for the given Java class are:\n\n1. When the method getEntity is invoked after the method setEntity upon the same object, the return value of getEntity is aliased with the first parameter of setEntity.\n\n2. When the method getConfig is invoked after the method setConfig upon the same object, the return value of getConfig is aliased with the first parameter of setConfig.\n\n3. When the method getProtocolVersion is invoked after the method setProtocolVersion upon the same object, the return value of getProtocolVersion is aliased with the first parameter of setProtocolVersion.\n\n4. When the method getURI is invoked after the method setURI upon the same object, the return value of getURI is aliased with the first parameter of setURI.\n\n5. When the method addHeader is invoked after the method setHeader upon the same object with the same header name, the return value of setHeader is aliased with the first parameter of addHeader.\n\n6. When the method getAllHeaders is invoked after the method addHeader upon the same object, the return value of getAllHeaders may be aliased with the parameter of addHeader.\n\n7. When the method getFirstHeader is invoked after the method addHeader upon the same object with the same header name, the return value of getFirstHeader is aliased with the parameter of addHeader.\n\n8. When the method getHeaders is invoked after the method addHeader upon the same object with the same header name, the return value of getHeaders may be aliased with the parameter of addHeader.\n\n9. When the method getLastHeader is invoked after the method addHeader upon the same object with the same header name, the return value of getLastHeader is aliased with the parameter of addHeader.\n\n10. When the method headerIterator is invoked after the method addHeader upon the same object, the return value of headerIterator may be aliased with the parameter of addHeader.\n\n11. When the method headerIterator is invoked after the method addHeader upon the same object with the same header name, the return value of headerIterator may be aliased with the parameter of addHeader.\n\n12. When the method removeHeader is invoked after the method addHeader upon the same object with the same header name, the parameter of removeHeader is aliased with the parameter of addHeader.\n\n13. When the method removeHeaders is invoked after the method addHeader upon the same object with the same header name, the parameter of removeHeaders is aliased with the parameter of addHeader.\n\n14. When the method setHeaders is invoked after the method addHeader upon the same object, the parameter of setHeaders is aliased with the parameter of addHeader.",
    "org.apache.http.client.methods.HttpGet": "The aliasing specifications are as follows:\n\n- The return value of \"String getMethod()\" may be aliased with the first parameter of \"void setHeader(String name, String value)\" if the method getMethod is invoked after the method setHeader.\n- The return value of \"RequestConfig getConfig()\" may be aliased with the first parameter of \"void setConfig(RequestConfig config)\" if the method getConfig is invoked after the method setConfig.\n- The return value of \"ProtocolVersion getProtocolVersion()\" may be aliased with the first parameter of \"void setProtocolVersion(ProtocolVersion version)\" if the method getProtocolVersion is invoked after the method setProtocolVersion.\n- The return value of \"RequestLine getRequestLine()\" may be aliased with the k-th parameter of \"void setHeader(Header header)\" if the i_m-th parameter of setHeader is aliased with the j_m-th parameter of getRequestLine for each 1 <= m <= n and if the method getRequestLine is invoked after the method setHeader.\n- The return value of \"URI getURI()\" may be aliased with the first parameter of \"void setURI(URI uri)\" if the method getURI is invoked after the method setURI.\n- The return value of \"Header[] getAllHeaders()\" may be aliased with the k-th parameter of \"void setHeaders(Header[] headers)\" if the i_m-th parameter of setHeaders is aliased with the j_m-th parameter of getAllHeaders for each 1 <= m <= n and if the method getAllHeaders is invoked after the method setHeaders.\n- The return value of \"Header getFirstHeader(String name)\" may be aliased with the k-th parameter of \"void setHeader(Header header)\" if the i_m-th parameter of setHeader is aliased with the j_m-th parameter of getFirstHeader for each 1 <= m <= n and if the method getFirstHeader is invoked after the method setHeader.\n- The return value of \"Header[] getHeaders(String name)\" may be aliased with the k-th parameter of \"void setHeaders(Header[] headers)\" if the i_m-th parameter of setHeaders is aliased with the j_m-th parameter of getHeaders for each 1 <= m <= n and if the method getHeaders is invoked after the method setHeaders.\n- The return value of \"Header getLastHeader(String name)\" may be aliased with the k-th parameter of \"void setHeader(Header header)\" if the i_m-th parameter of setHeader is aliased with the j_m-th parameter of getLastHeader for each 1 <= m <= n and if the method getLastHeader is invoked after the method setHeader.",
    "org.apache.http.client.methods.HttpHead": "When the method \"RequestConfig getConfig()\" is invoked after the method \"void setConfig(RequestConfig config)\", the return value of \"RequestConfig getConfig()\" may be aliased with the parameter of \"void setConfig(RequestConfig config)\".\n\nWhen the method \"ProtocolVersion getProtocolVersion()\" is invoked after the method \"void setProtocolVersion(ProtocolVersion version)\", the return value of \"ProtocolVersion getProtocolVersion()\" may be aliased with the parameter of \"void setProtocolVersion(ProtocolVersion version)\".\n\nWhen the method \"URI getURI()\" is invoked after the method \"void setURI(URI uri)\", the return value of \"URI getURI()\" may be aliased with the parameter of \"void setURI(URI uri)\".\n\nWhen the method \"void addHeader(Header header)\" is invoked after the method \"Header[] getAllHeaders()\", the return value of \"Header[] getAllHeaders()\" may be aliased with the parameter of \"void addHeader(Header header)\".\n\nWhen the method \"void addHeader(String name, String value)\" is invoked after the method \"Header[] getAllHeaders()\", the return value of \"Header[] getAllHeaders()\" may be aliased with the parameter of \"void addHeader(String name, String value)\".\n\nWhen the method \"boolean containsHeader(String name)\" is invoked after the method \"Header[] getAllHeaders()\", the return value of \"Header[] getAllHeaders()\" may be aliased with the parameter of \"boolean containsHeader(String name)\".\n\nWhen the method \"Header getFirstHeader(String name)\" is invoked after the method \"Header[] getAllHeaders()\", the return value of \"Header[] getAllHeaders()\" may be aliased with the parameter of \"Header getFirstHeader(String name)\".\n\nWhen the method \"Header[] getHeaders(String name)\" is invoked after the method \"Header[] getAllHeaders()\", the return value of \"Header[] getAllHeaders()\" may be aliased with the parameter of \"Header[] getHeaders(String name)\".\n\nWhen the method \"Header getLastHeader(String name)\" is invoked after the method \"Header[] getAllHeaders()\", the return value of \"Header[] getAllHeaders()\" may be aliased with the parameter of \"Header getLastHeader(String name)\".\n\nWhen the method \"HeaderIterator headerIterator()\" is invoked after the method \"Header[] getAllHeaders()\", the return value of \"Header[] getAllHeaders()\" may be aliased with the parameter of \"HeaderIterator headerIterator()\".\n\nWhen the method \"HeaderIterator headerIterator(String name)\" is invoked after the method \"Header[] getAllHeaders()\", the return value of \"Header[] getAllHeaders()\" may be aliased with the parameter of \"HeaderIterator headerIterator(String name)\".\n\nWhen the method \"void removeHeader(Header header)\" is invoked after the method \"Header[] getAllHeaders()\", the return value of \"Header[] getAllHeaders()\" may be aliased with the parameter of \"void removeHeader(Header header)\".\n\nWhen the method \"void removeHeaders(String name)\" is invoked after the method \"Header[] getAllHeaders()\", the return value of \"Header[] getAllHeaders()\" may be aliased with the parameter of \"void removeHeaders(String name)\".\n\nWhen the method \"void setHeader(Header header)\" is invoked after the method \"Header[] getAllHeaders()\", the return value of \"Header[] getAllHeaders()\" may be aliased with the parameter of \"void setHeader(Header header)\".\n\nWhen the method \"void setHeader(String name, String value)\" is invoked after the method \"Header[] getAllHeaders()\", the return value of \"Header[] getAllHeaders()\" may be aliased with the parameter of \"void setHeader(String name, String value)\".\n\nWhen the method \"void setHeaders(Header[] headers)\" is invoked after the method \"Header[] getAllHeaders()\", the return value of \"Header[] getAllHeaders()\" may be aliased with the parameter of \"void setHeaders(Header[] headers)\".",
    "org.apache.http.client.methods.HttpOptions": "When the two methods have the same value of the first parameter, the return value of \"Set getAllowedMethods(HttpResponse response)\" may be aliased with the second parameter of \"void addHeader(String name, String value)\" if the method getAllowedMethods is invoked after the method addHeader.\n\nThe return value of \"String getMethod()\" may be aliased with the second parameter of \"void addHeader(String name, String value)\" if the method getMethod is invoked after the method addHeader.\n\nThe return value of \"RequestConfig getConfig()\" may be aliased with the first parameter of \"void setConfig(RequestConfig config)\" if the method getConfig is invoked after the method setConfig.\n\nThe return value of \"ProtocolVersion getProtocolVersion()\" may be aliased with the first parameter of \"void setProtocolVersion(ProtocolVersion version)\" if the method getProtocolVersion is invoked after the method setProtocolVersion.\n\nThe return value of \"URI getURI()\" may be aliased with the first parameter of \"void setURI(URI uri)\" if the method getURI is invoked after the method setURI.\n\nThe return value of \"Header[] getAllHeaders()\" may be aliased with the first parameter of \"void setHeaders(Header[] headers)\" if the method getAllHeaders is invoked after the method setHeaders.\n\nThe return value of \"Header[] getHeaders(String name)\" may be aliased with the second parameter of \"void addHeader(String name, String value)\" if the method getHeaders is invoked after the method addHeader.\n\nThe return value of \"Header getFirstHeader(String name)\" may be aliased with the second parameter of \"void addHeader(String name, String value)\" if the method getFirstHeader is invoked after the method addHeader.\n\nThe return value of \"Header getLastHeader(String name)\" may be aliased with the second parameter of \"void addHeader(String name, String value)\" if the method getLastHeader is invoked after the method addHeader.\n\nThe return value of \"HeaderIterator headerIterator()\" may be aliased with the second parameter of \"void addHeader(String name, String value)\" if the method headerIterator is invoked after the method addHeader.\n\nThe return value of \"HeaderIterator headerIterator(String name)\" may be aliased with the second parameter of \"void addHeader(String name, String value)\" if the method headerIterator is invoked after the method addHeader.\n\nThe return value of \"Header[] getAllHeaders()\" may be aliased with the first parameter of \"void removeHeaders(String name)\" if the method getAllHeaders is invoked after the method removeHeaders.\n\nThe return value of \"Header[] getHeaders(String name)\" may be aliased with the first parameter of \"void removeHeaders(String name)\" if the method getHeaders is invoked after the method removeHeaders.\n\nThe return value of \"Header getFirstHeader(String name)\" may be aliased with the first parameter of \"void removeHeaders(String name)\" if the method getFirstHeader is invoked after the method removeHeaders.\n\nThe return value of \"Header getLastHeader(String name)\" may be aliased with the first parameter of \"void removeHeaders(String name)\" if the method getLastHeader is invoked after the method removeHeaders.\n\nThe return value of \"HeaderIterator headerIterator()\" may be aliased with the first parameter of \"void removeHeaders(String name)\" if the method headerIterator is invoked after the method removeHeaders.\n\nThe return value of \"HeaderIterator headerIterator(String name)\" may be aliased with the first parameter of \"void removeHeaders(String name)\" if the method headerIterator is invoked after the method removeHeaders.\n\nThe return value of \"Header getFirstHeader(String name)\" may be aliased with the first parameter of \"void setHeader(Header header)\" if the method getFirstHeader is invoked after the method setHeader.\n\nThe return value of \"Header getFirstHeader(String name)\" may be aliased with the first parameter of \"void setHeader(String name, String value)\" if the method getFirstHeader is invoked after the method setHeader.\n\nThe return value of \"Header getLastHeader(String name)\" may be aliased with the first parameter of \"void setHeader(Header header)\" if the method getLastHeader is invoked after the method setHeader.\n\nThe return value of \"Header getLastHeader(String name)\" may be aliased with the first parameter of \"void setHeader(String name, String value)\" if the method getLastHeader is invoked after the method setHeader.\n\nThe return value of \"Header[] getHeaders(String name)\" may be aliased with the first parameter of \"void setHeader(Header header)\" if the method getHeaders is invoked after the method setHeader.\n\nThe return value of \"Header[] getHeaders(String name)\" may be aliased with the first parameter of \"void setHeader(String name, String value)\" if the method getHeaders is invoked after the method setHeader.",
    "org.apache.http.client.methods.HttpRequestBase": "The aliasing specifications for the given methods are:\n\n- The return value of \"RequestConfig getConfig()\" may be aliased with the first parameter of \"void setConfig(RequestConfig config)\" if the method getConfig is invoked after the method setConfig.\n- The return value of \"String getMethod()\" may be aliased with the second parameter of \"void addHeader(String name, String value)\" if the method getMethod is invoked after the method addHeader.\n- The return value of \"ProtocolVersion getProtocolVersion()\" may be aliased with the first parameter of \"void setProtocolVersion(ProtocolVersion version)\" if the method getProtocolVersion is invoked after the method setProtocolVersion.\n- The return value of \"RequestLine getRequestLine()\" may be aliased with the second parameter of \"void addHeader(String name, String value)\" if the method getRequestLine is invoked after the method addHeader.\n- The return value of \"URI getURI()\" may be aliased with the second parameter of \"void setURI(URI uri)\" if the method getURI is invoked after the method setURI.\n- No aliasing relation exists between \"void releaseConnection()\" and any other method.\n- No aliasing relation exists between \"void started()\" and any other method.\n- No aliasing relation exists between \"String toString()\" and any other method.\n- No aliasing relation exists between \"void abort()\" and any other method.\n- No aliasing relation exists between \"Object clone()\" and any other method.\n- No aliasing relation exists between \"void completed()\" and any other method.\n- No aliasing relation exists between \"boolean isAborted()\" and any other method.\n- No aliasing relation exists between \"void reset()\" and any other method.\n- The return value of \"void setCancellable(Cancellable cancellable)\" may be aliased with the first parameter of \"void addHeader(String name, String value)\" if the method setCancellable is invoked after the method addHeader.\n- The return value of \"void addHeader(Header header)\" may be aliased with the second parameter of \"void setHeader(Header header)\" if the method addHeader is invoked after the method setHeader.\n- The return value of \"boolean containsHeader(String name)\" may be aliased with the second parameter of \"void removeHeaders(String name)\" if the method containsHeader is invoked after the method removeHeaders.\n- The return value of \"Header[] getAllHeaders()\" may be aliased with the first parameter of \"void setHeaders(Header[] headers)\" if the method getAllHeaders is invoked after the method setHeaders.\n- The return value of \"Header getFirstHeader(String name)\" may be aliased with the second parameter of \"void setHeader(String name, String value)\" if the method getFirstHeader is invoked after the method setHeader.\n- The return value of \"Header[] getHeaders(String name)\" may be aliased with the first parameter of \"void setHeaders(Header[] headers)\" if the method getHeaders is invoked after the method setHeaders.\n- The return value of \"Header getLastHeader(String name)\" may be aliased with the second parameter of \"void setHeader(String name, String value)\" if the method getLastHeader is invoked after the method setHeader.\n- No aliasing relation exists between \"HeaderIterator headerIterator()\" and any other method.\n- The return value of \"HeaderIterator headerIterator(String name)\" may be aliased with the second parameter of \"void removeHeaders(String name)\" if the method headerIterator is invoked after the method removeHeaders.\n- The return value of \"void removeHeader(Header header)\" may be aliased with the first parameter of \"void setHeader(Header header)\" if the method removeHeader is invoked after the method setHeader.\n- The return value of \"void setHeader(Header header)\" may be aliased with the first parameter of \"void addHeader(Header header)\" if the method setHeader is invoked after the method addHeader.\n- The return value of \"void setHeader(String name, String value)\" may be aliased with the first parameter of \"void addHeader(String name, String value)\" if the method setHeader is invoked after the method addHeader.\n- The return value of \"void setHeaders(Header[] headers)\" may be aliased with the first parameter of \"void addHeader(Header header)\" if the method setHeaders is invoked after the method addHeader.",
    "org.apache.http.client.methods.HttpTrace": "When the method \"ProtocolVersion getProtocolVersion()\" is invoked after the method \"void setProtocolVersion(ProtocolVersion version)\", the return value of \"ProtocolVersion getProtocolVersion()\" may be aliased with the parameter of \"void setProtocolVersion(ProtocolVersion version)\".\n\nWhen the method \"RequestLine getRequestLine()\" is invoked after the method \"void setURI(URI uri)\", the return value of \"RequestLine getRequestLine()\" may be aliased with the parameter of \"void setURI(URI uri)\".\n\nWhen the method \"URI getURI()\" is invoked after the method \"void setURI(URI uri)\", the return value of \"URI getURI()\" may be aliased with the parameter of \"void setURI(URI uri)\".\n\nWhen the method \"RequestConfig getConfig()\" is invoked after the method \"void setConfig(RequestConfig config)\", the return value of \"RequestConfig getConfig()\" may be aliased with the parameter of \"void setConfig(RequestConfig config)\".\n\nWhen the method \"void addHeader(Header header)\" is invoked after the method \"void setHeader(Header header)\", the parameter of \"void addHeader(Header header)\" may be aliased with the parameter of \"void setHeader(Header header)\".\n\nWhen the method \"void addHeader(String name, String value)\" is invoked after the method \"void setHeader(String name, String value)\", the first parameter of \"void addHeader(String name, String value)\" may be aliased with the first parameter of \"void setHeader(String name, String value)\".\n\nWhen the method \"Header getFirstHeader(String name)\" is invoked after the method \"void setHeader(String name, String value)\", the return value of \"Header getFirstHeader(String name)\" may be aliased with the first parameter of \"void setHeader(String name, String value)\".\n\nWhen the method \"Header[] getHeaders(String name)\" is invoked after the method \"void setHeader(String name, String value)\", the array elements of the return value of \"Header[] getHeaders(String name)\" may be aliased with the first parameter of \"void setHeader(String name, String value)\".\n\nWhen the method \"Header getLastHeader(String name)\" is invoked after the method \"void setHeader(String name, String value)\", the return value of \"Header getLastHeader(String name)\" may be aliased with the first parameter of \"void setHeader(String name, String value)\".\n\nWhen the method \"void removeHeader(Header header)\" is invoked after the method \"void setHeader(Header header)\", the parameter of \"void removeHeader(Header header)\" may be aliased with the parameter of \"void setHeader(Header header)\".\n\nWhen the method \"void removeHeaders(String name)\" is invoked after the method \"void setHeader(String name, String value)\", the parameter of \"void removeHeaders(String name)\" may be aliased with the first parameter of \"void setHeader(String name, String value)\".\n\nWhen the method \"void setHeaders(Header[] headers)\" is invoked after the method \"void addHeader(Header header)\", each array element of the parameter of \"void setHeaders(Header[] headers)\" may be aliased with the parameter of \"void addHeader(Header header)\".\n\nWhen the method \"void setHeaders(Header[] headers)\" is invoked after the method \"void setHeader(Header header)\", each array element of the parameter of \"void setHeaders(Header[] headers)\" may be aliased with the parameter of \"void setHeader(Header header)\".",
    "org.apache.mahout.math.DenseVector": "When the two methods have the same value of the first parameter, the return value of \"double get(int index)\" may be aliased with the second parameter of \"void set(int index, double value)\" if the method get is invoked after the method set.\n\nWhen the two methods have the same value of the first parameter, the return value of \"Vector assign(DenseVector vector)\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method assign is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"Vector assign(double value)\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method assign is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"DenseVector clone()\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method clone is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"double dot(Vector x)\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method dot is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"double getQuick(int index)\" may be aliased with the second parameter of \"void setQuick(int index, double value)\" if the method getQuick is invoked after the method setQuick.\n\nWhen the two methods have the same value of the first parameter, the return value of \"void incrementQuick(int index, double increment)\" may be aliased with the second parameter of \"void setQuick(int index, double value)\" if the method incrementQuick is invoked after the method setQuick.\n\nWhen the two methods have the same value of the first parameter, the return value of \"int getNumNondefaultElements()\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method getNumNondefaultElements is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"int getNumNonZeroElements()\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method getNumNonZeroElements is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"boolean isAddConstantTime()\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method isAddConstantTime is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"boolean isDense()\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method isDense is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"boolean isSequentialAccess()\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method isSequentialAccess is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"double maxValue()\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method maxValue is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"int maxValueIndex()\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method maxValueIndex is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"double minValue()\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method minValue is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"int minValueIndex()\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method minValueIndex is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"int size()\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method size is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"Vector viewPart(int offset, int length)\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method viewPart is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"Vector divide(double x)\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method divide is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"double getDistanceSquared(Vector that)\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method getDistanceSquared is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"Vector.Element getElement(int index)\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method getElement is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"double getLengthSquared()\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method getLengthSquared is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"Iterable nonZeroes()\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method nonZeroes is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"double norm(double power)\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method norm is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"Vector normalize()\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method normalize is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"Vector plus(double x)\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method plus is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"Vector minus(Vector that)\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method minus is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"int hashCode()\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method hashCode is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"String toString()\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method toString is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"String toString(String[] dictionary)\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method toString is invoked after the method addAll.\n\nWhen the two methods have the same value of the first parameter, the return value of \"double zSum()\" may be aliased with the first parameter of \"void addAll(Vector v)\" if the method zSum is invoked after the method addAll.",
    "org.apache.mahout.math.AbstractVector": "The aliasing specifications for the given methods are:\n\n- When the method \"double aggregate(Vector other, DoubleDoubleFunction aggregator, DoubleDoubleFunction combiner)\" is invoked after the method \"double aggregate(DoubleDoubleFunction aggregator, DoubleFunction map)\" upon the same object, the return value of the former method may be aliased with the first parameter of the latter method.\n- When the method \"Vector assign(double value)\" is invoked after the method \"Vector assign(double[] values)\" upon the same object, the return value of the former method may be aliased with the second parameter of the latter method.\n- When the method \"Vector assign(DoubleDoubleFunction f, double y)\" is invoked after the method \"Vector assign(Vector other, DoubleDoubleFunction function)\" upon the same object, the return value of the former method may be aliased with the second parameter of the latter method.\n- When the method \"Iterable all()\" is invoked after the method \"Vector assign(Vector other)\" upon the same object, the return value of the former method may be aliased with the receiver of the latter method.\n- When the method \"double dot(Vector x)\" is invoked after the method \"Vector plus(double x)\" upon the same object, the return value of the former method may be aliased with the receiver of the latter method.\n- When the method \"Vector logNormalize(double power)\" is invoked after the method \"Vector logNormalize()\" upon the same object, the return value of the former method may be aliased with the receiver of the latter method.\n- When the method \"Vector normalize(double power)\" is invoked after the method \"Vector normalize()\" upon the same object, the return value of the former method may be aliased with the receiver of the latter method.\n- When the method \"Vector plus(Vector that)\" is invoked after the method \"Vector plus(double x)\" upon the same object, the return value of the former method may be aliased with the receiver of the latter method.\n- When the method \"Vector times(Vector that)\" is invoked after the method \"Vector times(double x)\" upon the same object, the return value of the former method may be aliased with the receiver of the latter method.",
    "org.apache.shiro.session.Session": "When the method \"Collection getAttributeKeys()\" is invoked after the method \"Object setAttribute(Object key, Object value)\", the return value of \"Collection getAttributeKeys()\" may be aliased with the first parameter of \"void setAttribute(Object key, Object value)\".\n\nWhen the method \"Object getAttribute(Object key)\" is invoked after the method \"void setAttribute(Object key, Object value)\", the return value of \"Object getAttribute(Object key)\" may be aliased with the second parameter of \"void setAttribute(Object key, Object value)\".\n\nWhen the method \"Serializable getId()\" is invoked after any other method, no aliasing relation is guaranteed.\n\nWhen the method \"Date getLastAccessTime()\" is invoked after the method \"void touch()\", the return value of \"Date getLastAccessTime()\" may be aliased with the return value of \"void touch()\".\n\nWhen the method \"long getTimeout()\" is invoked after the method \"void setTimeout(long maxIdleTimeInMillis)\", the return value of \"long getTimeout()\" may be aliased with the first parameter of \"void setTimeout(long maxIdleTimeInMillis)\".\n\nWhen the method \"Object removeAttribute(Object key)\" is invoked after the method \"void setAttribute(Object key, Object value)\", the return value of \"Object removeAttribute(Object key)\" may be aliased with the second parameter of \"void setAttribute(Object key, Object value)\".\n\nWhen the method \"void setAttribute(Object key, Object value)\" is invoked after the method \"Object removeAttribute(Object key)\", no aliasing relation is guaranteed.\n\nWhen the method \"void setTimeout(long maxIdleTimeInMillis)\" is invoked after the method \"long getTimeout()\", no aliasing relation is guaranteed.\n\nWhen the method \"void stop()\" is invoked after any other method, no aliasing relation is guaranteed.\n\nWhen the method \"void touch()\" is invoked after the method \"Date getLastAccessTime()\", the return value of \"void touch()\" may be aliased with the return value of \"Date getLastAccessTime()\".",
    "org.apache.uima.internal.util.CommandLineParser": "When the method \"addAlias(String param, String alias)\" is invoked after the method \"addParameter(String paramName)\" upon the same object, the return value of \"addAlias(String param, String alias)\" may be aliased with the second parameter of \"addParameter(String paramName)\".\n\nWhen the method \"addParameter(String paramName, boolean hasArg)\" is invoked after the method \"addParameter(String paramName)\" upon the same object, the return value of \"addParameter(String paramName, boolean hasArg)\" may be aliased with the first parameter of \"addAlias(String param, String alias)\" if the method \"addParameter(String paramName)\" is invoked before the method \"addAlias(String param, String alias)\".\n\nWhen the method \"getParamArgument(String paramName)\" is invoked after the method \"parseCmdLine(String[] args)\" upon the same object, the return value of \"getParamArgument(String paramName)\" may be aliased with the i-th parameter of \"addParameter(String paramName)\" if \"addParameter(String paramName)\" is invoked before \"parseCmdLine(String[] args)\" and \"paramName\" is used in \"args\".\n\nWhen the method \"getRestArgs()\" is invoked after the method \"parseCmdLine(String[] args)\" upon the same object, the return value of \"getRestArgs()\" may be aliased with the i-th parameter of \"addParameter(String paramName)\" if \"addParameter(String paramName)\" is invoked before \"parseCmdLine(String[] args)\" and \"paramName\" is not used in \"args\".\n\nWhen the method \"isInArgsList(String paramName)\" is invoked after the method \"parseCmdLine(String[] args)\" upon the same object, the return value of \"isInArgsList(String paramName)\" may be aliased with the i-th parameter of \"addParameter(String paramName)\" if \"addParameter(String paramName)\" is invoked before \"parseCmdLine(String[] args)\" and \"paramName\" is used in \"args\".\n\nWhen the method \"isKnownParameter(String paramName)\" is invoked after the method \"addParameter(String paramName)\" upon the same object, the return value of \"isKnownParameter(String paramName)\" may be aliased with the first parameter of \"addParameter(String paramName, boolean hasArg)\" if \"addParameter(String paramName, boolean hasArg)\" is invoked before \"isKnownParameter(String paramName)\".\n\nWhen the method \"parseCmdLine(String[] args)\" is invoked after the method \"addParameter(String paramName)\" upon the same object, the i-th parameter of \"addParameter(String paramName)\" may be aliased with the j-th parameter of \"parseCmdLine(String[] args)\" if \"addParameter(String paramName)\" is invoked before \"parseCmdLine(String[] args)\" and \"paramName\" is used in \"args\".",
    "org.bukkit.configuration.file.YamlConfiguration": "When the method \"YamlConfiguration loadConfiguration(Reader reader)\" is invoked after the method \"void loadFromString(String contents)\", the return value of \"YamlConfiguration loadConfiguration(Reader reader)\" may be aliased with the first parameter of \"void loadFromString(String contents)\".\n\nThe return value of \"YamlConfigurationOptions options()\" may be aliased with the first parameter of \"void addDefault(String path, Object value)\" if the method options is invoked after the method addDefault.\n\nThe return value of \"YamlConfigurationOptions options()\" may be aliased with the first parameter of \"void set(String path, Object value)\" if the method options is invoked after the method set.\n\nThe return value of \"String saveToString()\" may be aliased with the first parameter of \"void loadFromString(String contents)\" if the method saveToString is invoked after the method loadFromString.\n\nThe return value of \"ConfigurationSection createSection(String path)\" may be aliased with the second parameter of \"ConfigurationSection createSection(String path, Map<?,?> map)\" if the method createSection is invoked after the method createSection with two parameters.\n\nThe return value of \"Object get(String path)\" may be aliased with the second parameter of \"void addDefault(String path, Object value)\" if the method get is invoked after the method addDefault.\n\nThe return value of \"Object get(String path)\" may be aliased with the first parameter of \"void set(String path, Object value)\" if the method get is invoked after the method set.\n\nThe return value of \"ConfigurationSection getConfigurationSection(String path)\" may be aliased with the second parameter of \"void addDefault(String path, Object value)\" if the method getConfigurationSection is invoked after the method addDefault.\n\nThe return value of \"ConfigurationSection getConfigurationSection(String path)\" may be aliased with the first parameter of \"void set(String path, Object value)\" if the method getConfigurationSection is invoked after the method set.\n\nThe return value of \"<T> T getObject(String path, Class<T> clazz)\" may be aliased with the second parameter of \"void addDefault(String path, Object value)\" if the method getObject is invoked after the method addDefault.\n\nThe return value of \"<T> T getObject(String path, Class<T> clazz)\" may be aliased with the first parameter of \"void set(String path, Object value)\" if the method getObject is invoked after the method set.\n\nThe return value of \"void addDefaults(Map<String,Object> defaults)\" may be aliased with the first parameter of \"void addDefaults(Configuration defaults)\" if the method addDefaults with a Map parameter is invoked after the method addDefaults with a Configuration parameter.\n\nThe return value of \"FileConfigurationOptions options()\" may be aliased with the first parameter of \"void save(String file)\" if the method options is invoked after the method save.\n\nThe return value of \"FileConfigurationOptions options()\" may be aliased with the first parameter of \"void load(File file)\" if the method options is invoked after the method load.\n\nThe return value of \"FileConfigurationOptions options()\" may be aliased with the first parameter of \"void load(String file)\" if the method options is invoked after the method load.\n\nThe return value of \"FileConfigurationOptions options()\" may be aliased with the first parameter of \"void save(File file)\" if the method options is invoked after the method save.",
    "org.bukkit.configuration.MemorySection": "When the method \"void addDefault(String path, Object value)\" is invoked before the method \"Object get(String path)\", the return value of \"Object get(String path)\" may be aliased with the second parameter of \"void addDefault(String path, Object value)\".\n\nWhen the method \"boolean contains(String path)\" or \"boolean contains(String path, boolean ignoreDefault)\" is invoked before the method \"void set(String path, Object value)\", the return value of \"void set(String path, Object value)\" may be aliased with the first parameter of \"boolean contains(String path)\" or \"boolean contains(String path, boolean ignoreDefault)\".\n\nWhen the method \"String createPath(ConfigurationSection section, String key)\" or \"String createPath(ConfigurationSection section, String key, ConfigurationSection relativeTo)\" is invoked before the method \"void set(String path, Object value)\", the return value of \"void set(String path, Object value)\" may be aliased with the first parameter of \"String createPath(ConfigurationSection section, String key)\" or \"String createPath(ConfigurationSection section, String key, ConfigurationSection relativeTo)\".\n\nWhen the method \"ConfigurationSection createSection(String path)\" or \"ConfigurationSection createSection(String path, Map<?,?> map)\" is invoked before the method \"void set(String path, Object value)\", the return value of \"void set(String path, Object value)\" may be aliased with the first parameter of \"ConfigurationSection createSection(String path)\" or \"ConfigurationSection createSection(String path, Map<?,?> map)\".\n\nWhen the method \"Object get(String path)\" or \"Object get(String path, Object def)\" is invoked before the method \"void set(String path, Object value)\", the return value of \"void set(String path, Object value)\" may be aliased with the first parameter of \"Object get(String path)\" or \"Object get(String path, Object def)\".\n\nWhen the method \"boolean getBoolean(String path)\" or \"boolean getBoolean(String path, boolean def)\" is invoked before the method \"void set(String path, Object value)\", the return value of \"void set(String path, Object value)\" may be aliased with the first parameter of \"boolean getBoolean(String path)\" or \"boolean getBoolean(String path, boolean def)\".\n\nWhen the method \"List<Boolean> getBooleanList(String path)\" is invoked before the method \"void set(String path, Object value)\", the return value of \"void set(String path, Object value)\" may be aliased with the first parameter of \"List<Boolean> getBooleanList(String path)\".\n\nWhen the method \"List<Byte> getByteList(String path)\" is invoked before the method \"void set(String path, Object value)\", the return value of \"void set(String path, Object value)\" may be aliased with the first parameter of \"List<Byte> getByteList(String path)\".\n\nWhen the method \"List<Character> getCharacterList(String path)\" is invoked before the method \"void set(String path, Object value)\", the return value of \"void set(String path, Object value)\" may be aliased with the first parameter of \"List<Character> getCharacterList(String path)\".\n\nWhen the method \"Color getColor(String path)\" or \"Color getColor(String path, Color def)\" is invoked before the method \"void set(String path, Object value)\", the return value of \"void set(String path, Object value)\" may be aliased with the first parameter of \"Color getColor(String path)\" or \"Color getColor(String path, Color def)\".\n\nWhen the method \"List<String> getComments(String path)\" is invoked before the method \"void setComments(String path, List<String> comments)\", the second parameter of \"void setComments(String path, List<String> comments)\" may be aliased with the return value of \"List<String> getComments(String path)\".\n\nWhen the method \"ConfigurationSection getConfigurationSection(String path)\" is invoked before the method \"void set(String path, Object value)\", the return value of \"void set(String path, Object value)\" may be aliased with the first parameter of \"ConfigurationSection getConfigurationSection(String path)\".\n\nWhen the method \"Object getDefault(String path)\" is invoked before the method \"void set(String path, Object value)\", the return value of \"void set(String path, Object value)\" may be aliased with the first parameter of \"Object getDefault(String path)\".\n\nWhen the method \"double getDouble(String path)\" or \"double getDouble(String path, double def)\" is invoked before the method \"void set(String path, Object value)\", the return value of \"void set(String path, Object value)\" may be aliased with the first parameter of \"double getDouble(String path)\" or \"double getDouble(String path, double def)\".\n\nWhen the method \"List<Double> getDoubleList(String path)\" is invoked before the method \"void set(String path, Object value)\", the return value of \"void set(String path, Object value)\" may be aliased with the first parameter of \"List<Double> getDoubleList(String path)\".\n\nWhen the method \"List<Float> getFloatList(String path)\" is invoked before the method \"void set(String path, Object value)\", the return value of \"void set(String path, Object value)\" may be aliased with the first parameter of \"List<Float> getFloatList(String path)\".\n\nWhen the method \"List<String> getInlineComments(String path)\" is invoked before the method \"void setInlineComments(String path, List<String> comments)\", the second parameter of \"void setInlineComments(String path, List<String> comments)\" may be aliased with the return value of \"List<String> getInlineComments(String path)\".\n\nWhen the method \"int getInt(String path)\" or \"int getInt(String path, int def)\" is invoked before the method \"void set(String path, Object value)\", the return value of \"void set(String path, Object value)\" may be aliased with the first parameter of \"int getInt(String path)\" or \"int getInt(String path, int def)\".\n\nWhen the method \"List<Integer> getIntegerList(String path)\" is invoked before the method \"void set(String path, Object value)\", the return value of \"void set(String path, Object value)\" may be aliased with the first parameter of \"List<Integer> getIntegerList(String path)\".\n\nWhen the method \"ItemStack getItemStack(String path)\" or \"ItemStack getItemStack(String path, ItemStack def)\" is invoked before the method \"void set(String path, Object value)\", the return value of \"void set(String path, Object value)\" may be aliased with the first parameter of \"ItemStack getItemStack(String path)\" or \"ItemStack getItemStack(String path, ItemStack def)\".\n\nWhen the method \"Set<String> getKeys(boolean deep)\" is invoked before the method \"void set(String path, Object value)\", the return value of \"void set(String path, Object value)\" may be aliased with the first parameter of \"Set<String> getKeys(boolean deep)\".\n\nWhen the method \"List<?> getList(String path)\" or \"List<?> getList(String path, List<?> def)\" is invoked before the method \"void set(String path, Object value)\", the return value of \"void set(String path, Object value)\" may be aliased with the first parameter of \"List<?> getList(String path)\" or \"List<?> getList(String path, List<?> def)\".\n\nWhen the method \"Location getLocation(String path)\" or \"Location getLocation(String path, Location def)\" is invoked before the method \"void set(String path, Object value)\", the return value of \"void set(String path, Object value)\" may be aliased with the first parameter of \"Location getLocation(String path)\" or \"Location getLocation(String path, Location def)\".\n\nWhen the method \"long getLong(String path)\" or \"long getLong(String path, long def)\" is invoked before the method \"void set(String path, Object value)\", the return value of \"void set(String path, Object value)\" may be aliased with the first parameter of \"long getLong(String path)\" or \"long getLong(String path, long def)\".\n\nWhen the method \"List<Long> getLongList(String path)\" is invoked before the method \"void set(String path, Object value)\", the return value of \"void set(String path, Object value)\" may",
    "org.bukkit.configuration.MemoryConfiguration": "When the two methods have the same value of the second parameter, the return value of \"ConfigurationSection createSection(String path)\" may be aliased with the second parameter of \"void addDefaults(Map<String,Object> defaults)\" if the method createSection is invoked after the method addDefaults.\n\nWhen the two methods have the same value of the first parameter and the second parameter is set to true, the return value of \"boolean contains(String path)\" may be aliased with the first parameter of \"boolean contains(String path, boolean ignoreDefault)\" if the method contains is invoked after the method contains.\n\nWhen the two methods have the same value of the first parameter and the second parameter is set to false, the return value of \"boolean contains(String path, boolean ignoreDefault)\" may be aliased with the first parameter of \"boolean contains(String path)\" if the method contains is invoked after the method contains.\n\nWhen the two methods have the same value of the first parameter and the third parameter is null, the return value of \"String createPath(ConfigurationSection section, String key)\" may be aliased with the second parameter of \"String createPath(ConfigurationSection section, String key, ConfigurationSection relativeTo)\" if the method createPath is invoked after the method createPath.\n\nWhen the two methods have the same value of the first parameter and the third parameter is not null, the return value of \"String createPath(ConfigurationSection section, String key, ConfigurationSection relativeTo)\" may be aliased with the second parameter of \"String createPath(ConfigurationSection section, String key)\" if the method createPath is invoked after the method createPath.\n\nWhen the two methods have the same value of the first parameter and the second parameter is null, the return value of \"Object getDefault(String path)\" may be aliased with the first parameter of \"void setDefaults(Configuration defaults)\" if the method getDefault is invoked after the method setDefaults.\n\nWhen the two methods have the same value of the first parameter, the return value of \"ConfigurationSection getConfigurationSection(String path)\" may be aliased with the first parameter of \"void addDefault(String path, Object value)\" if the method getConfigurationSection is invoked after the method addDefault.\n\nWhen the two methods have the same value of the first parameter, the return value of \"Object get(String path)\" may be aliased with the second parameter of \"void set(String path, Object value)\" if the method get is invoked after the method set.\n\nWhen the two methods have the same value of the first parameter, the return value of \"void set(String path, Object value)\" may be aliased with the second parameter of \"Object get(String path)\" if the method set is invoked after the method get.\n\nWhen the two methods have the same value of the first parameter and the second parameter is null, the return value of \"<T extends ConfigurationSerializable> T getSerializable(String path, Class<T> clazz)\" may be aliased with the first parameter of \"<T> T getObject(String path, Class<T> clazz)\" if the method getSerializable is invoked after the method getObject.\n\nWhen the two methods have the same value of the first parameter and the second and third parameters are null, the return value of \"<T> T getObject(String path, Class<T> clazz)\" may be aliased with the first parameter of \"<T extends ConfigurationSerializable> T getSerializable(String path, Class<T> clazz)\" if the method getObject is invoked after the method getSerializable.\n\nWhen the two methods have the same value of the first parameter, the return value of \"void setDefaults(Configuration defaults)\" may be aliased with the first parameter of \"void addDefaults(Configuration defaults)\" if the method setDefaults is invoked after the method addDefaults.\n\nWhen the two methods have the same value of the first parameter and the second parameter is null, the return value of \"String getString(String path)\" may be aliased with the second parameter of \"void setComments(String path, List<String> comments)\" if the method getString is invoked after the method setComments.\n\nWhen the two methods have the same value of the first parameter and the second parameter is null, the return value of \"void setComments(String path, List<String> comments)\" may be aliased with the first parameter of \"String getString(String path)\" if the method setComments is invoked after the method getString.\n\nWhen the two methods have the same value of the first parameter and the second parameter is null, the return value of \"String getString(String path)\" may be aliased with the second parameter of \"void setInlineComments(String path, List<String> comments)\" if the method getString is invoked after the method setInlineComments.\n\nWhen the two methods have the same value of the first parameter and the second parameter is null, the return value of \"void setInlineComments(String path, List<String> comments)\" may be aliased with the first parameter of \"String getString(String path)\" if the method setInlineComments is invoked after the method getString.",
    "org.bukkit.configuration.file.FileConfiguration": "void load(File file) may be aliased with void load(Reader reader) if load(File file) is invoked after load(Reader reader).\n\nvoid load(File file) may be aliased with void load(String file) if load(File file) is invoked after load(String file).\n\nvoid save(File file) may be aliased with void save(String file) if save(File file) is invoked after save(String file).\n\nObject get(String path) may be aliased with void set(String path, Object value) if get(String path) is invoked after set(String path, Object value).\n\nObject get(String path, Object def) may be aliased with void set(String path, Object value) if get(String path, Object def) is invoked after set(String path, Object value).\n\nboolean getBoolean(String path) may be aliased with void set(String path, Object value) if getBoolean(String path) is invoked after set(String path, Object value).\n\nboolean getBoolean(String path, boolean def) may be aliased with void set(String path, Object value) if getBoolean(String path, boolean def) is invoked after set(String path, Object value).\n\nList<Boolean> getBooleanList(String path) may be aliased with void set(String path, Object value) if getBooleanList(String path) is invoked after set(String path, Object value).\n\nList<Byte> getByteList(String path) may be aliased with void set(String path, Object value) if getByteList(String path) is invoked after set(String path, Object value).\n\nList<Character> getCharacterList(String path) may be aliased with void set(String path, Object value) if getCharacterList(String path) is invoked after set(String path, Object value).\n\nColor getColor(String path) may be aliased with void set(String path, Object value) if getColor(String path) is invoked after set(String path, Object value).\n\nColor getColor(String path, Color def) may be aliased with void set(String path, Object value) if getColor(String path, Color def) is invoked after set(String path, Object value).\n\nList<String> getComments(String path) may be aliased with void set(String path, Object value) if getComments(String path) is invoked after set(String path, Object value).\n\nConfigurationSection getConfigurationSection(String path) may be aliased with void set(String path, Object value) if getConfigurationSection(String path) is invoked after set(String path, Object value).\n\nObject getDefault(String path) may be aliased with void set(String path, Object value) if getDefault(String path) is invoked after set(String path, Object value).\n\ndouble getDouble(String path) may be aliased with void set(String path, Object value) if getDouble(String path) is invoked after set(String path, Object value).\n\ndouble getDouble(String path, double def) may be aliased with void set(String path, Object value) if getDouble(String path, double def) is invoked after set(String path, Object value).\n\nList<Double> getDoubleList(String path) may be aliased with void set(String path, Object value) if getDoubleList(String path) is invoked after set(String path, Object value).\n\nList<Float> getFloatList(String path) may be aliased with void set(String path, Object value) if getFloatList(String path) is invoked after set(String path, Object value).\n\nList<String> getInlineComments(String path) may be aliased with void set(String path, Object value) if getInlineComments(String path) is invoked after set(String path, Object value).\n\nint getInt(String path) may be aliased with void set(String path, Object value) if getInt(String path) is invoked after set(String path, Object value).\n\nint getInt(String path, int def) may be aliased with void set(String path, Object value) if getInt(String path, int def) is invoked after set(String path, Object value).\n\nList<Integer> getIntegerList(String path) may be aliased with void set(String path, Object value) if getIntegerList(String path) is invoked after set(String path, Object value).\n\nItemStack getItemStack(String path) may be aliased with void set(String path, Object value) if getItemStack(String path) is invoked after set(String path, Object value).\n\nItemStack getItemStack(String path, ItemStack def) may be aliased with void set(String path, Object value) if getItemStack(String path, ItemStack def) is invoked after set(String path, Object value).\n\nSet<String> getKeys(boolean deep) may be aliased with void set(String path, Object value) if getKeys(boolean deep) is invoked after set(String path, Object value).\n\nList<?> getList(String path) may be aliased with void set(String path, Object value) if getList(String path) is invoked after set(String path, Object value).\n\nList<?> getList(String path, List<?> def) may be aliased with void set(String path, Object value) if getList(String path, List<?> def) is invoked after set(String path, Object value).\n\nLocation getLocation(String path) may be aliased with void set(String path, Object value) if getLocation(String path) is invoked after set(String path, Object value).\n\nLocation getLocation(String path, Location def) may be aliased with void set(String path, Object value) if getLocation(String path, Location def) is invoked after set(String path, Object value).\n\nlong getLong(String path) may be aliased with void set(String path, Object value) if getLong(String path) is invoked after set(String path, Object value).\n\nlong getLong(String path, long def) may be aliased with void set(String path, Object value) if getLong(String path, long def) is invoked after set(String path, Object value).\n\nList<Long> getLongList(String path) may be aliased with void set(String path, Object value) if getLongList(String path) is invoked after set(String path, Object value).\n\nList<Map<?,?>> getMapList(String path) may be aliased with void set(String path, Object value) if getMapList(String path) is invoked after set(String path, Object value).\n\nString getName() may be aliased with void set(String path, Object value) if getName() is invoked after set(String path, Object value).\n\n<T> T getObject(String path, Class<T> clazz) may be aliased with void set(String path, Object value) if getObject(String path, Class<T> clazz) is invoked after set(String path, Object value).\n\n<T> T getObject(String path, Class<T> clazz, T def) may be aliased with void set(String path, Object value) if getObject(String path, Class<T> clazz, T def) is invoked after set(String path, Object value).\n\nOfflinePlayer getOfflinePlayer(String path) may be aliased with void set(String path, Object value",
    "org.codehaus.jackson.node.ObjectNode": "The aliasing specifications for the given methods are:\n\n- When the method \"JsonNode get(int index)\" is invoked after the method \"void appendElement(JsonNode node)\" on the same object, the return value of \"JsonNode get(int index)\" may be aliased with the parameter of \"void appendElement(JsonNode node)\".\n- When the method \"JsonNode get(String fieldName)\" is invoked after the method \"JsonNode put(String fieldName, JsonNode value)\" on the same object, the return value of \"JsonNode get(String fieldName)\" may be aliased with the parameter of \"JsonNode put(String fieldName, JsonNode value)\".\n- When the method \"JsonNode path(int index)\" is invoked after the method \"void insertElement(int index, JsonNode value)\" on the same object, the return value of \"JsonNode path(int index)\" may be aliased with the parameter of \"void insertElement(int index, JsonNode value)\".\n- When the method \"JsonNode path(String fieldName)\" is invoked after the method \"JsonNode put(String fieldName, JsonNode value)\" on the same object, the return value of \"JsonNode path(String fieldName)\" may be aliased with the parameter of \"JsonNode put(String fieldName, JsonNode value)\".\n- When the method \"JsonNode removeElement(int index)\" is invoked after the method \"void appendElement(JsonNode node)\" on the same object, the return value of \"JsonNode removeElement(int index)\" may be aliased with the parameter of \"void appendElement(JsonNode node)\".\n- When the method \"JsonNode removeElement(String fieldName)\" is invoked after the method \"JsonNode put(String fieldName, JsonNode value)\" on the same object, the return value of \"JsonNode removeElement(String fieldName)\" may be aliased with the parameter of \"JsonNode put(String fieldName, JsonNode value)\".\n- When the method \"JsonNode setElement(int index, JsonNode value)\" is invoked after the method \"void appendElement(JsonNode node)\" on the same object, the return value of \"JsonNode setElement(int index, JsonNode value)\" may be aliased with the parameter of \"void appendElement(JsonNode node)\".\n- When the method \"JsonNode setElement(String fieldName, JsonNode value)\" is invoked after the method \"JsonNode put(String fieldName, JsonNode value)\" on the same object, the return value of \"JsonNode setElement(String fieldName, JsonNode value)\" may be aliased with the parameter of \"JsonNode put(String fieldName, JsonNode value)\".",
    "org.codehaus.jackson.node.ContainerNode": "When the method \"JsonNode getElementValue(int index)\" is invoked after the method \"void appendElement(JsonNode node)\" upon the same object, the return value of \"JsonNode getElementValue(int index)\" may be aliased with the parameter \"JsonNode node\" of \"void appendElement(JsonNode node)\".\n\nWhen the method \"JsonNode getElementValue(int index)\" is invoked after the method \"void insertElement(int index, JsonNode value)\" upon the same object, the return value of \"JsonNode getElementValue(int index)\" may be aliased with the parameter \"JsonNode value\" of \"void insertElement(int index, JsonNode value)\".\n\nWhen the method \"JsonNode getFieldValue(String fieldName)\" is invoked after the method \"JsonNode setElement(String fieldName, JsonNode value)\" upon the same object, the return value of \"JsonNode getFieldValue(String fieldName)\" may be aliased with the parameter \"JsonNode value\" of \"JsonNode setElement(String fieldName, JsonNode value)\".\n\nWhen the method \"void appendElement(JsonNode node)\" is invoked after the method \"JsonNode getElementValue(int index)\" upon the same object, the return value of \"JsonNode getElementValue(int index)\" may be aliased with the parameter \"JsonNode node\" of \"void appendElement(JsonNode node)\".\n\nWhen the method \"void insertElement(int index, JsonNode value)\" is invoked after the method \"JsonNode getElementValue(int index)\" upon the same object, the return value of \"JsonNode getElementValue(int index)\" may be aliased with the parameter \"JsonNode value\" of \"void insertElement(int index, JsonNode value)\".\n\nWhen the method \"JsonNode setElement(int index, JsonNode value)\" is invoked after the method \"JsonNode getElementValue(int index)\" upon the same object, the return value of \"JsonNode getElementValue(int index)\" may be aliased with the parameter \"JsonNode value\" of \"JsonNode setElement(int index, JsonNode value)\".\n\nWhen the method \"JsonNode setElement(String fieldName, JsonNode value)\" is invoked after the method \"JsonNode getFieldValue(String fieldName)\" upon the same object, the return value of \"JsonNode getFieldValue(String fieldName)\" may be aliased with the parameter \"JsonNode value\" of \"JsonNode setElement(String fieldName, JsonNode value)\".\n\nWhen the method \"JsonNode removeElement(int index)\" is invoked after the method \"JsonNode getElementValue(int index)\" upon the same object, the return value of \"JsonNode getElementValue(int index)\" may be aliased with the parameter \"int index\" of \"JsonNode removeElement(int index)\".\n\nWhen the method \"JsonNode removeElement(String fieldName)\" is invoked after the method \"JsonNode getFieldValue(String fieldName)\" upon the same object, the return value of \"JsonNode getFieldValue(String fieldName)\" may be aliased with the parameter \"String fieldName\" of \"JsonNode removeElement(String fieldName)\".",
    "org.codehaus.jackson.node.BaseJsonNode": "The aliasing specifications for the given methods are as follows:\n\n- The return value of \"JsonNode findPath(String fieldName)\" may be aliased with the k-th parameter of \"ObjectNode findParent(String fieldName)\" if the method findPath is invoked after the method findParent.\n- The return value of \"JsonNode findValue(String fieldName)\" may be aliased with the k-th parameter of \"ObjectNode findParent(String fieldName)\" if the method findValue is invoked after the method findParent.\n- The return value of \"JsonNode getElementValue(int index)\" may be aliased with the k-th parameter of \"void insertElement(int index, JsonNode value)\" if the method getElementValue is invoked after the method insertElement.\n- The return value of \"JsonNode getFieldValue(String fieldName)\" may be aliased with the k-th parameter of \"JsonNode setElement(String fieldName, JsonNode value)\" if the method getFieldValue is invoked after the method setElement.\n- The return value of \"JsonNode getPath(int index)\" may be aliased with the k-th parameter of \"ObjectNode findParent(String fieldName)\" if the method getPath is invoked after the method findParent.\n- The return value of \"JsonNode getPath(String fieldName)\" may be aliased with the k-th parameter of \"ObjectNode findParent(String fieldName)\" if the method getPath is invoked after the method findParent.\n- The return value of \"JsonNode removeElement(int index)\" may be aliased with the k-th parameter of \"JsonNode setElement(int index, JsonNode value)\" if the method removeElement is invoked after the method setElement.\n- The return value of \"JsonNode removeElement(String fieldName)\" may be aliased with the k-th parameter of \"JsonNode setElement(String fieldName, JsonNode value)\" if the method removeElement is invoked after the method setElement.\n- The return value of \"JsonNode setElement(int index, JsonNode value)\" may be aliased with the k-th parameter of \"JsonNode removeElement(int index)\" if the method setElement is invoked after the method removeElement.\n- The return value of \"JsonNode setElement(String fieldName, JsonNode value)\" may be aliased with the k-th parameter of \"JsonNode removeElement(String fieldName)\" if the method setElement is invoked after the method removeElement.",
    "org.codehaus.jackson.JsonNode": "When the method \"boolean getBooleanValue()\" is invoked after the method \"void appendElement(JsonNode node)\" upon the same object, the return value of \"boolean getBooleanValue()\" may be aliased with the first parameter of \"void appendElement(JsonNode node)\".\n\nWhen the method \"BigDecimal getDecimalValue()\" is invoked after the method \"void appendElement(JsonNode node)\" upon the same object, the return value of \"BigDecimal getDecimalValue()\" may be aliased with the first parameter of \"void appendElement(JsonNode node)\".\n\nWhen the method \"double getDoubleValue()\" is invoked after the method \"void appendElement(JsonNode node)\" upon the same object, the return value of \"double getDoubleValue()\" may be aliased with the first parameter of \"void appendElement(JsonNode node)\".\n\nWhen the method \"Iterator<JsonNode> getElements()\" is invoked after the method \"void appendElement(JsonNode node)\" upon the same object, the return value of \"Iterator<JsonNode> getElements()\" may be aliased with the first parameter of \"void appendElement(JsonNode node)\".\n\nWhen the method \"JsonNode getElementValue(int index)\" is invoked after the method \"void appendElement(JsonNode node)\" upon the same object, the return value of \"JsonNode getElementValue(int index)\" may be aliased with the first parameter of \"void appendElement(JsonNode node)\".\n\nWhen the method \"Iterator<String> getFieldNames()\" is invoked after the method \"void appendElement(JsonNode node)\" upon the same object, the return value of \"Iterator<String> getFieldNames()\" may be aliased with the first parameter of \"void appendElement(JsonNode node)\".\n\nWhen the method \"JsonNode getFieldValue(String fieldName)\" is invoked after the method \"void appendElement(JsonNode node)\" upon the same object, the return value of \"JsonNode getFieldValue(String fieldName)\" may be aliased with the first parameter of \"void appendElement(JsonNode node)\".\n\nWhen the method \"Iterator<JsonNode> getFieldValues()\" is invoked after the method \"void appendElement(JsonNode node)\" upon the same object, the return value of \"Iterator<JsonNode> getFieldValues()\" may be aliased with the first parameter of \"void appendElement(JsonNode node)\".\n\nWhen the method \"int getIntValue()\" is invoked after the method \"void appendElement(JsonNode node)\" upon the same object, the return value of \"int getIntValue()\" may be aliased with the first parameter of \"void appendElement(JsonNode node)\".\n\nWhen the method \"long getLongValue()\" is invoked after the method \"void appendElement(JsonNode node)\" upon the same object, the return value of \"long getLongValue()\" may be aliased with the first parameter of \"void appendElement(JsonNode node)\".\n\nWhen the method \"Number getNumberValue()\" is invoked after the method \"void appendElement(JsonNode node)\" upon the same object, the return value of \"Number getNumberValue()\" may be aliased with the first parameter of \"void appendElement(JsonNode node)\".\n\nWhen the method \"JsonNode getPath(int index)\" is invoked after the method \"void appendElement(JsonNode node)\" upon the same object, the return value of \"JsonNode getPath(int index)\" may be aliased with the first parameter of \"void appendElement(JsonNode node)\".\n\nWhen the method \"JsonNode getPath(String fieldName)\" is invoked after the method \"void appendElement(JsonNode node)\" upon the same object, the return value of \"JsonNode getPath(String fieldName)\" may be aliased with the first parameter of \"void appendElement(JsonNode node)\".\n\nWhen the method \"String getTextValue()\" is invoked after the method \"void appendElement(JsonNode node)\" upon the same object, the return value of \"String getTextValue()\" may be aliased with the first parameter of \"void appendElement(JsonNode node)\".\n\nWhen the method \"String getValueAsText()\" is invoked after the method \"void appendElement(JsonNode node)\" upon the same object, the return value of \"String getValueAsText()\" may be aliased with the first parameter of \"void appendElement(JsonNode node)\".\n\nWhen the method \"void insertElement(int index, JsonNode value)\" is invoked after the method \"void appendElement(JsonNode node)\" upon the same object, the return value of \"void insertElement(int index, JsonNode value)\" may be aliased with the first parameter of \"void appendElement(JsonNode node)\".\n\nWhen the method \"JsonNode removeElement(int index)\" is invoked after the method \"void appendElement(JsonNode node)\" upon the same object, the return value of \"JsonNode removeElement(int index)\" may be aliased with the first parameter of \"void appendElement(JsonNode node)\".\n\nWhen the method \"JsonNode removeElement(String fieldName)\" is invoked after the method \"void appendElement(JsonNode node)\" upon the same object, the return value of \"JsonNode removeElement(String fieldName)\" may be aliased with the first parameter of \"void appendElement(JsonNode node)\".\n\nWhen the method \"JsonNode setElement(int index, JsonNode value)\" is invoked after the method \"void appendElement(JsonNode node)\" upon the same object, the return value of \"JsonNode setElement(int index, JsonNode value)\" may be aliased with the first parameter of \"void appendElement(JsonNode node)\".\n\nWhen the method \"JsonNode setElement(String fieldName, JsonNode value)\" is invoked after the method \"void appendElement(JsonNode node)\" upon the same object, the return value of \"JsonNode setElement(String fieldName, JsonNode value)\" may be aliased with the first parameter of \"void appendElement(JsonNode node)\".\n\nWhen the method \"int size()\" is invoked after the method \"void appendElement(JsonNode node)\" upon the same object, the return value of \"int size()\" may be aliased with the first parameter of \"void appendElement(JsonNode node)\".\n\nWhen the method \"void writeTo(JsonGenerator jg)\" is invoked after the method \"void appendElement(JsonNode node)\" upon the same object, the return value of \"void writeTo(JsonGenerator jg)\" may be aliased with the first parameter of \"void appendElement(JsonNode node)\".",
    "org.eclipse.jface.resource.ImageRegistry": "When the two methods \"void put(String key, Image image)\" and \"Image get(String key)\" have the same value of the first parameter, the return value of \"Image get(String key)\" may be aliased with the second parameter of \"void put(String key, Image image)\" if the method get is invoked after the method put.\n\nWhen the two methods \"void put(String key, ImageDescriptor descriptor)\" and \"Image get(String key)\" have the same value of the first parameter, the return value of \"Image get(String key)\" may be aliased with the second parameter of \"void put(String key, ImageDescriptor descriptor)\" if the method get is invoked after the method put.",
    "org.eclipse.jface.text.Document": "When the method \"void addDocumentListener(IDocumentListener listener)\" is invoked after the method \"void addPrenotifiedDocumentListener(IDocumentListener listener)\" upon the same object, the return value of \"List getDocumentListeners()\" may be aliased with the parameter of \"void addDocumentListener(IDocumentListener listener)\".\n\nWhen the method \"void addDocumentPartitioningListener(IDocumentPartitioningListener listener)\" is invoked after the method \"void fireDocumentPartitioningChanged(IRegion region)\" upon the same object, the return value of \"List getDocumentPartitioningListeners()\" may be aliased with the parameter of \"void addDocumentPartitioningListener(IDocumentPartitioningListener listener)\".\n\nWhen the method \"void addPosition(Position position)\" is invoked after the method \"void removePosition(Position position)\" upon the same object, the return value of \"Map getDocumentManagedPositions()\" may be aliased with the parameter of \"void addPosition(Position position)\".\n\nWhen the method \"void addPosition(String category, Position position)\" is invoked after the method \"void removePosition(String category, Position position)\" upon the same object, the return value of \"Map getDocumentManagedPositions()\" may be aliased with the second parameter of \"void addPosition(String category, Position position)\".\n\nWhen the method \"void computeIndexInCategory(String category, int offset)\" is invoked after the method \"ITypedRegion[] computePartitioning(int offset, int length)\" upon the same object, the return value of \"int computeIndexInCategory(String category, int offset)\" may be aliased with the third parameter of \"ITypedRegion[] computePartitioning(int offset, int length)\".\n\nWhen the method \"void computeIndexInPositionList(List positions, int offset)\" is invoked after the method \"void addPosition(Position position)\" or \"void addPosition(String category, Position position)\" upon the same object, the return value of \"int computeIndexInPositionList(List positions, int offset)\" may be aliased with the parameter of \"void addPosition(Position position)\" or the second parameter of \"void addPosition(String category, Position position)\".\n\nWhen the method \"void fireDocumentChanged(DocumentEvent event)\" is invoked after the method \"void fireDocumentAboutToBeChanged(DocumentEvent event)\" upon the same object, the return value of \"List getDocumentListeners()\" may be aliased with the parameter of \"void fireDocumentChanged(DocumentEvent event)\".\n\nWhen the method \"void fireDocumentPartitioningChanged(IRegion region)\" is invoked after the method \"void fireDocumentPartitioningChanged()\" upon the same object, the return value of \"List getDocumentPartitioningListeners()\" may be aliased with the parameter of \"void fireDocumentPartitioningChanged(IRegion region)\".\n\nWhen the method \"ITypedRegion[] computePartitioning(int offset, int length)\" is invoked after the method \"void completeInitialization()\" upon the same object, the return value of \"ITypedRegion[] computePartitioning(int offset, int length)\" may be aliased with the parameter of \"void completeInitialization()\".\n\nWhen the method \"void get()\" is invoked after the method \"void set(String text)\" upon the same object, the return value of \"String get()\" may be aliased with the parameter of \"void set(String text)\".\n\nWhen the method \"String get(int pos, int length)\" is invoked after the method \"void replace(int pos, int length, String text)\" upon the same object, the return value of \"String get(int pos, int length)\" may be aliased with the third parameter of \"void replace(int pos, int length, String text)\".\n\nWhen the method \"void getContentType(int offset)\" is invoked after the method \"ITypedRegion getPartition(int offset)\" upon the same object, the return value of \"String getContentType(int offset)\" may be aliased with the return value of \"ITypedRegion getPartition(int offset)\".\n\nWhen the method \"void getLineInformation(int line)\" or \"void getLineOffset(int line)\" is invoked after the method \"void getLineInformationOfOffset(int offset)\" upon the same object, the return value of \"IRegion getLineInformation(int line)\" or \"int getLineOffset(int line)\" may be aliased with the return value of \"IRegion getLineInformationOfOffset(int offset)\".\n\nWhen the method \"int getLineOfOffset(int pos)\" is invoked after the method \"void getLineInformationOfOffset(int offset)\" upon the same object, the return value of \"int getLineOfOffset(int pos)\" may be aliased with the return value of \"IRegion getLineInformationOfOffset(int offset)\".\n\nWhen the method \"IRegion getLineInformationOfOffset(int offset)\" is invoked after the method \"int computeNumberOfLines(String text)\" upon the same object, the return value of \"IRegion getLineInformationOfOffset(int offset)\" may be aliased with the parameter of \"int computeNumberOfLines(String text)\".\n\nWhen the method \"String[] getLegalContentTypes()\" is invoked after the method \"void setDocumentPartitioner(IDocumentPartitioner partitioner)\" upon the same object, the return value of \"String[] getLegalContentTypes()\" may be aliased with the parameter of \"void setDocumentPartitioner(IDocumentPartitioner partitioner)\".\n\nWhen the method \"String[] getLegalLineDelimiters()\" is invoked after the method \"void setLineTracker(ILineTracker tracker)\" upon the same object, the return value of \"String[] getLegalLineDelimiters()\" may be aliased with the parameter of \"void setLineTracker(ILineTracker tracker)\".\n\nWhen the method \"int getLength()\" is invoked after the method \"void set(String text)\" upon the same object, the return value of \"int getLength()\" may be aliased with the parameter of \"void set(String text)\".\n\nWhen the method \"IRegion getPartition(int offset)\" is invoked after the method \"ITypedRegion[] computePartitioning(int offset, int length)\" upon the same object, the return value of \"IRegion getPartition(int offset)\" may be aliased with the return value of \"ITypedRegion[] computePartitioning(int offset, int length)\".\n\nWhen the method \"String[] getPositionCategories()\" is invoked after the method \"void addPositionCategory(String category)\" or \"void removePositionCategory(String category)\" upon the same object, the return value of \"String[] getPositionCategories()\" may be aliased with the parameter of \"void addPositionCategory(String category)\" or \"void removePositionCategory(String category)\".\n\nWhen the method \"Position[] getPositions(String category)\" is invoked after the method \"void addPosition(Position position)\" or \"void addPosition(String category, Position position)\" or \"void removePosition(Position position)\" or \"void removePosition(String category, Position position)\" upon the same object, the return value of \"Position[] getPositions(String category)\" may be aliased with the parameter of \"void addPosition(Position position)\" or the second parameter of \"void addPosition(String category, Position position)\" or the parameter of \"void removePosition(Position position)\" or the second parameter of \"void removePosition(String category, Position position)\".\n\nWhen the method \"void removeDocumentListener(IDocumentListener listener)\" is invoked after the method \"void addDocumentListener(IDocumentListener listener)\" or \"void addPrenotifiedDocumentListener(IDocumentListener listener)\" upon the same object, the return value of \"List getDocumentListeners()\" may be aliased with the parameter of \"void removeDocumentListener(IDocumentListener listener)\".\n\nWhen the method \"void removeDocumentPartitioningListener(IDocumentPartitioningListener listener)\" is invoked after the method \"void addDocumentPartitioningListener(IDocumentPartitioningListener listener)\" upon the same object, the return value of \"List getDocumentPartitioningListeners()\" may be aliased with the parameter of \"void removeDocumentPartitioningListener(IDocumentPartitioningListener listener)\".\n\nWhen the method \"void removePosition(Position position)\" is invoked after the method \"void addPosition(Position position)\" upon the same object, the return value of \"Map getDocumentManagedPositions()\" may be aliased with the parameter of \"void removePosition(Position position)\".\n\nWhen the method \"void removePosition(String category, Position position)\" is invoked after the method \"void addPosition(String category, Position position)\" upon the same object, the return value of \"Map getDocumentManagedPositions()\" may be aliased with the second parameter of \"void removePosition(String category, Position position)\".\n\nWhen the method \"void setDocumentPartitioner(IDocumentPartitioner partitioner)\" is invoked after the method \"ITypedRegion[] computePartitioning(int offset, int length)\" upon the same object, the return value of \"void setDocumentPartitioner(IDocumentPartitioner partitioner)\" may be aliased with the return value of \"ITypedRegion[] computePartitioning(int offset, int length)\".\n\nWhen the method \"void setLineTracker(ILineTracker tracker)\" is invoked after the method \"int getLineDelimiter(int line)\" upon the same object, the return value of \"void setLineTracker",
    "org.eclipse.jface.text.AbstractDocument": "When the method \"void addPosition(Position position)\" is invoked after the method \"ITypedRegion[] computePartitioning(int offset, int length)\", the return value of \"computePartitioning(int offset, int length)\" may be aliased with the parameter of \"addPosition(Position position)\".\n\nWhen the method \"void addPosition(String category, Position position)\" is invoked after the method \"ITypedRegion[] computePartitioning(int offset, int length)\", the return value of \"computePartitioning(int offset, int length)\" may be aliased with the parameter of \"addPosition(String category, Position position)\".\n\nWhen the method \"void removePosition(Position position)\" is invoked after the method \"ITypedRegion[] computePartitioning(int offset, int length)\", the return value of \"computePartitioning(int offset, int length)\" may be aliased with the parameter of \"removePosition(Position position)\".\n\nWhen the method \"void removePosition(String category, Position position)\" is invoked after the method \"ITypedRegion[] computePartitioning(int offset, int length)\", the return value of \"computePartitioning(int offset, int length)\" may be aliased with the parameter of \"removePosition(String category, Position position)\".\n\nWhen the method \"void updateDocumentStructures(DocumentEvent event)\" is invoked after the method \"ITypedRegion[] computePartitioning(int offset, int length)\", the return value of \"computePartitioning(int offset, int length)\" may be aliased with the parameter of \"updateDocumentStructures(DocumentEvent event)\".\n\nWhen the method \"void addDocumentListener(IDocumentListener listener)\" is invoked after the method \"ITypedRegion[] computePartitioning(int offset, int length)\", the return value of \"computePartitioning(int offset, int length)\" may be aliased with the parameter of \"addDocumentListener(IDocumentListener listener)\".\n\nWhen the method \"void addDocumentPartitioningListener(IDocumentPartitioningListener listener)\" is invoked after the method \"ITypedRegion[] computePartitioning(int offset, int length)\", the return value of \"computePartitioning(int offset, int length)\" may be aliased with the parameter of \"addDocumentPartitioningListener(IDocumentPartitioningListener listener)\".\n\nWhen the method \"void completeInitialization()\" is invoked after the method \"ITypedRegion[] computePartitioning(int offset, int length)\", the return value of \"computePartitioning(int offset, int length)\" may be aliased with the parameter of \"completeInitialization()\".\n\nWhen the method \"void fireDocumentAboutToBeChanged(DocumentEvent event)\" is invoked after the method \"ITypedRegion[] computePartitioning(int offset, int length)\", the return value of \"computePartitioning(int offset, int length)\" may be aliased with the parameter of \"fireDocumentAboutToBeChanged(DocumentEvent event)\".\n\nWhen the method \"void fireDocumentChanged(DocumentEvent event)\" is invoked after the method \"ITypedRegion[] computePartitioning(int offset, int length)\", the return value of \"computePartitioning(int offset, int length)\" may be aliased with the parameter of \"fireDocumentChanged(DocumentEvent event)\".\n\nWhen the method \"void fireDocumentPartitioningChanged(IRegion region)\" is invoked after the method \"ITypedRegion[] computePartitioning(int offset, int length)\", the return value of \"computePartitioning(int offset, int length)\" may be aliased with the parameter of \"fireDocumentPartitioningChanged(IRegion region)\".\n\nWhen the method \"void removeDocumentListener(IDocumentListener listener)\" is invoked after the method \"ITypedRegion[] computePartitioning(int offset, int length)\", the return value of \"computePartitioning(int offset, int length)\" may be aliased with the parameter of \"removeDocumentListener(IDocumentListener listener)\".\n\nWhen the method \"void removeDocumentPartitioningListener(IDocumentPartitioningListener listener)\" is invoked after the method \"ITypedRegion[] computePartitioning(int offset, int length)\", the return value of \"computePartitioning(int offset, int length)\" may be aliased with the parameter of \"removeDocumentPartitioningListener(IDocumentPartitioningListener listener)\".\n\nWhen the method \"void updatePositions(DocumentEvent event)\" is invoked after the method \"ITypedRegion[] computePartitioning(int offset, int length)\", the return value of \"computePartitioning(int offset, int length)\" may be aliased with the parameter of \"updatePositions(DocumentEvent event)\".",
    "org.eclipse.swt.widgets.TableItem": "The aliasing specifications are:\n\n- The return value of \"Display getDisplay()\" may be aliased with the return value of \"Display getDisplay()\" if the same TableItem object is used.\n- The return value of \"Color getBackground()\" may be aliased with the parameter \"Color color\" of \"void setBackground(Color color)\" if the same TableItem object is used.\n- The return value of \"Rectangle getBounds(int index)\" may be aliased with the parameter \"Rectangle rect\" of \"void setBounds(int index, Rectangle rect)\" if the same TableItem object is used.\n- The return value of \"boolean getChecked()\" may be aliased with the parameter \"boolean checked\" of \"void setChecked(boolean checked)\" if the same TableItem object is used.\n- The return value of \"Color getForeground()\" may be aliased with the parameter \"Color color\" of \"void setForeground(Color color)\" if the same TableItem object is used.\n- The return value of \"boolean getGrayed()\" may be aliased with the parameter \"boolean grayed\" of \"void setGrayed(boolean grayed)\" if the same TableItem object is used.\n- The return value of \"Image getImage(int index)\" may be aliased with the parameter \"Image image\" of \"void setImage(int index, Image image)\" if the same TableItem object is used.\n- The return value of \"Rectangle getImageBounds(int index)\" may be aliased with the parameter \"Rectangle rect\" of \"void setImageBounds(int index, Rectangle rect)\" if the same TableItem object is used.\n- The return value of \"int getImageIndent()\" may be aliased with the parameter \"int indent\" of \"void setImageIndent(int indent)\" if the same TableItem object is used.\n- The return value of \"String getText(int index)\" may be aliased with the parameter \"String string\" of \"void setText(int index, String string)\" if the same TableItem object is used.\n- The return value of \"void setText(String string)\" may be aliased with the parameter \"String string\" of \"void setText(String string)\" if the same TableItem object is used.\n- The return value of \"void setTexts(String[] strings)\" may be aliased with the parameter \"String[] strings\" of \"void setTexts(String[] strings)\" if the same TableItem object is used.\n- The return value of \"void addListener(int eventType, Listener listener)\" may be aliased with the parameter \"Listener listener\" of \"void removeListener(int eventType, Listener listener)\" if the same TableItem object is used.\n- The return value of \"Object getData()\" may be aliased with the parameter \"Object data\" of \"void setData(Object data)\" if the same TableItem object is used.\n- The return value of \"Object getData(String key)\" may be aliased with the parameter \"Object value\" of \"void setData(String key, Object value)\" if the same TableItem object is used.\n- The return value of \"int getStyle()\" may be aliased with the parameter \"int style\" of \"TableItem(Table parent, int style)\" if the same TableItem object is used.\n- The return value of \"boolean isListening(int eventType)\" may be aliased with the parameter \"int eventType\" of \"void notifyListeners(int eventType, Event event)\" if the same TableItem object is used.\n- The return value of \"void removeDisposeListener(DisposeListener listener)\" may be aliased with the parameter \"DisposeListener listener\" of \"void removeDisposeListener(DisposeListener listener)\" if the same TableItem object is used.\n- The return value of \"void removeListener(int eventType, Listener listener)\" may be aliased with the parameter \"Listener listener\" of \"void addListener(int eventType, Listener listener)\" if the same TableItem object is used.\n- The return value of \"void removeListener(int eventType, org.eclipse.swt.internal.SWTEventListener listener)\" may be aliased with the parameter \"org.eclipse.swt.internal.SWTEventListener listener\" of \"void removeListener(int eventType, org.eclipse.swt.internal.SWTEventListener listener)\" if the same TableItem object is used.\n- The return value of \"String toString()\" may be aliased with the parameter \"String string\" of \"void setText(String string)\" if the same TableItem object is used.\n- The return value of \"Image getImage()\" may be aliased with the parameter \"Image image\" of \"void setImage(Image image)\" if the same TableItem object is used.\n- The return value of \"String getText()\" may be aliased with the parameter \"String string\" of \"void setText(String string)\" if the same TableItem object is used.",
    "org.eclipse.swt.widgets.Widget": "When the two methods have the same value of the first parameters, the second parameter of \"void addListener(int eventType, Listener listener)\" may be aliased with the second parameter of \"void removeListener(int eventType, Listener listener)\" if the method removeListener is invoked after the method addListener.\n\nThe return value of \"Object getData()\" may be aliased with the first parameter of \"void setData(Object data)\" if the method getData is invoked after the method setData.\n\nThe return value of \"Object getData(String key)\" may be aliased with the second parameter of \"void setData(String key, Object value)\" if the method getData is invoked after the method setData.\n\nThe return value of \"abstract Display getDisplay()\" may be aliased with the first parameter of \"void notifyListeners(int eventType, Event event)\" if the method getDisplay is invoked before the method notifyListeners.\n\nThe return value of \"int getStyle()\" may be aliased with the second parameter of \"void notifyListeners(int eventType, Event event)\" if the method getStyle is invoked before the method notifyListeners.\n\nThe return value of \"boolean isDisposed()\" may be aliased with the second parameter of \"void notifyListeners(int eventType, Event event)\" if the method isDisposed is invoked before the method notifyListeners.",
    "org.eclipse.swt.widgets.Item": "When the two methods have the same value of the first parameter, the return value of \"Image getImage()\" may be aliased with the first parameter of \"void setImage(Image image)\" if the method getImage is invoked after the method setImage.\n\nWhen the two methods have the same value of the first parameter, the return value of \"String getText()\" may be aliased with the second parameter of \"void setText(String string)\" if the method getText is invoked after the method setText.\n\nWhen the two methods have the same value of the first parameter, the return value of \"Object getData()\" may be aliased with the second parameter of \"void setData(Object data)\" if the method getData is invoked after the method setData.\n\nWhen the two methods have the same value of the first parameter, the return value of \"Object getData(String key)\" may be aliased with the second parameter of \"void setData(String key, Object value)\" if the method getData is invoked after the method setData.\n\nThe return value of \"abstract Display getDisplay()\" may be aliased with the k-th parameter of \"void addListener(int eventType, Listener listener)\" if the method getDisplay is invoked after the method addListener.\n\nThe return value of \"int getStyle()\" may be aliased with the k-th parameter of \"void addListener(int eventType, Listener listener)\" if the method getStyle is invoked after the method addListener.\n\nThe return value of \"boolean isDisposed()\" may be aliased with the k-th parameter of \"void addListener(int eventType, Listener listener)\" if the method isDisposed is invoked after the method addListener.\n\nThe return value of \"void notifyListeners(int eventType, Event event)\" may be aliased with the k-th parameter of \"void addListener(int eventType, Listener listener)\" if the method notifyListeners is invoked after the method addListener.\n\nThe return value of \"void removeDisposeListener(DisposeListener listener)\" may be aliased with the k-th parameter of \"void addListener(int eventType, Listener listener)\" if the method removeDisposeListener is invoked after the method addListener.\n\nThe return value of \"void removeListener(int eventType, Listener listener)\" may be aliased with the k-th parameter of \"void addListener(int eventType, Listener listener)\" if the method removeListener is invoked after the method addListener.\n\nThe return value of \"void removeListener(int eventType, org.eclipse.swt.internal.SWTEventListener listener)\" may be aliased with the k-th parameter of \"void addListener(int eventType, Listener listener)\" if the method removeListener is invoked after the method addListener.\n\nThe return value of \"String toString()\" may be aliased with the k-th parameter of \"void addListener(int eventType, Listener listener)\" if the method toString is invoked after the method addListener.",
    "org.ejml.data.DenseMatrix64F": "The aliasing specifications for the given Java class DenseMatrix64F are:\n\n- The return value of \"DenseMatrix64F copy()\" may be aliased with the k-th parameter of \"void set(ReshapeMatrix64F A)\" if the method copy is invoked after the method set.\n- The return value of \"double get(int row, int col)\" may be aliased with the k-th parameter of \"void set(int row, int col, double value)\" if the method get is invoked after the method set.\n- The return value of \"double get(int index)\" may be aliased with the k-th parameter of \"double set(int index, double val)\" if the method get is invoked after the method set.\n- The return value of \"double[] getData()\" may be aliased with the k-th parameter of \"void setData(double[] data)\" if the method getData is invoked after the method setData.\n- The return value of \"int getNumCols()\" may be aliased with the k-th parameter of \"void reshape(int numRows, int numCols)\" if the method getNumCols is invoked after the method reshape.\n- The return value of \"int getNumElements()\" may be aliased with the k-th parameter of \"void set(int numRows, int numCols, boolean rowMajor, double... data)\" if the method getNumElements is invoked after the method set.\n- The return value of \"int getNumRows()\" may be aliased with the k-th parameter of \"void reshape(int numRows, int numCols)\" if the method getNumRows is invoked after the method reshape.\n- The return value of \"double minus(int index, double val)\" may be aliased with the k-th parameter of \"double set(int index, double val)\" if the method minus is invoked after the method set.\n- The return value of \"double plus(int index, double val)\" may be aliased with the k-th parameter of \"double set(int index, double val)\" if the method plus is invoked after the method set.\n- The return value of \"double times(int index, double val)\" may be aliased with the k-th parameter of \"double set(int index, double val)\" if the method times is invoked after the method set.\n- The return value of \"double div(int index, double val)\" may be aliased with the k-th parameter of \"double set(int index, double val)\" if the method div is invoked after the method set.\n- The return value of \"MatrixIterator iterator(boolean rowMajor, int minRow, int minCol, int maxRow, int maxCol)\" may be aliased with the k-th parameter of \"void set(int numRows, int numCols, boolean rowMajor, double... data)\" if the method iterator is invoked after the method set.\n- The return value of \"String toString()\" may be aliased with the k-th parameter of \"void print(String format)\" if the method toString is invoked after the method print.\n- The return value of \"void print(String format)\" may be aliased with the k-th parameter of \"void print(String format)\" if the method print is invoked after the method print.\n- The return value of \"double unsafe_get(int row, int col)\" may be aliased with the k-th parameter of \"void unsafe_set(int row, int col, double value)\" if the method unsafe_get is invoked after the method unsafe_set.\n- The return value of \"void add(int row, int col, double value)\" may be aliased with the k-th parameter of \"void set(int row, int col, double value)\" if the method add is invoked after the method set.\n- The return value of \"void reshape(int numRows, int numCols, boolean saveValues)\" may be aliased with the k-th parameter of \"void set(int numRows, int numCols, boolean rowMajor, double... data)\" if the method reshape is invoked after the method set.\n- The return value of \"void set(D1Matrix64F b)\" may be aliased with the k-th parameter of \"void setReshape(DenseMatrix64F b)\" if the method set is invoked after the method setReshape.\n- The return value of \"void set(int numRows, int numCols, boolean rowMajor, double... data)\" may be aliased with the k-th parameter of \"void setReshape(DenseMatrix64F b)\" if the method set is invoked after the method setReshape.\n- The return value of \"void set(int row, int col, double value)\" may be aliased with the k-th parameter of \"double div(int index, double val)\" if the method set is invoked after the method div.\n- The return value of \"void set(int row, int col, double value)\" may be aliased with the k-th parameter of \"double minus(int index, double val)\" if the method set is invoked after the method minus.\n- The return value of \"void set(int row, int col, double value)\" may be aliased with the k-th parameter of \"double plus(int index, double val)\" if the method set is invoked after the method plus.\n- The return value of \"void set(int row, int col, double value)\" may be aliased with the k-th parameter of \"double times(int index, double val)\" if the method set is invoked after the method times.\n- The return value of \"void setNumCols(int numCols)\" may be aliased with the k-th parameter of \"void reshape(int numRows, int numCols)\" if the method setNumCols is invoked after the method reshape.\n- The return value of \"void setNumRows(int numRows)\" may be aliased with the k-th parameter of \"void reshape(int numRows, int numCols)\" if the method setNumRows is invoked after the method reshape.\n- The return value of \"void setReshape(DenseMatrix64F b)\" may be aliased with the k-th parameter of \"void setReshape(DenseMatrix64F b)\" if the method setReshape is invoked after the method setReshape.\n- The return value of \"void setData(double[] data)\" may be aliased with the k-th parameter of \"double[] getData()\" if the method setData is invoked after the method getData.\n- The return value of \"void unsafe_set(int row, int col, double value)\" may be aliased with the k-th parameter of \"double div(int index, double val)\" if the method unsafe_set is invoked after the method div.\n- The return value of \"void unsafe_set(int row, int col, double value)\" may be aliased with the k-th parameter of \"double minus(int index, double val)\" if the method unsafe_set is invoked after the method minus.\n- The return value of \"void unsafe_set(int row, int col, double value)\" may be aliased with the k-th parameter of \"double plus(int index, double val)\" if the method unsafe_set is invoked after the method plus.\n- The return value of \"void unsafe_set(int row, int col, double value)\" may be aliased with the k-th parameter of \"double times(int index, double val)\" if the method unsafe_set is invoked after the method times.",
    "org.ejml.data.RowD1Matrix64F": "When the method \"void set(ReshapeMatrix64F A)\" is invoked after the method \"MatrixIterator iterator(boolean rowMajor, int minRow, int minCol, int maxRow, int maxCol)\", the return value of \"MatrixIterator iterator(boolean rowMajor, int minRow, int minCol, int maxRow, int maxCol)\" may be aliased with the parameter of \"void set(ReshapeMatrix64F A)\".\n\nWhen the method \"void set(D1Matrix64F b)\" is invoked after the method \"MatrixIterator iterator(boolean rowMajor, int minRow, int minCol, int maxRow, int maxCol)\", the return value of \"MatrixIterator iterator(boolean rowMajor, int minRow, int minCol, int maxRow, int maxCol)\" may be aliased with the parameter of \"void set(D1Matrix64F b)\".\n\nWhen the method \"double set(int index, double val)\" is invoked after the method \"double plus(int index, double val)\", the return value of \"double plus(int index, double val)\" may be aliased with the parameter of \"double set(int index, double val)\".\n\nWhen the method \"double set(int index, double val)\" is invoked after the method \"double minus(int index, double val)\", the return value of \"double minus(int index, double val)\" may be aliased with the parameter of \"double set(int index, double val)\".\n\nWhen the method \"double set(int index, double val)\" is invoked after the method \"double times(int index, double val)\", the return value of \"double times(int index, double val)\" may be aliased with the parameter of \"double set(int index, double val)\".\n\nWhen the method \"double set(int index, double val)\" is invoked after the method \"double div(int index, double val)\", the return value of \"double div(int index, double val)\" may be aliased with the parameter of \"double set(int index, double val)\".",
    "org.ejml.data.D1Matrix64F": "The aliasing specifications for the given Java class D1Matrix64F are:\n\n- When the method div is invoked after the method plus or minus upon the same object, the return value of the method div may be aliased with the first parameter of the method plus or minus.\n- When the method get is invoked after the method plus, minus, times or div upon the same object, the return value of the method get may be aliased with the first parameter of the method plus, minus, times or div.\n- When the method getData is invoked after the method setData upon the same object, the return value of the method getData may be aliased with the parameter of the method setData.\n- When the method getIndex is invoked after the method getNumCols and getNumRows upon the same object, the return value of the method getIndex may be aliased with the parameters of the method getNumCols and getNumRows.\n- When the method minus is invoked after the method plus or times upon the same object, the return value of the method minus may be aliased with the first parameter of the method plus or times.\n- When the method plus is invoked after the method minus or times or div upon the same object, the return value of the method plus may be aliased with the first parameter of the method minus, times or div.\n- When the method set is invoked after the method getNumCols and getNumRows upon the same object, the return value of the method getNumCols and getNumRows may be aliased with the parameters of the method set.\n- When the method set is invoked after the method get upon the same object, the return value of the method get may be aliased with the parameter of the method set.\n- When the method setData is invoked after the method getData upon the same object, the parameter of the method setData may be aliased with the return value of the method getData.\n- When the method times is invoked after the method plus or minus upon the same object, the return value of the method times may be aliased with the first parameter of the method plus or minus.\n- When the method iterator is invoked after the method getNumRows and getNumCols upon the same object, the parameters of the method getNumRows and getNumCols may be aliased with the parameters of the method iterator.\n- When the method reshape is invoked after the method setNumRows and setNumCols upon the same object, the parameters of the method setNumRows and setNumCols may be aliased with the parameters of the method reshape.\n- When the method set is invoked after the method setNumCols and setNumRows upon the same object, the parameters of the method setNumCols and setNumRows may be aliased with the parameters of the method set.",
    "org.ejml.data.ReshapeMatrix64F": "When the method \"MatrixIterator iterator(boolean rowMajor, int minRow, int minCol, int maxRow, int maxCol)\" is invoked after the method \"void reshape(int numRows, int numCols)\", the return value of \"MatrixIterator iterator(boolean rowMajor, int minRow, int minCol, int maxRow, int maxCol)\" may be aliased with the 1st parameter of \"void reshape(int numRows, int numCols)\".\n\nWhen the method \"void set(ReshapeMatrix64F A)\" is invoked after the method \"void reshape(int numRows, int numCols)\", the return value of \"void get(ReshapeMatrix64F A)\" may be aliased with the 1st parameter of \"void set(ReshapeMatrix64F A)\".\n\nWhen the method \"void setNumCols(int numCols)\" is invoked after the method \"void reshape(int numRows, int numCols)\", the return value of \"int getNumCols()\" may be aliased with the 1st parameter of \"void setNumCols(int numCols)\".\n\nWhen the method \"void setNumRows(int numRows)\" is invoked after the method \"void reshape(int numRows, int numCols)\", the return value of \"int getNumRows()\" may be aliased with the 1st parameter of \"void setNumRows(int numRows)\".",
    "org.json.JSONArray": "When the two methods have the same value of the first parameter, the return value of \"Object get(int index)\" may be aliased with the second parameter of \"JSONArray put(int index, Object value)\" if the method get is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"boolean getBoolean(int index)\" may be aliased with the second parameter of \"JSONArray put(int index, boolean value)\" if the method getBoolean is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"double getDouble(int index)\" may be aliased with the second parameter of \"JSONArray put(int index, double value)\" if the method getDouble is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"int getInt(int index)\" may be aliased with the second parameter of \"JSONArray put(int index, int value)\" if the method getInt is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"JSONArray getJSONArray(int index)\" may be aliased with the second parameter of \"JSONArray put(int index, JSONArray value)\" if the method getJSONArray is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"JSONObject getJSONObject(int index)\" may be aliased with the second parameter of \"JSONArray put(int index, JSONObject value)\" if the method getJSONObject is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"long getLong(int index)\" may be aliased with the second parameter of \"JSONArray put(int index, long value)\" if the method getLong is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"String getString(int index)\" may be aliased with the second parameter of \"JSONArray put(int index, String value)\" if the method getString is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"Object opt(int index)\" may be aliased with the second parameter of \"JSONArray put(int index, Object value)\" if the method opt is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"boolean optBoolean(int index)\" may be aliased with the second parameter of \"JSONArray put(int index, boolean value)\" if the method optBoolean is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"boolean optBoolean(int index, boolean fallback)\" may be aliased with the second parameter of \"JSONArray put(int index, boolean value)\" if the method optBoolean is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"double optDouble(int index)\" may be aliased with the second parameter of \"JSONArray put(int index, double value)\" if the method optDouble is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"double optDouble(int index, double fallback)\" may be aliased with the second parameter of \"JSONArray put(int index, double value)\" if the method optDouble is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"int optInt(int index)\" may be aliased with the second parameter of \"JSONArray put(int index, int value)\" if the method optInt is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"int optInt(int index, int fallback)\" may be aliased with the second parameter of \"JSONArray put(int index, int value)\" if the method optInt is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"JSONArray optJSONArray(int index)\" may be aliased with the second parameter of \"JSONArray put(int index, JSONArray value)\" if the method optJSONArray is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"JSONObject optJSONObject(int index)\" may be aliased with the second parameter of \"JSONArray put(int index, JSONObject value)\" if the method optJSONObject is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"long optLong(int index)\" may be aliased with the second parameter of \"JSONArray put(int index, long value)\" if the method optLong is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"long optLong(int index, long fallback)\" may be aliased with the second parameter of \"JSONArray put(int index, long value)\" if the method optLong is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"String optString(int index)\" may be aliased with the second parameter of \"JSONArray put(int index, String value)\" if the method optString is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"String optString(int index, String fallback)\" may be aliased with the second parameter of \"JSONArray put(int index, String value)\" if the method optString is invoked after the method put.\n\nWhen the two methods have the same value of the first parameter, the return value of \"Object remove(int index)\" may be aliased with the second parameter of \"JSONArray put(int index, Object value)\" if the method remove is invoked after the method put.",
    "org.json.JSONObject": "When we invoke the method get after the method accumulate upon the same object, the return value of the method get may be aliased with the second parameter of the method accumulate if the two methods have the same value of the first parameter.\n\nWhen we invoke the method getBoolean after the method accumulate upon the same object, the return value of the method getBoolean may be aliased with the second parameter of the method accumulate if the two methods have the same value of the first parameter.\n\nWhen we invoke the method getDouble after the method accumulate upon the same object, the return value of the method getDouble may be aliased with the second parameter of the method accumulate if the two methods have the same value of the first parameter.\n\nWhen we invoke the method getInt after the method accumulate upon the same object, the return value of the method getInt may be aliased with the second parameter of the method accumulate if the two methods have the same value of the first parameter.\n\nWhen we invoke the method getJSONArray after the method accumulate upon the same object, the return value of the method getJSONArray may be aliased with the second parameter of the method accumulate if the two methods have the same value of the first parameter.\n\nWhen we invoke the method getJSONObject after the method accumulate upon the same object, the return value of the method getJSONObject may be aliased with the second parameter of the method accumulate if the two methods have the same value of the first parameter.\n\nWhen we invoke the method getLong after the method accumulate upon the same object, the return value of the method getLong may be aliased with the second parameter of the method accumulate if the two methods have the same value of the first parameter.\n\nWhen we invoke the method getString after the method accumulate upon the same object, the return value of the method getString may be aliased with the second parameter of the method accumulate if the two methods have the same value of the first parameter.\n\nWhen we invoke the method opt after the method accumulate upon the same object, the return value of the method opt may be aliased with the second parameter of the method accumulate if the two methods have the same value of the first parameter.\n\nWhen we invoke the method optBoolean after the method accumulate upon the same object, the return value of the method optBoolean may be aliased with the second parameter of the method accumulate if the two methods have the same value of the first parameter.\n\nWhen we invoke the method optDouble after the method accumulate upon the same object, the return value of the method optDouble may be aliased with the second parameter of the method accumulate if the two methods have the same value of the first parameter.\n\nWhen we invoke the method optInt after the method accumulate upon the same object, the return value of the method optInt may be aliased with the second parameter of the method accumulate if the two methods have the same value of the first parameter.\n\nWhen we invoke the method optJSONArray after the method accumulate upon the same object, the return value of the method optJSONArray may be aliased with the second parameter of the method accumulate if the two methods have the same value of the first parameter.\n\nWhen we invoke the method optJSONObject after the method accumulate upon the same object, the return value of the method optJSONObject may be aliased with the second parameter of the method accumulate if the two methods have the same value of the first parameter.\n\nWhen we invoke the method optLong after the method accumulate upon the same object, the return value of the method optLong may be aliased with the second parameter of the method accumulate if the two methods have the same value of the first parameter.\n\nWhen we invoke the method optString after the method accumulate upon the same object, the return value of the method optString may be aliased with the second parameter of the method accumulate if the two methods have the same value of the first parameter.\n\nWhen we invoke the method put after the method accumulate upon the same object, the return value of the method put may be aliased with the second parameter of the method accumulate if the two methods have the same value of the first parameter.\n\nWhen we invoke the method putOpt after the method accumulate upon the same object, the return value of the method putOpt may be aliased with the second parameter of the method accumulate if the two methods have the same value of the first parameter.\n\nWhen we invoke the method remove after the method accumulate upon the same object, the return value of the method remove may be aliased with the second parameter of the method accumulate if the two methods have the same value of the first parameter.\n\nWhen we invoke the method toJSONArray after the method accumulate upon the same object, the return value of the method toJSONArray may be aliased with the second parameter of the method accumulate if the two methods have the same value of the first parameter.\n\nWhen we invoke the method toString after the method accumulate upon the same object, the return value of the method toString may be aliased with the second parameter of the method accumulate if the two methods have the same value of the first parameter.\n\nWhen we invoke the method toString(int indentSpaces) after the method accumulate upon the same object, the return value of the method toString(int indentSpaces) may be aliased with the second parameter of the method accumulate if the two methods have the same value of the first parameter.\n\nWhen we invoke the method wrap after the method accumulate upon the same object, the return value of the method wrap may be aliased with the second parameter of the method accumulate if the two methods have the same value of the first parameter.",
    "org.json.simple.JSONObject": "When the two methods have the same value of the first parameter, the return value of \"java.lang.String toJSONString()\" may be aliased with the first parameter of \"void writeJSONString(java.util.Map map, java.io.Writer out)\" if the method toJSONString is invoked after the method writeJSONString.\n\nWhen the two methods have the same value of the first parameter, the return value of \"java.lang.String toString()\" may be aliased with the first parameter of \"java.lang.String toString(java.lang.String key, java.lang.Object value)\" if the method toString is invoked after the method toString.\n\nWhen the two methods have the same value of the first parameter, the return value of \"void writeJSONString(java.util.Map map, java.io.Writer out)\" may be aliased with the first parameter of \"java.lang.String toJSONString(java.util.Map map)\" if the method writeJSONString is invoked after the method toJSONString.\n\nThe return value of \"void writeJSONString(java.io.Writer out)\" may be aliased with the first parameter of \"java.lang.String toJSONString()\" if the method writeJSONString is invoked after the method toJSONString.\n\nWhen the two methods have the same value of the first parameter, the return value of \"java.lang.String toString(java.lang.String key, java.lang.Object value)\" may be aliased with the second parameter of \"java.lang.String escape(java.lang.String s)\" if the method toString is invoked after the method escape.\n\nWhen the two methods have the same value of the first parameter, the return value of \"java.lang.String escape(java.lang.String s)\" may be aliased with the second parameter of \"java.lang.String toString(java.lang.String key, java.lang.Object value)\" if the method escape is invoked after the method toString.\n\nThe return value of \"void writeJSONString(java.util.Map map, java.io.Writer out)\" may be aliased with the k-th parameter of \"V compute(K key, BiFunction remappingFunction)\" if the i-th parameter of compute is aliased with the j-th parameter of writeJSONString for each 1 <= i <= 2.\n\nThe return value of \"void writeJSONString(java.util.Map map, java.io.Writer out)\" may be aliased with the k-th parameter of \"V computeIfAbsent(K key, Function mappingFunction)\" if the i-th parameter of computeIfAbsent is aliased with the j-th parameter of writeJSONString for each 1 <= i <= 2.\n\nThe return value of \"void writeJSONString(java.util.Map map, java.io.Writer out)\" may be aliased with the k-th parameter of \"V computeIfPresent(K key, BiFunction remappingFunction)\" if the i-th parameter of computeIfPresent is aliased with the j-th parameter of writeJSONString for each 1 <= i <= 2.\n\nThe return value of \"void writeJSONString(java.util.Map map, java.io.Writer out)\" may be aliased with the k-th parameter of \"V merge(K key, V value, BiFunction remappingFunction)\" if the i-th parameter of merge is aliased with the j-th parameter of writeJSONString for each 1 <= i <= 2.\n\nThe return value of \"V get(Object key)\" may be aliased with the first parameter of \"void writeJSONString(java.util.Map map, java.io.Writer out)\" if the method get is invoked after the method writeJSONString.\n\nThe return value of \"V getOrDefault(Object key, V defaultValue)\" may be aliased with the first parameter of \"void writeJSONString(java.util.Map map, java.io.Writer out)\" if the method getOrDefault is invoked after the method writeJSONString.\n\nThe return value of \"V put(K key, V value)\" may be aliased with the first parameter of \"void writeJSONString(java.util.Map map, java.io.Writer out)\" if the method put is invoked after the method writeJSONString.\n\nThe return value of \"void putAll(Map m)\" may be aliased with the first parameter of \"void writeJSONString(java.util.Map map, java.io.Writer out)\" if the method putAll is invoked after the method writeJSONString.\n\nThe return value of \"V putIfAbsent(K key, V value)\" may be aliased with the first parameter of \"void writeJSONString(java.util.Map map, java.io.Writer out)\" if the method putIfAbsent is invoked after the method writeJSONString.\n\nThe return value of \"V remove(Object key)\" may be aliased with the first parameter of \"void writeJSONString(java.util.Map map, java.io.Writer out)\" if the method remove is invoked after the method writeJSONString.\n\nThe return value of \"boolean remove(Object key, Object value)\" may be aliased with the first parameter of \"void writeJSONString(java.util.Map map, java.io.Writer out)\" if the method remove is invoked after the method writeJSONString.\n\nThe return value of \"V replace(K key, V value)\" may be aliased with the first parameter of \"void writeJSONString(java.util.Map map, java.io.Writer out)\" if the method replace is invoked after the method writeJSONString.\n\nThe return value of \"boolean replace(K key, V oldValue, V newValue)\" may be aliased with the first parameter of \"void writeJSONString(java.util.Map map, java.io.Writer out)\" if the method replace is invoked after the method writeJSONString.\n\nThe return value of \"void replaceAll(BiFunction function)\" may be aliased with the first parameter of \"void writeJSONString(java.util.Map map, java.io.Writer out)\" if the method replaceAll is invoked after the method writeJSONString.\n\nThe return value of \"Collection values()\" may be aliased with the first parameter of \"void writeJSONString(java.util.Map map, java.io.Writer out)\" if the method values is invoked after the method writeJSONString.",
    "org.mvel2.templates.TemplateRegistry": "When the method getNamedTemplate is invoked after the method addNamedTemplate upon the same object, the return value of getNamedTemplate may be aliased with the second parameter of addNamedTemplate.\n\nWhen the method getNamedTemplate is invoked after the method addNamedTemplate upon the same object, the return value of getNamedTemplate may be aliased with the first parameter of contains.\n\nWhen the method getNamedTemplate is invoked after the method addNamedTemplate upon the same object, the return value of getNamedTemplate may be aliased with the first parameter of iterator.\n\nWhen the method iterator is invoked after the method addNamedTemplate upon the same object, the returned iterator may iterate over the named templates in the registry that are aliased with the second parameter of addNamedTemplate.\n\nWhen the method iterator is invoked after the method getNamedTemplate upon the same object, the returned iterator may iterate over the named template in the registry that is aliased with the first parameter of getNamedTemplate.",
    "org.ofbiz.base.util.UtilMisc": "When the method \"java.math.BigDecimal addToBigDecimalInMap(java.util.Map theMap, K mapKey, java.math.BigDecimal addNumber)\" is invoked after the method \"void addToSetInMap(V element, java.util.Map theMap, K setKey)\", the return value of the former may be aliased with the third parameter of the latter. \n\nWhen the method \"void addToDoubleInMap(java.util.Map theMap, K key, java.lang.Double value)\" is invoked after the method \"void addToSetInMap(V element, java.util.Map theMap, K setKey)\", the second parameter of the former may be aliased with the third parameter of the latter.\n\nWhen the method \"void addToListInMap(V element, java.util.Map theMap, K listKey)\" is invoked after the method \"void addToSetInMap(V element, java.util.Map theMap, K setKey)\", the second parameter of the former may be aliased with the third parameter of the latter.\n\nWhen the method \"void addToSortedSetInMap(V element, java.util.Map theMap, K setKey)\" is invoked after the method \"void addToSetInMap(V element, java.util.Map theMap, K setKey)\", the second parameter of the former may be aliased with the third parameter of the latter.\n\nWhen the method \"java.util.List getListFromMap(java.util.Map outerMap, K key)\" is invoked after the method \"void addToListInMap(V element, java.util.Map theMap, K listKey)\", the return value of the former may be aliased with the second parameter of the latter.\n\nWhen the method \"java.util.Map getMapFromMap(java.util.Map outerMap, K key)\" is invoked after the method \"void addToListInMap(V element, java.util.Map theMap, K listKey)\", the return value of the former may be aliased with the second parameter of the latter.\n\nWhen the method \"java.util.List sortMaps(java.util.List listOfMaps, java.util.List sortKeys)\" is invoked after the method \"java.util.List makeListWritable(java.util.Collection col)\", the first parameter of the former may be aliased with the return value of the latter.\n\nWhen the method \"java.util.Map splitPhoneNumber(java.lang.String phoneNumber, Delegator delegator)\" is invoked after the method \"java.util.List makeListWritable(java.util.Collection col)\", the return value of the former may be aliased with the parameter of the latter.",
    "org.ofbiz.entity.GenericValue": "When invoking the method \"GenericValue create(Delegator delegator, ModelEntity modelEntity, java.lang.Object singlePkValue)\" after \"java.lang.Object clone()\", the return value of \"GenericValue create(Delegator delegator, ModelEntity modelEntity, java.lang.Object singlePkValue)\" may be aliased with the third parameter of \"java.lang.Object clone()\".\n\nWhen invoking the method \"GenericValue create(Delegator delegator, ModelEntity modelEntity, java.util.Map fields)\" after \"java.lang.Object clone()\", the return value of \"GenericValue create(Delegator delegator, ModelEntity modelEntity, java.util.Map fields)\" may be aliased with the third parameter of \"java.lang.Object clone()\".\n\nWhen invoking the method \"GenericValue create(GenericPK primaryKey)\" after \"java.lang.Object clone()\", the return value of \"GenericValue create(GenericPK primaryKey)\" may be aliased with the third parameter of \"java.lang.Object clone()\".\n\nWhen invoking the method \"GenericValue create(GenericValue value)\" after \"java.lang.Object clone()\", the return value of \"GenericValue create(GenericValue value)\" may be aliased with the third parameter of \"java.lang.Object clone()\".\n\nWhen invoking the method \"GenericValue create(ModelEntity modelEntity)\" after \"java.lang.Object clone()\", the return value of \"GenericValue create(ModelEntity modelEntity)\" may be aliased with the third parameter of \"java.lang.Object clone()\".\n\nWhen invoking the method \"void refresh()\" after \"GenericValue create(Delegator delegator, ModelEntity modelEntity, java.lang.Object singlePkValue)\", the return value of \"void refresh()\" may be aliased with the third parameter of \"GenericValue create(Delegator delegator, ModelEntity modelEntity, java.lang.Object singlePkValue)\".\n\nWhen invoking the method \"void refresh()\" after \"GenericValue create(Delegator delegator, ModelEntity modelEntity, java.util.Map fields)\", the return value of \"void refresh()\" may be aliased with the third parameter of \"GenericValue create(Delegator delegator, ModelEntity modelEntity, java.util.Map fields)\".\n\nWhen invoking the method \"void refresh()\" after \"GenericValue create(GenericPK primaryKey)\", the return value of \"void refresh()\" may be aliased with the third parameter of \"GenericValue create(GenericPK primaryKey)\".\n\nWhen invoking the method \"void refresh()\" after \"GenericValue create(GenericValue value)\", the return value of \"void refresh()\" may be aliased with the third parameter of \"GenericValue create(GenericValue value)\".\n\nWhen invoking the method \"void refresh()\" after \"GenericValue create(ModelEntity modelEntity)\", the return value of \"void refresh()\" may be aliased with the third parameter of \"GenericValue create(ModelEntity modelEntity)\".\n\nWhen invoking the method \"void store()\" after \"GenericValue create(Delegator delegator, ModelEntity modelEntity, java.lang.Object singlePkValue)\", the return value of \"void store()\" may be aliased with the third parameter of \"GenericValue create(Delegator delegator, ModelEntity modelEntity, java.lang.Object singlePkValue)\".\n\nWhen invoking the method \"void store()\" after \"GenericValue create(Delegator delegator, ModelEntity modelEntity, java.util.Map fields)\", the return value of \"void store()\" may be aliased with the third parameter of \"GenericValue create(Delegator delegator, ModelEntity modelEntity, java.util.Map fields)\".\n\nWhen invoking the method \"void store()\" after \"GenericValue create(GenericPK primaryKey)\", the return value of \"void store()\" may be aliased with the third parameter of \"GenericValue create(GenericPK primaryKey)\".\n\nWhen invoking the method \"void store()\" after \"GenericValue create(GenericValue value)\", the return value of \"void store()\" may be aliased with the third parameter of \"GenericValue create(GenericValue value)\".\n\nWhen invoking the method \"void store()\" after \"GenericValue create(ModelEntity modelEntity)\", the return value of \"void store()\" may be aliased with the third parameter of \"GenericValue create(ModelEntity modelEntity)\".",
    "org.apache.ofbiz.entity.GenericEntity": "The aliasing specifications for the given Java class are:\n\n- The return value of \"GenericEntity createGenericEntity(GenericEntity value)\" may be aliased with the first parameter of \"GenericEntity createGenericEntity(Delegator delegator, ModelEntity modelEntity, Map fields)\" if the method createGenericEntity is invoked after the method createGenericEntity.\n- The return value of \"GenericEntity createGenericEntity(ModelEntity modelEntity)\" may be aliased with the first parameter of \"GenericEntity createGenericEntity(Delegator delegator, ModelEntity modelEntity, Map fields)\" if the method createGenericEntity is invoked after the method createGenericEntity.\n- The return value of \"Object get(Object key)\" may be aliased with the first parameter of \"void set(String name, Object value)\" if the method get is invoked after the method set.\n- The return value of \"Object get(String name)\" may be aliased with the first parameter of \"void set(String name, Object value)\" if the method get is invoked after the method set.\n- The return value of \"void set(String name, Object value)\" may be aliased with the first parameter of \"Object get(Object key)\" if the method set is invoked after the method get.\n- The return value of \"void set(String name, Object value)\" may be aliased with the first parameter of \"Object get(String name)\" if the method set is invoked after the method get.\n- The return value of \"void setAllFields(Map fields, boolean setIfEmpty, String namePrefix, Boolean pks)\" may be aliased with the first parameter of \"GenericEntity createGenericEntity(Delegator delegator, ModelEntity modelEntity, Map fields)\" if the method setAllFields is invoked after the method createGenericEntity.\n- The return value of \"void setBytes(String name, byte[] bytes)\" may be aliased with the first parameter of \"void set(String name, Object value)\" if the method setBytes is invoked after the method set.\n- The return value of \"void setDelegator(Delegator internalDelegator)\" may be aliased with the first parameter of \"Delegator getDelegator()\" if the method setDelegator is invoked after the method getDelegator.\n- The return value of \"void setFields(Map keyValuePairs)\" may be aliased with the first parameter of \"GenericEntity createGenericEntity(Delegator delegator, ModelEntity modelEntity, Map fields)\" if the method setFields is invoked after the method createGenericEntity.\n- The return value of \"void setNonPKFields(Map fields)\" may be aliased with the first parameter of \"GenericEntity createGenericEntity(Delegator delegator, ModelEntity modelEntity, Map fields)\" if the method setNonPKFields is invoked after the method createGenericEntity.\n- The return value of \"void setNonPKFields(Map fields, boolean setIfEmpty)\" may be aliased with the first parameter of \"GenericEntity createGenericEntity(Delegator delegator, ModelEntity modelEntity, Map fields)\" if the method setNonPKFields is invoked after the method createGenericEntity.\n- The return value of \"void setPKFields(Map fields)\" may be aliased with the first parameter of \"GenericEntity createGenericEntity(Delegator delegator, ModelEntity modelEntity, Map fields)\" if the method setPKFields is invoked after the method createGenericEntity.\n- The return value of \"void setPKFields(Map fields, boolean setIfEmpty)\" may be aliased with the first parameter of \"GenericEntity createGenericEntity(Delegator delegator, ModelEntity modelEntity, Map fields)\" if the method setPKFields is invoked after the method createGenericEntity.",
    "org.ofbiz.service.ServiceUtil": "The aliasing specifications for the given methods are:\n\n- When the method \"void addErrors(java.util.List targetList, java.util.Map targetMap, java.util.Map callResult)\" is invoked before the method \"void getMessages(HttpServletRequest request, java.util.Map result, java.lang.String defaultMessage)\" upon the same object and with the same \"java.util.Map callResult\" parameter, the return value of \"void getMessages(HttpServletRequest request, java.util.Map result, java.lang.String defaultMessage)\" may be aliased with the second parameter \"java.util.Map targetMap\" of \"void addErrors(java.util.List targetList, java.util.Map targetMap, java.util.Map callResult)\".\n- The return value of method \"java.util.Map cancelJob(DispatchContext dctx, java.util.Map context)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"java.util.Map cancelJobRetries(DispatchContext dctx, java.util.Map context)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"java.util.Map genericDateCondition(DispatchContext dctx, java.util.Map context)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"java.lang.String getErrorMessage(java.util.Map result)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"void getMessages(HttpServletRequest request, java.util.Map result, java.lang.String defaultMessage)\" may be aliased with the second to ninth parameters of \"void getMessages(HttpServletRequest request, java.util.Map result, java.lang.String defaultMessage, java.lang.String msgPrefix, java.lang.String msgSuffix, java.lang.String errorPrefix, java.lang.String errorSuffix, java.lang.String successPrefix, java.lang.String successSuffix)\" if the latter method is invoked upon the same object and with the same \"HttpServletRequest request\" and \"java.util.Map result\" parameters as the former method.\n- The return value of method \"java.lang.String getPartyIdCheckSecurity(GenericValue userLogin, Security security, java.util.Map context, java.util.Map result, java.lang.String secEntity, java.lang.String secOperation)\" may be aliased with the fifth parameter \"java.lang.String secEntity\" of method \"java.lang.String getPartyIdCheckSecurity(GenericValue userLogin, Security security, java.util.Map context, java.util.Map result, java.lang.String secEntity, java.lang.String secOperation, java.lang.String adminSecEntity, java.lang.String adminSecOperation)\" if the latter method is invoked upon the same object and with the same \"GenericValue userLogin\", \"Security security\", \"java.util.Map context\", and \"java.util.Map result\" parameters as the former method.\n- The return value of method \"java.lang.String getPartyIdCheckSecurity(GenericValue userLogin, Security security, java.util.Map context, java.util.Map result, java.lang.String secEntity, java.lang.String secOperation, java.lang.String adminSecEntity, java.lang.String adminSecOperation)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"java.lang.String getResource()\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"GenericValue getUserLogin(DispatchContext dctx, java.util.Map context, java.lang.String runAsUser)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"boolean isError(java.util.Map results)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"boolean isFailure(java.util.Map results)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"boolean isSuccess(java.util.Map results)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"java.util.Map makeContext(T... args)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"java.lang.String makeErrorMessage(java.util.Map result, java.lang.String msgPrefix, java.lang.String msgSuffix, java.lang.String errorPrefix, java.lang.String errorSuffix)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"java.lang.String makeMessageList(java.util.List msgList, java.lang.String msgPrefix, java.lang.String msgSuffix)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"java.lang.String makeSuccessMessage(java.util.Map result, java.lang.String msgPrefix, java.lang.String msgSuffix, java.lang.String successPrefix, java.lang.String successSuffix)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"java.util.Map purgeOldJobs(DispatchContext dctx, java.util.Map context)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"java.util.Map resetJob(DispatchContext dctx, java.util.Map context)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"java.util.Map returnError(java.lang.String errorMessage)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"java.util.Map returnError(java.lang.String errorMessage, java.util.List errorMessageList)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"java.util.Map returnError(java.lang.String errorMessage, java.util.List errorMessageList, java.util.Map errorMessageMap, java.util.Map nestedResult)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"java.util.Map returnError(java.util.List errorMessageList)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"java.util.Map returnFailure()\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"java.util.Map returnFailure(java.lang.String errorMessage)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"java.util.Map returnFailure(java.util.List errorMessageList)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"java.util.Map returnMessage(java.lang.String code, java.lang.String message)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"java.util.Map returnProblem(java.lang.String returnType, java.lang.String errorMessage, java.util.List errorMessageList, java.util.Map errorMessageMap, java.util.Map nestedResult)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"java.util.Map returnSuccess()\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"java.util.Map returnSuccess(java.lang.String successMessage)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"java.util.Map returnSuccess(java.util.List successMessageList)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"void setMessages(HttpServletRequest request, java.lang.String errorMessage, java.lang.String eventMessage, java.lang.String defaultMessage)\" is not aliased with any parameter of any other method in the class.\n- The return value of method \"java.util.Map setServiceFields(LocalDispatcher dispatcher, java.lang.String serviceName, java.util.Map fromMap, GenericValue userLogin, java.util.TimeZone timeZone, java.util.Locale locale)\" is not aliased with any parameter of any other method in the class.",
    "org.sax.InputSource": "When the method getByteStream is invoked after the method setByteStream upon the same object, the return value of getByteStream may be aliased with the first parameter of setByteStream.\n\nWhen the method getCharacterStream is invoked after the method setCharacterStream upon the same object, the return value of getCharacterStream may be aliased with the first parameter of setCharacterStream.\n\nWhen the method getEncoding is invoked after the method setByteStream or setSystemId upon the same object, the return value of getEncoding may be aliased with the first parameter of setByteStream or setSystemId.\n\nWhen the method getPublicId is invoked after the method setPublicId upon the same object, the return value of getPublicId may be aliased with the first parameter of setPublicId.\n\nWhen the method getSystemId is invoked after the method setSystemId upon the same object, the return value of getSystemId may be aliased with the first parameter of setSystemId.",
    "org.sax.XMLReader": "The aliasing specifications for the given Java class are:\n\n- The return value of \"ContentHandler getContentHandler()\" may be aliased with the first parameter of \"void setContentHandler(ContentHandler handler)\" if the method getContentHandler is invoked after the method setContentHandler.\n- The return value of \"DTDHandler getDTDHandler()\" may be aliased with the first parameter of \"void setDTDHandler(DTDHandler handler)\" if the method getDTDHandler is invoked after the method setDTDHandler.\n- The return value of \"EntityResolver getEntityResolver()\" may be aliased with the first parameter of \"void setEntityResolver(EntityResolver resolver)\" if the method getEntityResolver is invoked after the method setEntityResolver.\n- The return value of \"ErrorHandler getErrorHandler()\" may be aliased with the first parameter of \"void setErrorHandler(ErrorHandler handler)\" if the method getErrorHandler is invoked after the method setErrorHandler.",
    "org.vertx.java.core.json.JsonObject": "The aliasing specifications for the given Java class are:\n\n- When the method \"JsonObject put(String key, Object value)\" is invoked before the method \"Object getValue(String key)\" with the same key, the return value of \"Object getValue(String key)\" may be aliased with the second parameter of \"JsonObject put(String key, Object value)\".\n- When the method \"JsonObject putNull(String key)\" is invoked before the method \"Object getValue(String key)\" with the same key, the return value of \"Object getValue(String key)\" may be aliased with the parameter of \"JsonObject putNull(String key)\".\n- When the method \"JsonObject copy()\" or \"JsonObject copy(java.util.function.Function cloner)\" is invoked before the method \"Object getValue(String key)\" with the same key, the return value of \"Object getValue(String key)\" may be aliased with the corresponding property of the copied JsonObject.\n- When the method \"JsonObject mergeIn(JsonObject other)\", \"JsonObject mergeIn(JsonObject other, boolean deep)\", or \"JsonObject mergeIn(JsonObject other, int depth)\" is invoked before the method \"Object getValue(String key)\" with the same key, the return value of \"Object getValue(String key)\" may be aliased with the corresponding property of the merged JsonObject.\n- When the method \"Object remove(String key)\" is invoked before the method \"Object getValue(String key)\" with the same key, the return value of \"Object getValue(String key)\" may be aliased with the parameter of \"Object remove(String key)\".\n- When the method \"int readFromBuffer(int pos, Buffer buffer)\" is invoked before the method \"void writeToBuffer(Buffer buffer)\", the return value of \"int readFromBuffer(int pos, Buffer buffer)\" may be aliased with the parameter of \"void writeToBuffer(Buffer buffer)\".",
    "org.w3c.dom.Element": "When the method \"String getAttribute(String name)\" is invoked after the method \"Attr getAttributeNode(String name)\" upon the same object, the return value of \"String getAttribute(String name)\" may be aliased with the return value of \"Attr getAttributeNode(String name)\".\n\nWhen the method \"String getAttribute(String name)\" is invoked after the method \"Attr getAttributeNodeNS(String namespaceURI, String localName)\" upon the same object, the return value of \"String getAttribute(String name)\" may be aliased with the return value of \"Attr getAttributeNodeNS(String namespaceURI, String localName)\".\n\nWhen the method \"Attr getAttributeNode(String name)\" is invoked after the method \"String getAttribute(String name)\" upon the same object, the return value of \"Attr getAttributeNode(String name)\" may be aliased with the k-th parameter of \"void setAttribute(String name, String value)\" if the i_m-th parameter of \"setAttribute(String name, String value)\" is aliased with the j_m-th parameter of \"Attribute getAttributeNode(String name)\" for each 1 <= m <= n.\n\nWhen the method \"Attr getAttributeNode(String name)\" is invoked after the method \"Attr getAttributeNodeNS(String namespaceURI, String localName)\" upon the same object, the return value of \"Attr getAttributeNode(String name)\" may be aliased with the k-th parameter of \"void setAttributeNS(String namespaceURI, String qualifiedName, String value)\" if the i_m-th parameter of \"setAttributeNS(String namespaceURI, String qualifiedName, String value)\" is aliased with the j_m-th parameter of \"Attribute getAttributeNodeNS(String namespaceURI, String localName)\" for each 1 <= m <= n.\n\nWhen the method \"Attr getAttributeNodeNS(String namespaceURI, String localName)\" is invoked after the method \"String getAttributeNS(String namespaceURI, String localName)\" upon the same object, the return value of \"Attr getAttributeNodeNS(String namespaceURI, String localName)\" may be aliased with the return value of \"String getAttributeNS(String namespaceURI, String localName)\".\n\nWhen the method \"String getAttributeNS(String namespaceURI, String localName)\" is invoked after the method \"Attr getAttributeNodeNS(String namespaceURI, String localName)\" upon the same object, the return value of \"String getAttributeNS(String namespaceURI, String localName)\" may be aliased with the k-th parameter of \"void setAttributeNS(String namespaceURI, String qualifiedName, String value)\" if the i_m-th parameter of \"setAttributeNS(String namespaceURI, String qualifiedName, String value)\" is aliased with the j_m-th parameter of \"Attr getAttributeNodeNS(String namespaceURI, String localName)\" for each 1 <= m <= n.\n\nWhen the method \"NodeList getElementsByTagName(String name)\" is invoked after the method \"void setAttribute(String name, String value)\" upon the same object, the return value of \"NodeList getElementsByTagName(String name)\" may be aliased with the first parameter of \"void setAttribute(String name, String value)\".\n\nWhen the method \"NodeList getElementsByTagName(String name)\" is invoked after the method \"Attr setAttributeNode(Attr newAttr)\" upon the same object, the return value of \"NodeList getElementsByTagName(String name)\" may be aliased with the first parameter of \"Attr setAttributeNode(Attr newAttr)\".\n\nWhen the method \"NodeList getElementsByTagName(String name)\" is invoked after the method \"void setAttributeNodeNS(Attr newAttr)\" upon the same object, the return value of \"NodeList getElementsByTagName(String name)\" may be aliased with the first parameter of \"void setAttributeNodeNS(Attr newAttr)\".\n\nWhen the method \"NodeList getElementsByTagName(String name)\" is invoked after the method \"void setAttributeNS(String namespaceURI, String qualifiedName, String value)\" upon the same object, the return value of \"NodeList getElementsByTagName(String name)\" may be aliased with the second parameter of \"void setAttributeNS(String namespaceURI, String qualifiedName, String value)\".\n\nWhen the method \"NodeList getElementsByTagNameNS(String namespaceURI, String localName)\" is invoked after the method \"Attr getAttributeNodeNS(String namespaceURI, String localName)\" upon the same object, the return value of \"NodeList getElementsByTagNameNS(String namespaceURI, String localName)\" may be aliased with the return value of \"Attr getAttributeNodeNS(String namespaceURI, String localName)\".\n\nWhen the method \"Attr getAttributeNodeNS(String namespaceURI, String localName)\" is invoked after the method \"NodeList getElementsByTagNameNS(String namespaceURI, String localName)\" upon the same object, the return value of \"Attr getAttributeNodeNS(String namespaceURI, String localName)\" may be aliased with the k-th parameter of \"void setAttributeNS(String namespaceURI, String qualifiedName, String value)\" if the i_m-th parameter of \"setAttributeNS(String namespaceURI, String qualifiedName, String value)\" is aliased with the j_m-th parameter of \"NodeList getElementsByTagNameNS(String namespaceURI, String localName)\" for each 1 <= m <= n.\n\nWhen the method \"TypeInfo getSchemaTypeInfo()\" is invoked after the method \"NodeList getElementsByTagName(String name)\" upon the same object, the return value of \"TypeInfo getSchemaTypeInfo()\" may be aliased with the first parameter of \"void setAttribute(String name, String value)\".\n\nWhen the method \"TypeInfo getSchemaTypeInfo()\" is invoked after the method \"Attr setAttributeNode(Attr newAttr)\" upon the same object, the return value of \"TypeInfo getSchemaTypeInfo()\" may be aliased with the first parameter of \"Attr setAttributeNode(Attr newAttr)\".\n\nWhen the method \"TypeInfo getSchemaTypeInfo()\" is invoked after the method \"void setAttributeNodeNS(Attr newAttr)\" upon the same object, the return value of \"TypeInfo getSchemaTypeInfo()\" may be aliased with the first parameter of \"void setAttributeNodeNS(Attr newAttr)\".\n\nWhen the method \"TypeInfo getSchemaTypeInfo()\" is invoked after the method \"void setAttributeNS(String namespaceURI, String qualifiedName, String value)\" upon the same object, the return value of \"TypeInfo getSchemaTypeInfo()\" may be aliased with the second parameter of \"void setAttributeNS(String namespaceURI, String qualifiedName, String value)\".\n\nWhen the method \"boolean hasAttribute(String name)\" is invoked after the method \"Attr getAttributeNode(String name)\" upon the same object, the return value of \"boolean hasAttribute(String name)\" may be aliased with the return value of \"Attr getAttributeNode(String name)\".\n\nWhen the method \"boolean hasAttribute(String name)\" is invoked after the method \"Attr getAttributeNodeNS(String namespaceURI, String localName)\" upon the same object, the return value of \"boolean hasAttribute(String name)\" may be aliased with the return value of \"Attr getAttributeNodeNS(String namespaceURI, String localName)\".\n\nWhen the method \"boolean hasAttribute(String name)\" is invoked after the method \"NodeList getElementsByTagName(String name)\" upon the same object, the return value of \"boolean hasAttribute(String name)\" may be aliased with the first parameter of \"void setAttribute(String name, String value)\".\n\nWhen the method \"boolean hasAttribute(String name)\" is invoked after the method \"Attr setAttributeNode(Attr newAttr)\" upon the same object, the return value of \"boolean hasAttribute(String name)\" may be aliased with the first parameter of \"Attr setAttributeNode(Attr newAttr)\".\n\nWhen the method \"boolean hasAttribute(String name)\" is invoked after the method \"void setAttributeNodeNS(Attr newAttr)\" upon the same object, the return value of \"boolean hasAttribute(String name)\" may be aliased with the first parameter of \"void setAttributeNodeNS(Attr newAttr)\".\n\nWhen the method \"boolean hasAttribute(String name)\" is invoked after the method \"void setAttributeNS(String namespaceURI, String qualifiedName, String value)\" upon the same object, the return value of \"boolean hasAttribute(String name)\" may be aliased with the second parameter of \"void setAttributeNS(String namespaceURI, String qualifiedName, String value)\".\n\nWhen the method \"boolean hasAttributeNS(String namespaceURI, String localName)\" is invoked after the method \"Attr getAttributeNodeNS(String namespaceURI, String localName)\" upon the same object, the return value of \"boolean hasAttributeNS(String namespaceURI, String localName)\" may be aliased with the return value of \"Attr getAttributeNodeNS(String namespaceURI, String localName)\".\n\nWhen the method \"boolean hasAttributeNS(String namespaceURI, String localName)\" is invoked after the method \"NodeList getElementsByTagNameNS(String namespaceURI, String localName)\" upon the same object, the return value of \"boolean hasAttributeNS(String namespaceURI, String localName)\" may be aliased with the k-th parameter of \"void setAttributeNS(String namespaceURI, String qualifiedName, String value)\" if the i_m-th parameter of \"setAttributeNS(String namespaceURI, String qualifiedName, String value)\" is aliased with the j_m-th parameter of \"NodeList getElementsByTagNameNS(String namespaceURI, String localName)\" for each 1 <= m <= n.\n\nWhen the method \"void removeAttribute(String name)\" is invoked after the method \"Attr getAttributeNode(String name)\" upon the same object, the k-th parameter of \"void removeAttribute(String name)\"",
    "org.w3c.dom.Node": "When the two methods have the same value of the first parameter, the return value of \"Node getFirstChild()\" may be aliased with the second parameter of \"Node insertBefore(Node newChild, Node refChild)\" if the method getFirstChild is invoked after the method insertBefore.\n\nWhen the two methods have the same value of the first parameter, the return value of \"Node getLastChild()\" may be aliased with the second parameter of \"Node insertBefore(Node newChild, Node refChild)\" if the method getLastChild is invoked after the method insertBefore.\n\nWhen the two methods have the same value of the first parameter, the return value of \"Node getNextSibling()\" may be aliased with the second parameter of \"Node insertBefore(Node newChild, Node refChild)\" if the method getNextSibling is invoked after the method insertBefore.\n\nWhen the two methods have the same value of the first parameter, the return value of \"Node getPreviousSibling()\" may be aliased with the second parameter of \"Node insertBefore(Node newChild, Node refChild)\" if the method getPreviousSibling is invoked after the method insertBefore.\n\nWhen the two methods have the same value of the first parameter, the return value of \"Node removeChild(Node oldChild)\" may be aliased with the second parameter of \"Node insertBefore(Node newChild, Node refChild)\" if the method removeChild is invoked after the method insertBefore.\n\nWhen the two methods have the same value of the first parameter, the return value of \"Node replaceChild(Node newChild, Node oldChild)\" may be aliased with the second parameter of \"Node insertBefore(Node newChild, Node refChild)\" if the method replaceChild is invoked after the method insertBefore."
}