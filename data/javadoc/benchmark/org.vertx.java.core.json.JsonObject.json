{
    "class": "JsonObject",
    "category": "Class",
    "methods": {
        "JsonObject clear()": "Remove all the entries in this JSON object",
        "boolean containsKey(String key)": "Does the JSON object contain the specified key?",
        "JsonObject copy()": "Deep copy of this JSON object.",
        "JsonObject copy(java.util.function.Function cloner)": "Deep copy of this JSON object.",
        "String encode()": "Encode this JSON object as a string.",
        "String encodePrettily()": "Encode this JSON object a a string, with whitespace to make the object easier to read by a human, or other sentient organism.",
        "boolean equals(Object o)": "",
        "Set fieldNames()": "Return the set of field names in the JSON objects",
        "byte[] getBinary(String key)": "Get the binary value with the specified key.",
        "byte[] getBinary(String key, byte[] def)": "Like getBinary(String) but specifying a default value to return if there is no entry.",
        "Boolean getBoolean(String key)": "Get the Boolean value with the specified key",
        "Boolean getBoolean(String key, Boolean def)": "Like getBoolean(String) but specifying a default value to return if there is no entry.",
        "Buffer getBuffer(String key)": "Get the Buffer value with the specified key.",
        "Buffer getBuffer(String key, Buffer def)": "Like getBuffer(String) but specifying a default value to return if there is no entry.",
        "Double getDouble(String key)": "Get the Double value with the specified key",
        "Double getDouble(String key, Double def)": "Like getDouble(String) but specifying a default value to return if there is no entry.",
        "Float getFloat(String key)": "Get the Float value with the specified key",
        "Float getFloat(String key, Float def)": "Like getFloat(String) but specifying a default value to return if there is no entry.",
        "java.time.Instant getInstant(String key)": "Get the instant value with the specified key.",
        "java.time.Instant getInstant(String key, java.time.Instant def)": "Like getInstant(String) but specifying a default value to return if there is no entry.",
        "Integer getInteger(String key)": "Get the Integer value with the specified key",
        "Integer getInteger(String key, Integer def)": "Like getInteger(String) but specifying a default value to return if there is no entry.",
        "JsonArray getJsonArray(String key)": "Get the JsonArray value with the specified key",
        "JsonArray getJsonArray(String key, JsonArray def)": "Like getJsonArray(String) but specifying a default value to return if there is no entry.",
        "JsonObject getJsonObject(String key)": "Get the JsonObject value with the specified key",
        "JsonObject getJsonObject(String key, JsonObject def)": "Like getJsonObject(String) but specifying a default value to return if there is no entry.",
        "Long getLong(String key)": "Get the Long value with the specified key",
        "Long getLong(String key, Long def)": "Like getLong(String) but specifying a default value to return if there is no entry.",
        "Map getMap()": "Get the underlying Map as is.",
        "Number getNumber(String key)": "Get the Number value with the specified key",
        "Number getNumber(String key, Number def)": "Like getNumber(String) but specifying a default value to return if there is no entry.",
        "String getString(String key)": "Get the string value with the specified key, special cases are addressed for extended JSON types Instant, byte[] and Enum which can be converted to String.",
        "String getString(String key, String def)": "Like getString(String) but specifying a default value to return if there is no entry.",
        "Object getValue(String key)": "Get the value with the specified key, as an Object with types respecting the limitations of JSON.",
        "Object getValue(String key, Object def)": "Like getValue(String) but specifying a default value to return if there is no entry.",
        "int hashCode()": "",
        "boolean isEmpty()": "Is this object entry?",
        "Iterator iterator()": "Get an Iterator of the entries in the JSON object.",
        "JsonObject mapFrom(Object obj)": "Create a JsonObject from the fields of a Java object.",
        "T mapTo(Class type)": "Instantiate a Java object from a JsonObject.",
        "JsonObject mergeIn(JsonObject other)": "Merge in another JSON object.",
        "JsonObject mergeIn(JsonObject other, boolean deep)": "Merge in another JSON object.",
        "JsonObject mergeIn(JsonObject other, int depth)": "Merge in another JSON object.",
        "JsonObject of()": "Create a JsonObject containing zero mappings.",
        "JsonObject of(String k1, Object v1)": "Create a JsonObject containing a single mapping.",
        "JsonObject of(String k1, Object v1, String k2, Object v2)": "Create a JsonObject containing two mappings.",
        "JsonObject of(String k1, Object v1, String k2, Object v2, String k3, Object v3)": "Create a JsonObject containing three mappings.",
        "JsonObject of(String k1, Object v1, String k2, Object v2, String k3, Object v3, String k4, Object v4)": "Create a JsonObject containing four mappings.",
        "JsonObject of(String k1, Object v1, String k2, Object v2, String k3, Object v3, String k4, Object v4, String k5, Object v5)": "Create a JsonObject containing five mappings.",
        "JsonObject of(String k1, Object v1, String k2, Object v2, String k3, Object v3, String k4, Object v4, String k5, Object v5, String k6, Object v6)": "Create a JsonObject containing six mappings.",
        "JsonObject of(String k1, Object v1, String k2, Object v2, String k3, Object v3, String k4, Object v4, String k5, Object v5, String k6, Object v6, String k7, Object v7)": "Create a JsonObject containing seven mappings.",
        "JsonObject of(String k1, Object v1, String k2, Object v2, String k3, Object v3, String k4, Object v4, String k5, Object v5, String k6, Object v6, String k7, Object v7, String k8, Object v8)": "Create a JsonObject containing eight mappings.",
        "JsonObject of(String k1, Object v1, String k2, Object v2, String k3, Object v3, String k4, Object v4, String k5, Object v5, String k6, Object v6, String k7, Object v7, String k8, Object v8, String k9, Object v9)": "Create a JsonObject containing nine mappings.",
        "JsonObject of(String k1, Object v1, String k2, Object v2, String k3, Object v3, String k4, Object v4, String k5, Object v5, String k6, Object v6, String k7, Object v7, String k8, Object v8, String k9, Object v9, String k10, Object v10)": "Create a JsonObject containing ten mappings.",
        "JsonObject put(String key, Object value)": "Put an Object into the JSON object with the specified key.",
        "JsonObject putNull(String key)": "Put a null value into the JSON object with the specified key.",
        "int readFromBuffer(int pos, Buffer buffer)": "Method invoked when deserializing bytes to this instance.",
        "Object remove(String key)": "Remove an entry from this object.",
        "int size()": "Get the number of entries in the JSON object",
        "java.util.stream.Stream stream()": "Get a Stream over the entries in the JSON object.",
        "Buffer toBuffer()": "Encode this JSON object as buffer.",
        "String toString()": "",
        "void writeToBuffer(Buffer buffer)": "Method invoked when serializing this instance."
    },
    "super class": []
}