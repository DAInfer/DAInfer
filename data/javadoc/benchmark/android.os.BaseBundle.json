{
    "class": "BaseBundle",
    "category": "class",
    "methods": {
        "void clear()": "Removes all elements from the mapping of this Bundle.",
        "boolean containsKey(String key)": "Returns true if the given key is contained in the mapping of this Bundle.",
        "Object get(String key)": "This method was deprecated in API level 33. Use the type-safe specific APIs depending on the type of the item to be retrieved, eg. getString(java.lang.String).",
        "boolean getBoolean(String key, boolean defaultValue)": "Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key.",
        "boolean getBoolean(String key)": "Returns the value associated with the given key, or false if no mapping of the desired type exists for the given key.",
        "boolean[] getBooleanArray(String key)": "Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key.",
        "double getDouble(String key, double defaultValue)": "Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key.",
        "double getDouble(String key)": "Returns the value associated with the given key, or 0.0 if no mapping of the desired type exists for the given key.",
        "double[] getDoubleArray(String key)": "Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key.",
        "int getInt(String key)": "Returns the value associated with the given key, or 0 if no mapping of the desired type exists for the given key.",
        "int getInt(String key, int defaultValue)": "Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key.",
        "int[] getIntArray(String key)": "Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key.",
        "long getLong(String key)": "Returns the value associated with the given key, or 0L if no mapping of the desired type exists for the given key.",
        "long getLong(String key, long defaultValue)": "Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key.",
        "long[] getLongArray(String key)": "Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key.",
        "String getString(String key)": "Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key.",
        "String getString(String key, String defaultValue)": "Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key or if a null value is explicitly associated with the given key.",
        "String[] getStringArray(String key)": "Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key.",
        "boolean isEmpty()": "Returns true if the mapping of this Bundle is empty, false otherwise.",
        "Set keySet()": "Returns a Set containing the Strings used as keys in this Bundle.",
        "void putAll(PersistableBundle bundle)": "Inserts all mappings from the given PersistableBundle into this BaseBundle.",
        "void putBoolean(String key, boolean value)": "Inserts a Boolean value into the mapping of this Bundle, replacing any existing value for the given key.",
        "void putBooleanArray(String key, boolean[] value)": "Inserts a boolean array value into the mapping of this Bundle, replacing any existing value for the given key.",
        "void putDouble(String key, double value)": "Inserts a double value into the mapping of this Bundle, replacing any existing value for the given key.",
        "void putDoubleArray(String key, double[] value)": "Inserts a double array value into the mapping of this Bundle, replacing any existing value for the given key.",
        "void putInt(String key, int value)": "Inserts an int value into the mapping of this Bundle, replacing any existing value for the given key.",
        "void putIntArray(String key, int[] value)": "Inserts an int array value into the mapping of this Bundle, replacing any existing value for the given key.",
        "void putLong(String key, long value)": "Inserts a long value into the mapping of this Bundle, replacing any existing value for the given key.",
        "void putLongArray(String key, long[] value)": "Inserts a long array value into the mapping of this Bundle, replacing any existing value for the given key.",
        "void putString(String key, String value)": "Inserts a String value into the mapping of this Bundle, replacing any existing value for the given key.",
        "void putStringArray(String key, String[] value)": "Inserts a String array value into the mapping of this Bundle, replacing any existing value for the given key.",
        "void remove(String key)": "Removes any entry with the given key from the mapping of this Bundle.",
        "int size()": "Returns the number of mappings contained in this Bundle."
    },
    "super class": []
}