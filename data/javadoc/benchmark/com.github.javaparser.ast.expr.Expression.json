{
    "class": "Expression",
    "category": "Class",
    "methods": {
        "AnnotationExpr asAnnotationExpr()": "",
        "ArrayAccessExpr asArrayAccessExpr()": "",
        "ArrayCreationExpr asArrayCreationExpr()": "",
        "ArrayInitializerExpr asArrayInitializerExpr()": "",
        "AssignExpr asAssignExpr()": "",
        "BinaryExpr asBinaryExpr()": "",
        "BooleanLiteralExpr asBooleanLiteralExpr()": "",
        "CastExpr asCastExpr()": "",
        "CharLiteralExpr asCharLiteralExpr()": "",
        "ClassExpr asClassExpr()": "",
        "ConditionalExpr asConditionalExpr()": "",
        "DoubleLiteralExpr asDoubleLiteralExpr()": "",
        "EnclosedExpr asEnclosedExpr()": "",
        "FieldAccessExpr asFieldAccessExpr()": "",
        "InstanceOfExpr asInstanceOfExpr()": "",
        "IntegerLiteralExpr asIntegerLiteralExpr()": "",
        "LambdaExpr asLambdaExpr()": "",
        "LiteralExpr asLiteralExpr()": "",
        "LiteralStringValueExpr asLiteralStringValueExpr()": "",
        "LongLiteralExpr asLongLiteralExpr()": "",
        "MarkerAnnotationExpr asMarkerAnnotationExpr()": "",
        "MethodCallExpr asMethodCallExpr()": "",
        "MethodReferenceExpr asMethodReferenceExpr()": "",
        "NameExpr asNameExpr()": "",
        "NormalAnnotationExpr asNormalAnnotationExpr()": "",
        "NullLiteralExpr asNullLiteralExpr()": "",
        "ObjectCreationExpr asObjectCreationExpr()": "",
        "SingleMemberAnnotationExpr asSingleMemberAnnotationExpr()": "",
        "StringLiteralExpr asStringLiteralExpr()": "",
        "SuperExpr asSuperExpr()": "",
        "ThisExpr asThisExpr()": "",
        "TypeExpr asTypeExpr()": "",
        "UnaryExpr asUnaryExpr()": "",
        "VariableDeclarationExpr asVariableDeclarationExpr()": "",
        "Expression clone()": "",
        "ExpressionMetaModel getMetaModel()": "",
        "void ifAnnotationExpr(Consumer action)": "",
        "void ifArrayAccessExpr(Consumer action)": "",
        "void ifArrayCreationExpr(Consumer action)": "",
        "void ifArrayInitializerExpr(Consumer action)": "",
        "void ifAssignExpr(Consumer action)": "",
        "void ifBinaryExpr(Consumer action)": "",
        "void ifBooleanLiteralExpr(Consumer action)": "",
        "void ifCastExpr(Consumer action)": "",
        "void ifCharLiteralExpr(Consumer action)": "",
        "void ifClassExpr(Consumer action)": "",
        "void ifConditionalExpr(Consumer action)": "",
        "void ifDoubleLiteralExpr(Consumer action)": "",
        "void ifEnclosedExpr(Consumer action)": "",
        "void ifFieldAccessExpr(Consumer action)": "",
        "void ifInstanceOfExpr(Consumer action)": "",
        "void ifIntegerLiteralExpr(Consumer action)": "",
        "void ifLambdaExpr(Consumer action)": "",
        "void ifLiteralExpr(Consumer action)": "",
        "void ifLiteralStringValueExpr(Consumer action)": "",
        "void ifLongLiteralExpr(Consumer action)": "",
        "void ifMarkerAnnotationExpr(Consumer action)": "",
        "void ifMethodCallExpr(Consumer action)": "",
        "void ifMethodReferenceExpr(Consumer action)": "",
        "void ifNameExpr(Consumer action)": "",
        "void ifNormalAnnotationExpr(Consumer action)": "",
        "void ifNullLiteralExpr(Consumer action)": "",
        "void ifObjectCreationExpr(Consumer action)": "",
        "void ifSingleMemberAnnotationExpr(Consumer action)": "",
        "void ifStringLiteralExpr(Consumer action)": "",
        "void ifSuperExpr(Consumer action)": "",
        "void ifThisExpr(Consumer action)": "",
        "void ifTypeExpr(Consumer action)": "",
        "void ifUnaryExpr(Consumer action)": "",
        "void ifVariableDeclarationExpr(Consumer action)": "",
        "boolean isAnnotationExpr()": "",
        "boolean isArrayAccessExpr()": "",
        "boolean isArrayCreationExpr()": "",
        "boolean isArrayInitializerExpr()": "",
        "boolean isAssignExpr()": "",
        "boolean isBinaryExpr()": "",
        "boolean isBooleanLiteralExpr()": "",
        "boolean isCastExpr()": "",
        "boolean isCharLiteralExpr()": "",
        "boolean isClassExpr()": "",
        "boolean isConditionalExpr()": "",
        "boolean isDoubleLiteralExpr()": "",
        "boolean isEnclosedExpr()": "",
        "boolean isFieldAccessExpr()": "",
        "boolean isInstanceOfExpr()": "",
        "boolean isIntegerLiteralExpr()": "",
        "boolean isLambdaExpr()": "",
        "boolean isLiteralExpr()": "",
        "boolean isLiteralStringValueExpr()": "",
        "boolean isLongLiteralExpr()": "",
        "boolean isMarkerAnnotationExpr()": "",
        "boolean isMethodCallExpr()": "",
        "boolean isMethodReferenceExpr()": "",
        "boolean isNameExpr()": "",
        "boolean isNormalAnnotationExpr()": "",
        "boolean isNullLiteralExpr()": "",
        "boolean isObjectCreationExpr()": "",
        "boolean isSingleMemberAnnotationExpr()": "",
        "boolean isStringLiteralExpr()": "",
        "boolean isSuperExpr()": "",
        "boolean isThisExpr()": "",
        "boolean isTypeExpr()": "",
        "boolean isUnaryExpr()": "",
        "boolean isVariableDeclarationExpr()": "",
        "boolean remove(Node node)": "",
        "boolean replace(Node node, Node replacementNode)": ""
    },
    "super class": [
        "com.github.javaparser.ast.Node"
    ]
}