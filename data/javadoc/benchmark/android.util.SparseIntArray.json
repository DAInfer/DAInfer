{
    "class": "SparseIntArray",
    "category": "class",
    "methods": {
        "void append(int key, int value)": "Puts a key/value pair into the array, optimizing for the case where the key is greater than all existing keys in the array.",
        "void clear()": "Removes all key-value mappings from this SparseIntArray.",
        "SparseIntArray clone()": "Creates and returns a copy of this object.",
        "void delete(int key)": "Removes the mapping from the specified key, if there was any.",
        "int get(int key)": "Gets the int mapped from the specified key, or 0 if no such mapping has been made.",
        "int get(int key, int valueIfKeyNotFound)": "Gets the int mapped from the specified key, or the specified value if no such mapping has been made.",
        "int indexOfKey(int key)": "Returns the index for which keyAt(int) would return the specified key, or a negative number if the specified key is not mapped.",
        "int indexOfValue(int value)": "Returns an index for which valueAt(int) would return the specified key, or a negative number if no keys map to the specified value.",
        "int keyAt(int index)": "Given an index in the range 0...size()-1, returns the key from the indexth key-value mapping that this SparseIntArray stores.",
        "void put(int key, int value)": "Adds a mapping from the specified key to the specified value, replacing the previous mapping from the specified key if there was one.",
        "void removeAt(int index)": "Removes the mapping at the given index.",
        "void setValueAt(int index, int value)": "Directly set the value at a particular index.",
        "int size()": "Returns the number of key-value mappings that this SparseIntArray currently stores.",
        "String toString()": "Returns a string representation of the object. This implementation composes a string by iterating over its mappings.",
        "int valueAt(int index)": "Given an index in the range 0...size()-1, returns the value from the indexth key-value mapping that this SparseIntArray stores."
    },
    "super class": [
    ]
}