{
    "class": "Intent",
    "category": "class",
    "methods": {
        "Intent addCategory(String category)": "Add a new category to the intent.",
        "Intent addFlags(int flags)": "Add additional flags to the intent (or with existing flags value).",
        "Object clone()": "Creates and returns a copy of this object.",
        "Intent cloneFilter()": "Make a clone of only the parts of the Intent that are relevant for filter matching: the action, data, type, component, and categories.",
        "Intent createChooser(Intent target, CharSequence title, IntentSender sender)": "Convenience function for creating a ACTION_CHOOSER Intent.",
        "Intent createChooser(Intent target, CharSequence title)": "Convenience function for creating a ACTION_CHOOSER Intent.",
        "int describeContents()": "Describe the kinds of special objects contained in this Parcelable instance's marshaled representation.",
        "int fillIn(Intent other, int flags)": "Copy the contents of other in to this object, but only where fields are not defined by this object.",
        "boolean filterEquals(Intent other)": "Determine if two intents are the same for the purposes of intent resolution (filtering).",
        "int filterHashCode()": "Generate hash code that matches semantics of filterEquals().",
        "String getAction()": "Retrieve the general action to be performed, such as ACTION_VIEW.",
        "boolean[] getBooleanArrayExtra(String name)": "Retrieve extended data from the intent.",
        "boolean getBooleanExtra(String name, boolean defaultValue)": "Retrieve extended data from the intent.",
        "Bundle getBundleExtra(String name)": "Retrieve extended data from the intent.",
        "byte[] getByteArrayExtra(String name)": "Retrieve extended data from the intent.",
        "byte getByteExtra(String name, byte defaultValue)": "Retrieve extended data from the intent.",
        "Set getCategories()": "Return the set of all categories in the intent.",
        "char[] getCharArrayExtra(String name)": "Retrieve extended data from the intent.",
        "char getCharExtra(String name, char defaultValue)": "Retrieve extended data from the intent.",
        "CharSequence[] getCharSequenceArrayExtra(String name)": "Retrieve extended data from the intent.",
        "ArrayList getCharSequenceArrayListExtra(String name)": "Retrieve extended data from the intent.",
        "CharSequence getCharSequenceExtra(String name)": "Retrieve extended data from the intent.",
        "ClipData getClipData()": "Return the ClipData associated with this Intent.",
        "ComponentName getComponent()": "Retrieve the concrete component associated with the intent.",
        "Uri getData()": "Retrieve data this intent is operating on.",
        "String getDataString()": "The same as getData(), but returns the URI as an encoded String.",
        "double[] getDoubleArrayExtra(String name)": "Retrieve extended data from the intent.",
        "double getDoubleExtra(String name, double defaultValue)": "Retrieve extended data from the intent.",
        "Bundle getExtras()": "Retrieves a map of extended data from the intent.",
        "int getFlags()": "Retrieve any special flags associated with this intent.",
        "float[] getFloatArrayExtra(String name)": "Retrieve extended data from the intent.",
        "float getFloatExtra(String name, float defaultValue)": "Retrieve extended data from the intent.",
        "String getIdentifier()": "Retrieve the identifier for this Intent.",
        "int[] getIntArrayExtra(String name)": "Retrieve extended data from the intent.",
        "int getIntExtra(String name, int defaultValue)": "Retrieve extended data from the intent.",
        "ArrayList getIntegerArrayListExtra(String name)": "Retrieve extended data from the intent.",
        "Intent getIntent(String uri)": "This method was deprecated in API level 15. Use parseUri(String, int) instead.",
        "Intent getIntentOld(String uri)": "Intent getIntentOld(String uri)",
        "long[] getLongArrayExtra(String name)": "Retrieve extended data from the intent.",
        "long getLongExtra(String name, long defaultValue)": "Retrieve extended data from the intent.",
        "String getPackage()": "Retrieve the application package name this Intent is limited to.",
        "Parcelable[] getParcelableArrayExtra(String name)": "This method was deprecated in API level 33. Use the type-safer getParcelableArrayExtra(java.lang.String, java.lang.Class) starting from Android Build.VERSION_CODES#TIRAMISU.",
        "T[] getParcelableArrayExtra(String name, Class clazz)": "Retrieve extended data from the intent.",
        "ArrayList getParcelableArrayListExtra(String name, Class clazz)": "Retrieve extended data from the intent.",
        "ArrayList getParcelableArrayListExtra(String name)": "This method was deprecated in API level 33. Use the type-safer getParcelableArrayListExtra(java.lang.String, java.lang.Class) starting from Android Build.VERSION_CODES#TIRAMISU.",
        "T getParcelableExtra(String name)": "This method was deprecated in API level 33. Use the type-safer getParcelableExtra(java.lang.String, java.lang.Class) starting from Android Build.VERSION_CODES#TIRAMISU.",
        "T getParcelableExtra(String name, Class clazz)": "Retrieve extended data from the intent.",
        "String getScheme()": "Return the scheme portion of the intent's data.",
        "Intent getSelector()": "Return the specific selector associated with this Intent.",
        "T getSerializableExtra(String name, Class clazz)": "Retrieve extended data from the intent.",
        "Serializable getSerializableExtra(String name)": "This method was deprecated in API level 33. Use the type-safer getSerializableExtra(java.lang.String, java.lang.Class) starting from Android Build.VERSION_CODES#TIRAMISU.",
        "short[] getShortArrayExtra(String name)": "Retrieve extended data from the intent.",
        "short getShortExtra(String name, short defaultValue)": "Retrieve extended data from the intent.",
        "Rect getSourceBounds()": "Get the bounds of the sender of this intent, in screen coordinates.",
        "String[] getStringArrayExtra(String name)": "Retrieve extended data from the intent.",
        "ArrayList getStringArrayListExtra(String name)": "Retrieve extended data from the intent.",
        "String getStringExtra(String name)": "Retrieve extended data from the intent.",
        "String getType()": "Retrieve any explicit MIME type included in the intent.",
        "boolean hasCategory(String category)": "Check if a category exists in the intent.",
        "boolean hasExtra(String name)": "Returns true if an extra value is associated with the given name.",
        "boolean hasFileDescriptors()": "Returns true if the Intent's extras contain a parcelled file descriptor.",
        "Intent makeMainActivity(ComponentName mainActivity)": "Create an intent to launch the main (root) activity of a task.",
        "Intent makeMainSelectorActivity(String selectorAction, String selectorCategory)": "Make an Intent for the main activity of an application, without specifying a specific activity to run but giving a selector to find the activity.",
        "Intent makeRestartActivityTask(ComponentName mainActivity)": "Make an Intent that can be used to re-launch an application's task in its base state.",
        "String normalizeMimeType(String type)": "Normalize a MIME data type.",
        "Intent parseIntent(Resources resources, XmlPullParser parser, AttributeSet attrs)": "Parses the \"intent\" element (and its children) from XML and instantiates an Intent object.",
        "Intent parseUri(String uri, int flags)": "Create an intent from a URI.",
        "Intent putCharSequenceArrayListExtra(String name, ArrayList value)": "Add extended data to the intent.",
        "Intent putExtra(String name, Parcelable value)": "Add extended data to the intent.",
        "Intent putExtra(String name, long[] value)": "Add extended data to the intent.",
        "Intent putExtra(String name, byte value)": "Add extended data to the intent.",
        "Intent putExtra(String name, double[] value)": "Add extended data to the intent.",
        "Intent putExtra(String name, CharSequence value)": "Add extended data to the intent.",
        "Intent putExtra(String name, boolean[] value)": "Add extended data to the intent.",
        "Intent putExtra(String name, int value)": "Add extended data to the intent.",
        "Intent putExtra(String name, char[] value)": "Add extended data to the intent.",
        "Intent putExtra(String name, byte[] value)": "Add extended data to the intent.",
        "Intent putExtra(String name, Parcelable[] value)": "Add extended data to the intent.",
        "Intent putExtra(String name, Bundle value)": "Add extended data to the intent.",
        "Intent putExtra(String name, CharSequence[] value)": "Add extended data to the intent.",
        "Intent putExtra(String name, float[] value)": "Add extended data to the intent.",
        "Intent putExtra(String name, double value)": "Add extended data to the intent.",
        "Intent putExtra(String name, int[] value)": "Add extended data to the intent.",
        "Intent putExtra(String name, String[] value)": "Add extended data to the intent.",
        "Intent putExtra(String name, short[] value)": "Add extended data to the intent.",
        "Intent putExtra(String name, boolean value)": "Add extended data to the intent.",
        "Intent putExtra(String name, String value)": "Add extended data to the intent.",
        "Intent putExtra(String name, long value)": "Add extended data to the intent.",
        "Intent putExtra(String name, char value)": "Add extended data to the intent.",
        "Intent putExtra(String name, Serializable value)": "Add extended data to the intent.",
        "Intent putExtra(String name, float value)": "Add extended data to the intent.",
        "Intent putExtra(String name, short value)": "Add extended data to the intent.",
        "Intent putExtras(Intent src)": "Copy all extras in 'src' in to this intent.",
        "Intent putExtras(Bundle extras)": "Add a set of extended data to the intent.",
        "Intent putIntegerArrayListExtra(String name, ArrayList value)": "Add extended data to the intent.",
        "Intent putParcelableArrayListExtra(String name, ArrayList value)": "Add extended data to the intent.",
        "Intent putStringArrayListExtra(String name, ArrayList value)": "Add extended data to the intent.",
        "void readFromParcel(Parcel in)": "void readFromParcel(Parcel in)",
        "void removeCategory(String category)": "Remove a category from an intent.",
        "void removeExtra(String name)": "Remove extended data from the intent.",
        "void removeFlags(int flags)": "Remove these flags from the intent.",
        "Intent replaceExtras(Intent src)": "Completely replace the extras in the Intent with the extras in the given Intent.",
        "Intent replaceExtras(Bundle extras)": "Completely replace the extras in the Intent with the given Bundle of extras.",
        "ComponentName resolveActivity(PackageManager pm)": "Return the Activity component that should be used to handle this intent.",
        "ActivityInfo resolveActivityInfo(PackageManager pm, int flags)": "Resolve the Intent into an ActivityInfo describing the activity that should execute the intent.",
        "String resolveType(Context context)": "Return the MIME data type of this intent.",
        "String resolveType(ContentResolver resolver)": "Return the MIME data type of this intent.",
        "String resolveTypeIfNeeded(ContentResolver resolver)": "Return the MIME data type of this intent, only if it will be needed for intent resolution.",
        "Intent setAction(String action)": "Set the general action to be performed.",
        "Intent setClass(Context packageContext, Class cls)": "Convenience for calling setComponent(android.content.ComponentName) with the name returned by a Class object.",
        "Intent setClassName(String packageName, String className)": "Convenience for calling setComponent(ComponentName) with an explicit application package name and class name.",
        "Intent setClassName(Context packageContext, String className)": "Convenience for calling setComponent(ComponentName) with an explicit class name.",
        "void setClipData(ClipData clip)": "Set a ClipData associated with this Intent.",
        "Intent setComponent(ComponentName component)": "(Usually optional) Explicitly set the component to handle the intent.",
        "Intent setData(Uri data)": "Set the data this intent is operating on.",
        "Intent setDataAndNormalize(Uri data)": "Normalize and set the data this intent is operating on.",
        "Intent setDataAndType(Uri data, String type)": "(Usually optional) Set the data for the intent along with an explicit MIME data type.",
        "Intent setDataAndTypeAndNormalize(Uri data, String type)": "(Usually optional) Normalize and set both the data Uri and an explicit MIME data type.",
        "void setExtrasClassLoader(ClassLoader loader)": "Sets the ClassLoader that will be used when unmarshalling any Parcelable values from the extras of this Intent.",
        "Intent setFlags(int flags)": "Set special flags controlling how this intent is handled.",
        "Intent setIdentifier(String identifier)": "Set an identifier for this Intent.",
        "Intent setPackage(String packageName)": "(Usually optional) Set an explicit application package name that limits the components this Intent will resolve to.",
        "void setSelector(Intent selector)": "Set a selector for this Intent.",
        "void setSourceBounds(Rect r)": "Set the bounds of the sender of this intent, in screen coordinates.",
        "Intent setType(String type)": "Set an explicit MIME data type.",
        "Intent setTypeAndNormalize(String type)": "Normalize and set an explicit MIME data type.",
        "String toString()": "Returns a string representation of the object.",
        "String toURI()": "This method was deprecated in API level 15. Use toUri(int) instead.",
        "String toUri(int flags)": "Convert this Intent into a String holding a URI representation of it.",
        "void writeToParcel(Parcel out, int flags)": "Flatten this object in to a Parcel."
    },
    "super class": [
    ]
}