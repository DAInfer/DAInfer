{
    "class": "JsonElement",
    "category": "Class",
    "methods": {
        "JsonElement deepCopy()": "Returns a deep copy of this element.",
        "java.math.BigDecimal getAsBigDecimal()": "convenience method to get this element as a BigDecimal.",
        "java.math.BigInteger getAsBigInteger()": "convenience method to get this element as a BigInteger.",
        "boolean getAsBoolean()": "convenience method to get this element as a boolean value.",
        "byte getAsByte()": "convenience method to get this element as a primitive byte value.",
        "char getAsCharacter()": "convenience method to get this element as a primitive character value.",
        "double getAsDouble()": "convenience method to get this element as a primitive double value.",
        "float getAsFloat()": "convenience method to get this element as a primitive float value.",
        "int getAsInt()": "convenience method to get this element as a primitive integer value.",
        "JsonArray getAsJsonArray()": "convenience method to get this element as a JsonArray.",
        "JsonNull getAsJsonNull()": "convenience method to get this element as a JsonNull.",
        "JsonObject getAsJsonObject()": "convenience method to get this element as a JsonObject.",
        "JsonPrimitive getAsJsonPrimitive()": "convenience method to get this element as a JsonPrimitive.",
        "long getAsLong()": "convenience method to get this element as a primitive long value.",
        "java.lang.Number getAsNumber()": "convenience method to get this element as a Number.",
        "short getAsShort()": "convenience method to get this element as a primitive short value.",
        "java.lang.String getAsString()": "convenience method to get this element as a string value.",
        "boolean isJsonArray()": "provides check for verifying if this element is an array or not.",
        "boolean isJsonNull()": "provides check for verifying if this element represents a null value or not.",
        "boolean isJsonObject()": "provides check for verifying if this element is a Json object or not.",
        "boolean isJsonPrimitive()": "provides check for verifying if this element is a primitive or not.",
        "java.lang.String toString()": "Returns a String representation of this element."
    },
    "super class": []
}