{
    "class": "CallableStatement",
    "category": "Interface",
    "methods": {
        "Array getArray(int parameterIndex)": "Retrieves the value of the designated JDBC ARRAY parameter as an Array object in the Java programming language.",
        "Array getArray(String parameterName)": "Retrieves the value of a JDBC ARRAY parameter as an Array object in the Java programming language.",
        "BigDecimal getBigDecimal(int parameterIndex)": "Retrieves the value of the designated JDBC NUMERIC parameter as a java.math.BigDecimal object with as many digits to the right of the decimal point as the value contains.",
        "BigDecimal getBigDecimal(String parameterName)": "Retrieves the value of a JDBC NUMERIC parameter as a java.math.BigDecimal object with as many digits to the right of the decimal point as the value contains.",
        "Blob getBlob(int parameterIndex)": "Retrieves the value of the designated JDBC BLOB parameter as a Blob object in the Java programming language.",
        "Blob getBlob(String parameterName)": "Retrieves the value of a JDBC BLOB parameter as a Blob object in the Java programming language.",
        "boolean getBoolean(int parameterIndex)": "Retrieves the value of the designated JDBC BIT or BOOLEAN parameter as a boolean in the Java programming language.",
        "boolean getBoolean(String parameterName)": "Retrieves the value of a JDBC BIT or BOOLEAN parameter as a boolean in the Java programming language.",
        "byte getByte(int parameterIndex)": "Retrieves the value of the designated JDBC TINYINT parameter as a byte in the Java programming language.",
        "byte getByte(String parameterName)": "Retrieves the value of a JDBC TINYINT parameter as a byte in the Java programming language.",
        "byte[] getBytes(int parameterIndex)": "Retrieves the value of the designated JDBC BINARY or VARBINARY parameter as an array of byte values in the Java programming language.",
        "byte[] getBytes(String parameterName)": "Retrieves the value of a JDBC BINARY or VARBINARY parameter as an array of byte values in the Java programming language.",
        "Reader getCharacterStream(int parameterIndex)": "Retrieves the value of the designated parameter as a java.io.Reader object in the Java programming language.",
        "Reader getCharacterStream(String parameterName)": "Retrieves the value of the designated parameter as a java.io.Reader object in the Java programming language.",
        "Clob getClob(int parameterIndex)": "Retrieves the value of the designated JDBC CLOB parameter as a java.sql.Clob object in the Java programming language.",
        "Clob getClob(String parameterName)": "Retrieves the value of a JDBC CLOB parameter as a java.sql.Clob object in the Java programming language.",
        "Date getDate(int parameterIndex)": "Retrieves the value of the designated JDBC DATE parameter as a java.sql.Date object.",
        "Date getDate(int parameterIndex, Calendar cal)": "Retrieves the value of the designated JDBC DATE parameter as a java.sql.Date object, using the given Calendar object to construct the date.",
        "Date getDate(String parameterName)": "Retrieves the value of a JDBC DATE parameter as a java.sql.Date object.",
        "Date getDate(String parameterName, Calendar cal)": "Retrieves the value of a JDBC DATE parameter as a java.sql.Date object, using the given Calendar object to construct the date.",
        "double getDouble(int parameterIndex)": "Retrieves the value of the designated JDBC DOUBLE parameter as a double in the Java programming language.",
        "double getDouble(String parameterName)": "Retrieves the value of a JDBC DOUBLE parameter as a double in the Java programming language.",
        "float getFloat(int parameterIndex)": "Retrieves the value of the designated JDBC FLOAT parameter as a float in the Java programming language.",
        "float getFloat(String parameterName)": "Retrieves the value of a JDBC FLOAT parameter as a float in the Java programming language.",
        "int getInt(int parameterIndex)": "Retrieves the value of the designated JDBC INTEGER parameter as an int in the Java programming language.",
        "int getInt(String parameterName)": "Retrieves the value of a JDBC INTEGER parameter as an int in the Java programming language.",
        "long getLong(int parameterIndex)": "Retrieves the value of the designated JDBC BIGINT parameter as a long in the Java programming language.",
        "long getLong(String parameterName)": "Retrieves the value of a JDBC BIGINT parameter as a long in the Java programming language.",
        "Reader getNCharacterStream(int parameterIndex)": "Retrieves the value of the designated parameter as a java.io.Reader object in the Java programming language.",
        "Reader getNCharacterStream(String parameterName)": "Retrieves the value of the designated parameter as a java.io.Reader object in the Java programming language.",
        "NClob getNClob(int parameterIndex)": "Retrieves the value of the designated JDBC NCLOB parameter as a java.sql.NClob object in the Java programming language.",
        "NClob getNClob(String parameterName)": "Retrieves the value of a JDBC NCLOB parameter as a java.sql.NClob object in the Java programming language.",
        "String getNString(int parameterIndex)": "Retrieves the value of the designated NCHAR, NVARCHAR or LONGNVARCHAR parameter as a String in the Java programming language.",
        "String getNString(String parameterName)": "Retrieves the value of the designated NCHAR, NVARCHAR or LONGNVARCHAR parameter as a String in the Java programming language.",
        "Object getObject(int parameterIndex)": "Retrieves the value of the designated parameter as an Object in the Java programming language.",
        "T getObject(int parameterIndex, Class type)": "Returns an object representing the value of OUT parameter parameterIndex and will convert from the SQL type of the parameter to the requested Java data type, if the conversion is supported.",
        "Object getObject(int parameterIndex, Map map)": "Returns an object representing the value of OUT parameter parameterIndex and uses map for the custom mapping of the parameter value.",
        "Object getObject(String parameterName)": "Retrieves the value of a parameter as an Object in the Java programming language.",
        "T getObject(String parameterName, Class type)": "Returns an object representing the value of OUT parameter parameterName and will convert from the SQL type of the parameter to the requested Java data type, if the conversion is supported.",
        "Object getObject(String parameterName, Map map)": "Returns an object representing the value of OUT parameter parameterName and uses map for the custom mapping of the parameter value.",
        "Ref getRef(int parameterIndex)": "Retrieves the value of the designated JDBC REF(<structured-type>) parameter as a Ref object in the Java programming language.",
        "Ref getRef(String parameterName)": "Retrieves the value of a JDBC REF(<structured-type>) parameter as a Ref object in the Java programming language.",
        "RowId getRowId(int parameterIndex)": "Retrieves the value of the designated JDBC ROWID parameter as a java.sql.RowId object.",
        "RowId getRowId(String parameterName)": "Retrieves the value of the designated JDBC ROWID parameter as a java.sql.RowId object.",
        "short getShort(int parameterIndex)": "Retrieves the value of the designated JDBC SMALLINT parameter as a short in the Java programming language.",
        "short getShort(String parameterName)": "Retrieves the value of a JDBC SMALLINT parameter as a short in the Java programming language.",
        "SQLXML getSQLXML(int parameterIndex)": "Retrieves the value of the designated SQL XML parameter as a java.sql.SQLXML object in the Java programming language.",
        "SQLXML getSQLXML(String parameterName)": "Retrieves the value of the designated SQL XML parameter as a java.sql.SQLXML object in the Java programming language.",
        "String getString(int parameterIndex)": "Retrieves the value of the designated JDBC CHAR, VARCHAR, or LONGVARCHAR parameter as a String in the Java programming language.",
        "String getString(String parameterName)": "Retrieves the value of a JDBC CHAR, VARCHAR, or LONGVARCHAR parameter as a String in the Java programming language.",
        "Time getTime(int parameterIndex)": "Retrieves the value of the designated JDBC TIME parameter as a java.sql.Time object.",
        "Time getTime(int parameterIndex, Calendar cal)": "Retrieves the value of the designated JDBC TIME parameter as a java.sql.Time object, using the given Calendar object to construct the time.",
        "Time getTime(String parameterName)": "Retrieves the value of a JDBC TIME parameter as a java.sql.Time object.",
        "Time getTime(String parameterName, Calendar cal)": "Retrieves the value of a JDBC TIME parameter as a java.sql.Time object, using the given Calendar object to construct the time.",
        "Timestamp getTimestamp(int parameterIndex)": "Retrieves the value of the designated JDBC TIMESTAMP parameter as a java.sql.Timestamp object.",
        "Timestamp getTimestamp(int parameterIndex, Calendar cal)": "Retrieves the value of the designated JDBC TIMESTAMP parameter as a java.sql.Timestamp object, using the given Calendar object to construct the Timestamp object.",
        "Timestamp getTimestamp(String parameterName)": "Retrieves the value of a JDBC TIMESTAMP parameter as a java.sql.Timestamp object.",
        "Timestamp getTimestamp(String parameterName, Calendar cal)": "Retrieves the value of a JDBC TIMESTAMP parameter as a java.sql.Timestamp object, using the given Calendar object to construct the Timestamp object.",
        "URL getURL(int parameterIndex)": "Retrieves the value of the designated JDBC DATALINK parameter as a java.net.URL object.",
        "URL getURL(String parameterName)": "Retrieves the value of a JDBC DATALINK parameter as a java.net.URL object.",
        "void registerOutParameter(int parameterIndex, int sqlType)": "Registers the OUT parameter in ordinal position parameterIndex to the JDBC type sqlType.",
        "void registerOutParameter(int parameterIndex, int sqlType, int scale)": "Registers the parameter in ordinal position parameterIndex to be of JDBC type sqlType.",
        "void registerOutParameter(int parameterIndex, int sqlType, String typeName)": "Registers the designated output parameter.",
        "void registerOutParameter(int parameterIndex, SQLType sqlType)": "Registers the OUT parameter in ordinal position parameterIndex to the JDBC type sqlType.",
        "void registerOutParameter(int parameterIndex, SQLType sqlType, int scale)": "Registers the parameter in ordinal position parameterIndex to be of JDBC type sqlType.",
        "void registerOutParameter(int parameterIndex, SQLType sqlType, String typeName)": "Registers the designated output parameter.",
        "void registerOutParameter(String parameterName, int sqlType)": "Registers the OUT parameter named parameterName to the JDBC type sqlType.",
        "void registerOutParameter(String parameterName, int sqlType, int scale)": "Registers the parameter named parameterName to be of JDBC type sqlType.",
        "void registerOutParameter(String parameterName, int sqlType, String typeName)": "Registers the designated output parameter.",
        "void registerOutParameter(String parameterName, SQLType sqlType)": "Registers the OUT parameter named parameterName to the JDBC type sqlType.",
        "void registerOutParameter(String parameterName, SQLType sqlType, int scale)": "Registers the parameter named parameterName to be of JDBC type sqlType.",
        "void registerOutParameter(String parameterName, SQLType sqlType, String typeName)": "Registers the designated output parameter.",
        "void setAsciiStream(String parameterName, InputStream x)": "Sets the designated parameter to the given input stream.",
        "void setAsciiStream(String parameterName, InputStream x, int length)": "Sets the designated parameter to the given input stream, which will have the specified number of bytes.",
        "void setAsciiStream(String parameterName, InputStream x, long length)": "Sets the designated parameter to the given input stream, which will have the specified number of bytes.",
        "void setBigDecimal(String parameterName, BigDecimal x)": "Sets the designated parameter to the given java.math.BigDecimal value.",
        "void setBinaryStream(String parameterName, InputStream x)": "Sets the designated parameter to the given input stream.",
        "void setBinaryStream(String parameterName, InputStream x, int length)": "Sets the designated parameter to the given input stream, which will have the specified number of bytes.",
        "void setBinaryStream(String parameterName, InputStream x, long length)": "Sets the designated parameter to the given input stream, which will have the specified number of bytes.",
        "void setBlob(String parameterName, Blob x)": "Sets the designated parameter to the given java.sql.Blob object.",
        "void setBlob(String parameterName, InputStream inputStream)": "Sets the designated parameter to a InputStream object.",
        "void setBlob(String parameterName, InputStream inputStream, long length)": "Sets the designated parameter to a InputStream object.",
        "void setBoolean(String parameterName, boolean x)": "Sets the designated parameter to the given Java boolean value.",
        "void setByte(String parameterName, byte x)": "Sets the designated parameter to the given Java byte value.",
        "void setBytes(String parameterName, byte[] x)": "Sets the designated parameter to the given Java array of bytes.",
        "void setCharacterStream(String parameterName, Reader reader)": "Sets the designated parameter to the given Reader object.",
        "void setCharacterStream(String parameterName, Reader reader, int length)": "Sets the designated parameter to the given Reader object, which is the given number of characters long.",
        "void setCharacterStream(String parameterName, Reader reader, long length)": "Sets the designated parameter to the given Reader object, which is the given number of characters long.",
        "void setClob(String parameterName, Clob x)": "Sets the designated parameter to the given java.sql.Clob object.",
        "void setClob(String parameterName, Reader reader)": "Sets the designated parameter to a Reader object.",
        "void setClob(String parameterName, Reader reader, long length)": "Sets the designated parameter to a Reader object.",
        "void setDate(String parameterName, Date x)": "Sets the designated parameter to the given java.sql.Date value using the default time zone of the virtual machine that is running the application.",
        "void setDate(String parameterName, Date x, Calendar cal)": "Sets the designated parameter to the given java.sql.Date value, using the given Calendar object.",
        "void setDouble(String parameterName, double x)": "Sets the designated parameter to the given Java double value.",
        "void setFloat(String parameterName, float x)": "Sets the designated parameter to the given Java float value.",
        "void setInt(String parameterName, int x)": "Sets the designated parameter to the given Java int value.",
        "void setLong(String parameterName, long x)": "Sets the designated parameter to the given Java long value.",
        "void setNCharacterStream(String parameterName, Reader value)": "Sets the designated parameter to a Reader object.",
        "void setNCharacterStream(String parameterName, Reader value, long length)": "Sets the designated parameter to a Reader object.",
        "void setNClob(String parameterName, NClob value)": "Sets the designated parameter to a java.sql.NClob object.",
        "void setNClob(String parameterName, Reader reader)": "Sets the designated parameter to a Reader object.",
        "void setNClob(String parameterName, Reader reader, long length)": "Sets the designated parameter to a Reader object.",
        "void setNString(String parameterName, String value)": "Sets the designated parameter to the given String object.",
        "void setNull(String parameterName, int sqlType)": "Sets the designated parameter to SQL NULL.",
        "void setNull(String parameterName, int sqlType, String typeName)": "Sets the designated parameter to SQL NULL.",
        "void setObject(String parameterName, Object x)": "Sets the value of the designated parameter with the given object.",
        "void setObject(String parameterName, Object x, int targetSqlType)": "Sets the value of the designated parameter with the given object.",
        "void setObject(String parameterName, Object x, int targetSqlType, int scale)": "Sets the value of the designated parameter with the given object.",
        "void setObject(String parameterName, Object x, SQLType targetSqlType)": "Sets the value of the designated parameter with the given object.",
        "void setObject(String parameterName, Object x, SQLType targetSqlType, int scaleOrLength)": "Sets the value of the designated parameter with the given object.",
        "void setRowId(String parameterName, RowId x)": "Sets the designated parameter to the given java.sql.RowId object.",
        "void setShort(String parameterName, short x)": "Sets the designated parameter to the given Java short value.",
        "void setSQLXML(String parameterName, SQLXML xmlObject)": "Sets the designated parameter to the given java.sql.SQLXML object.",
        "void setString(String parameterName, String x)": "Sets the designated parameter to the given Java String value.",
        "void setTime(String parameterName, Time x)": "Sets the designated parameter to the given java.sql.Time value.",
        "void setTime(String parameterName, Time x, Calendar cal)": "Sets the designated parameter to the given java.sql.Time value, using the given Calendar object.",
        "void setTimestamp(String parameterName, Timestamp x)": "Sets the designated parameter to the given java.sql.Timestamp value.",
        "void setTimestamp(String parameterName, Timestamp x, Calendar cal)": "Sets the designated parameter to the given java.sql.Timestamp value, using the given Calendar object.",
        "void setURL(String parameterName, URL val)": "Sets the designated parameter to the given java.net.URL object.",
        "boolean wasNull()": "Retrieves whether the last OUT parameter read had the value of SQL NULL."
    },
    "super class": [
        "java.lang.AutoCloseable",
        "java.sql.PreparedStatement",
        "java.sql.Statement",
        "java.sql.Wrapper"
    ]
}