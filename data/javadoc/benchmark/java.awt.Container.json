{
    "class": "Container",
    "category": "Class",
    "methods": {
        "Component add(Component comp)": "Appends the specified component to the end of this container.",
        "Component add(Component comp, int index)": "Adds the specified component to this container at the given position.",
        "void add(Component comp, Object constraints)": "Adds the specified component to the end of this container.",
        "void add(Component comp, Object constraints, int index)": "Adds the specified component to this container with the specified constraints at the specified index.",
        "Component add(String name, Component comp)": "Adds the specified component to this container.",
        "void addContainerListener(ContainerListener l)": "Adds the specified container listener to receive container events from this container.",
        "void addImpl(Component comp, Object constraints, int index)": "Adds the specified component to this container at the specified index.",
        "void addNotify()": "Makes this Container displayable by connecting it to a native screen resource.",
        "void addPropertyChangeListener(PropertyChangeListener listener)": "Adds a PropertyChangeListener to the listener list.",
        "void addPropertyChangeListener(String propertyName, PropertyChangeListener listener)": "Adds a PropertyChangeListener to the listener list for a specific property.",
        "void applyComponentOrientation(ComponentOrientation o)": "Sets the ComponentOrientation property of this container and all components contained within it.",
        "boolean areFocusTraversalKeysSet(int id)": "Returns whether the Set of focus traversal keys for the given focus traversal operation has been explicitly defined for this Container.",
        "void doLayout()": "Causes this container to lay out its components.",
        "Component findComponentAt(int x, int y)": "Locates the visible child component that contains the specified position.",
        "Component findComponentAt(Point p)": "Locates the visible child component that contains the specified point.",
        "float getAlignmentX()": "Returns the alignment along the x axis.",
        "float getAlignmentY()": "Returns the alignment along the y axis.",
        "Component getComponent(int n)": "Gets the nth component in this container.",
        "Component getComponentAt(int x, int y)": "Locates the component that contains the x, y position.",
        "Component getComponentAt(Point p)": "Gets the component that contains the specified point.",
        "int getComponentCount()": "Gets the number of components in this panel.",
        "Component[] getComponents()": "Gets all the components in this container.",
        "int getComponentZOrder(Component comp)": "Returns the z-order index of the component inside the container.",
        "ContainerListener[] getContainerListeners()": "Returns an array of all the container listeners registered on this container.",
        "Set getFocusTraversalKeys(int id)": "Returns the Set of focus traversal keys for a given traversal operation for this Container.",
        "FocusTraversalPolicy getFocusTraversalPolicy()": "Returns the focus traversal policy that will manage keyboard traversal of this Container's children, or null if this Container is not a focus cycle root.",
        "Insets getInsets()": "Determines the insets of this container, which indicate the size of the container's border.",
        "LayoutManager getLayout()": "Gets the layout manager for this container.",
        "T[] getListeners(Class listenerType)": "Returns an array of all the objects currently registered as FooListeners upon this Container.",
        "Dimension getMaximumSize()": "Returns the maximum size of this container.",
        "Dimension getMinimumSize()": "Returns the minimum size of this container.",
        "Point getMousePosition(boolean allowChildren)": "Returns the position of the mouse pointer in this Container's coordinate space if the Container is under the mouse pointer, otherwise returns null.",
        "Dimension getPreferredSize()": "Returns the preferred size of this container.",
        "void invalidate()": "Invalidates the container.",
        "boolean isAncestorOf(Component c)": "Checks if the component is contained in the component hierarchy of this container.",
        "boolean isFocusCycleRoot()": "Returns whether this Container is the root of a focus traversal cycle.",
        "boolean isFocusCycleRoot(Container container)": "Returns whether the specified Container is the focus cycle root of this Container's focus traversal cycle.",
        "boolean isFocusTraversalPolicyProvider()": "Returns whether this container provides focus traversal policy.",
        "boolean isFocusTraversalPolicySet()": "Returns whether the focus traversal policy has been explicitly set for this Container.",
        "boolean isValidateRoot()": "Indicates if this container is a validate root.",
        "void list(PrintStream out, int indent)": "Prints a listing of this container to the specified output stream.",
        "void list(PrintWriter out, int indent)": "Prints out a list, starting at the specified indentation, to the specified print writer.",
        "void paint(Graphics g)": "Paints the container.",
        "void paintComponents(Graphics g)": "Paints each of the components in this container.",
        "String paramString()": "Returns a string representing the state of this Container.",
        "void print(Graphics g)": "Prints the container.",
        "void printComponents(Graphics g)": "Prints each of the components in this container.",
        "void processContainerEvent(ContainerEvent e)": "Processes container events occurring on this container by dispatching them to any registered ContainerListener objects.",
        "void processEvent(AWTEvent e)": "Processes events on this container.",
        "void remove(Component comp)": "Removes the specified component from this container.",
        "void remove(int index)": "Removes the component, specified by index, from this container.",
        "void removeAll()": "Removes all the components from this container.",
        "void removeContainerListener(ContainerListener l)": "Removes the specified container listener so it no longer receives container events from this container.",
        "void removeNotify()": "Makes this Container undisplayable by removing its connection to its native screen resource.",
        "void setComponentZOrder(Component comp, int index)": "Moves the specified component to the specified z-order index in the container.",
        "void setFocusCycleRoot(boolean focusCycleRoot)": "Sets whether this Container is the root of a focus traversal cycle.",
        "void setFocusTraversalKeys(int id, Set keystrokes)": "Sets the focus traversal keys for a given traversal operation for this Container.",
        "void setFocusTraversalPolicy(FocusTraversalPolicy policy)": "Sets the focus traversal policy that will manage keyboard traversal of this Container's children, if this Container is a focus cycle root.",
        "void setFocusTraversalPolicyProvider(boolean provider)": "Sets whether this container will be used to provide focus traversal policy.",
        "void setFont(Font f)": "Sets the font of this container.",
        "void setLayout(LayoutManager mgr)": "Sets the layout manager for this container.",
        "void transferFocusDownCycle()": "Transfers the focus down one focus traversal cycle.",
        "void update(Graphics g)": "Updates the container.",
        "void validate()": "Validates this container and all of its subcomponents.",
        "void validateTree()": "Recursively descends the container tree and recomputes the layout for any subtrees marked as needing it (those marked as invalid)."
    },
    "super class": [
        "java.awt.Component"
    ]
}