{
    "class": "ObjectNode",
    "category": "Class",
    "methods": {
        "JsonNode _at(com.fasterxml.jackson.core.JsonPointer ptr)": "",
        "boolean _childrenEqual(ObjectNode other)": "",
        "ObjectNode _put(String fieldName, JsonNode value)": "",
        "com.fasterxml.jackson.core.JsonToken asToken()": "Method that can be used for efficient type detection when using stream abstraction for traversing nodes.",
        "ObjectNode deepCopy()": "Method that can be called to get a node that is guaranteed not to allow changing of this node through mutators on this node or any of its children.",
        "Iterator elements()": "Method for accessing all value nodes of this Node, iff this node is a JSON Array or Object node.",
        "boolean equals(Comparator comparator, JsonNode o)": "Entry method for invoking customizable comparison, using passed-in Comparator object.",
        "boolean equals(Object o)": "Equality for node objects is defined as full (deep) value equality.",
        "Iterator fieldNames()": "",
        "Iterator fields()": "Method to use for accessing all fields (with both names and values) of this JSON Object.",
        "ObjectNode findParent(String fieldName)": "Method for finding a JSON Object that contains specified field, within this node or its descendants.",
        "List findParents(String fieldName, List foundSoFar)": "",
        "JsonNode findValue(String fieldName)": "Method for finding a JSON Object field with specified name in this node or its child nodes, and returning value it has.",
        "List findValues(String fieldName, List foundSoFar)": "",
        "List findValuesAsText(String fieldName, List foundSoFar)": "",
        "JsonNode get(int index)": "Method for accessing value of the specified element of an array node.",
        "JsonNode get(String fieldName)": "Method for accessing value of the specified field of an object node.",
        "JsonNodeType getNodeType()": "Return the type of this node",
        "int hashCode()": "",
        "boolean isEmpty(SerializerProvider serializers)": "Method that may be called on instance to determine if it is considered \"empty\" for purposes of serialization filtering or not.",
        "JsonNode path(int index)": "This method is similar to JsonNode.get(int), except that instead of returning null if no such element exists (due to index being out of range, or this node not being an array), a \"missing node\" (node that returns true for JsonNode.isMissingNode()) will be returned.",
        "JsonNode path(String fieldName)": "This method is similar to JsonNode.get(String), except that instead of returning null if no such value exists (due to this node not being an object, or object not having value for the specified field), a \"missing node\" (node that returns true for JsonNode.isMissingNode()) will be returned.",
        "ObjectNode put(String fieldName, BigDecimal v)": "Method for setting value of a field to specified numeric value.",
        "ObjectNode put(String fieldName, boolean v)": "Method for setting value of a field to specified String value.",
        "ObjectNode put(String fieldName, Boolean v)": "Alternative method that we need to avoid bumping into NPE issues with auto-unboxing.",
        "ObjectNode put(String fieldName, byte[] v)": "Method for setting value of a field to specified binary value",
        "ObjectNode put(String fieldName, double v)": "Method for setting value of a field to specified numeric value.",
        "ObjectNode put(String fieldName, Double v)": "Alternative method that we need to avoid bumping into NPE issues with auto-unboxing.",
        "ObjectNode put(String fieldName, float v)": "Method for setting value of a field to specified numeric value.",
        "ObjectNode put(String fieldName, Float v)": "Alternative method that we need to avoid bumping into NPE issues with auto-unboxing.",
        "ObjectNode put(String fieldName, int v)": "Method for setting value of a field to specified numeric value.",
        "ObjectNode put(String fieldName, Integer v)": "Alternative method that we need to avoid bumping into NPE issues with auto-unboxing.",
        "ObjectNode put(String fieldName, long v)": "Method for setting value of a field to specified numeric value.",
        "ObjectNode put(String fieldName, Long v)": "Method for setting value of a field to specified numeric value.",
        "ObjectNode put(String fieldName, short v)": "Method for setting value of a field to specified numeric value.",
        "ObjectNode put(String fieldName, Short v)": "Alternative method that we need to avoid bumping into NPE issues with auto-unboxing.",
        "ObjectNode put(String fieldName, String v)": "Method for setting value of a field to specified String value.",
        "ArrayNode putArray(String fieldName)": "Method that will construct an ArrayNode and add it as a field of this ObjectNode, replacing old value, if any.",
        "ObjectNode putNull(String fieldName)": "",
        "ObjectNode putObject(String fieldName)": "Method that will construct an ObjectNode and add it as a field of this ObjectNode, replacing old value, if any.",
        "ObjectNode putPOJO(String fieldName, Object pojo)": "",
        "ObjectNode putRawValue(String fieldName, RawValue raw)": "",
        "ObjectNode remove(Collection fieldNames)": "Method for removing specified field properties out of this ObjectNode.",
        "JsonNode remove(String fieldName)": "Method for removing field entry from this ObjectNode.",
        "ObjectNode removeAll()": "Method for removing all field properties, such that this ObjectNode will contain no properties after call.",
        "JsonNode replace(String fieldName, JsonNode value)": "Method for replacing value of specific property with passed value, and returning value (or null if none).",
        "ObjectNode retain(Collection fieldNames)": "Method for removing all field properties out of this ObjectNode except for ones specified in argument.",
        "ObjectNode retain(String... fieldNames)": "Method for removing all field properties out of this ObjectNode except for ones specified in argument.",
        "void serialize(com.fasterxml.jackson.core.JsonGenerator jg, SerializerProvider provider)": "Method that can be called to serialize this node and all of its descendants using specified JSON generator.",
        "void serializeWithType(com.fasterxml.jackson.core.JsonGenerator jg, SerializerProvider provider, TypeSerializer typeSer)": "Type information is needed, even if JsonNode instances are \"plain\" JSON, since they may be mixed with other types.",
        "JsonNode set(String fieldName, JsonNode value)": "Method that will set specified field, replacing old value, if any.",
        "JsonNode setAll(Map properties)": "Method for adding given properties to this object node, overriding any existing values for those properties.",
        "JsonNode setAll(ObjectNode other)": "Method for adding all properties of the given Object, overriding any existing values for those properties.",
        "int size()": "",
        "String toString()": "Note: marked as abstract to ensure all implementation classes define it properly.",
        "ObjectNode with(String propertyName)": "Method that can be called on Object nodes, to access a property that has Object value; or if no such property exists, to create, add and return such Object node.",
        "ArrayNode withArray(String propertyName)": "Method that can be called on Object nodes, to access a property that has Array value; or if no such property exists, to create, add and return such Array node.",
        "ObjectNode without(Collection fieldNames)": "Method for removing specified field properties out of this ObjectNode.",
        "JsonNode without(String fieldName)": "Method for removing field entry from this ObjectNode, and returning instance after removal."
    },
    "super class": [
        "com.fasterxml.jackson.databind.node.ContainerNode",
        "com.fasterxml.jackson.databind.node.BaseJsonNode",
        "com.fasterxml.jackson.databind.JsonNode",
        "com.fasterxml.jackson.databind.JsonSerializable.Base"
    ]
}