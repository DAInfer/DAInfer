{
    "FastMap atomic()": {
        "return type": "FastMap",
        "method name": "atomic",
        "parameters": []
    },
    "void clear()": {
        "return type": "void",
        "method name": "clear",
        "parameters": []
    },
    "boolean containsKey(Object key)": {
        "return type": "boolean",
        "method name": "containsKey",
        "parameters": [
            "Object"
        ]
    },
    "boolean containsValue(Object value)": {
        "return type": "boolean",
        "method name": "containsValue",
        "parameters": [
            "Object"
        ]
    },
    "FastSet entrySet()": {
        "return type": "FastSet",
        "method name": "entrySet",
        "parameters": []
    },
    "V get(Object key)": {
        "return type": "V",
        "method name": "get",
        "parameters": [
            "Object"
        ]
    },
    "boolean isEmpty()": {
        "return type": "boolean",
        "method name": "isEmpty",
        "parameters": []
    },
    "FastSet keySet()": {
        "return type": "FastSet",
        "method name": "keySet",
        "parameters": []
    },
    "FastMap parallel()": {
        "return type": "FastMap",
        "method name": "parallel",
        "parameters": []
    },
    "void perform(Consumer action)": {
        "return type": "void",
        "method name": "perform",
        "parameters": [
            "Consumer"
        ]
    },
    "V put(K key, V value)": {
        "return type": "V",
        "method name": "put",
        "parameters": [
            "K",
            "V"
        ]
    },
    "FastMap putAll(FastMap that)": {
        "return type": "FastMap",
        "method name": "putAll",
        "parameters": [
            "FastMap"
        ]
    },
    "void putAll(Map map)": {
        "return type": "void",
        "method name": "putAll",
        "parameters": [
            "Map"
        ]
    },
    "V putIfAbsent(K key, V value)": {
        "return type": "V",
        "method name": "putIfAbsent",
        "parameters": [
            "K",
            "V"
        ]
    },
    "V remove(Object key)": {
        "return type": "V",
        "method name": "remove",
        "parameters": [
            "Object"
        ]
    },
    "boolean remove(Object key, Object value)": {
        "return type": "boolean",
        "method name": "remove",
        "parameters": [
            "Object",
            "Object"
        ]
    },
    "V replace(K key, V value)": {
        "return type": "V",
        "method name": "replace",
        "parameters": [
            "K",
            "V"
        ]
    },
    "boolean replace(K key, V oldValue, V newValue)": {
        "return type": "boolean",
        "method name": "replace",
        "parameters": [
            "K",
            "V",
            "V"
        ]
    },
    "FastMap sequential()": {
        "return type": "FastMap",
        "method name": "sequential",
        "parameters": []
    },
    "MapService service()": {
        "return type": "MapService",
        "method name": "service",
        "parameters": []
    },
    "FastMap shared()": {
        "return type": "FastMap",
        "method name": "shared",
        "parameters": []
    },
    "int size()": {
        "return type": "int",
        "method name": "size",
        "parameters": []
    },
    "Immutable toImmutable()": {
        "return type": "Immutable",
        "method name": "toImmutable",
        "parameters": []
    },
    "String toString()": {
        "return type": "String",
        "method name": "toString",
        "parameters": []
    },
    "FastMap unmodifiable()": {
        "return type": "FastMap",
        "method name": "unmodifiable",
        "parameters": []
    },
    "void update(Consumer action)": {
        "return type": "void",
        "method name": "update",
        "parameters": [
            "Consumer"
        ]
    },
    "FastCollection values()": {
        "return type": "FastCollection",
        "method name": "values",
        "parameters": []
    }
}