{
    "int computeHashCode(int val)": {
        "return type": "int",
        "method name": "computeHashCode",
        "parameters": [
            "int"
        ]
    },
    "boolean contains(int val)": {
        "return type": "boolean",
        "method name": "contains",
        "parameters": [
            "int"
        ]
    },
    "boolean forEach(TIntProcedure procedure)": {
        "return type": "boolean",
        "method name": "forEach",
        "parameters": [
            "TIntProcedure"
        ]
    },
    "protected int index(int val)": {
        "return type": "protected",
        "method name": "int index",
        "parameters": [
            "int"
        ]
    },
    "protected int insertionIndex(int val)": {
        "return type": "protected",
        "method name": "int insertionIndex",
        "parameters": [
            "int"
        ]
    },
    "protected void removeAt(int index)": {
        "return type": "protected",
        "method name": "void removeAt",
        "parameters": [
            "int"
        ]
    },
    "protected int setUp(int initialCapacity)": {
        "return type": "protected",
        "method name": "int setUp",
        "parameters": [
            "int"
        ]
    },
    "int calculateGrownCapacity()": {
        "return type": "int",
        "method name": "calculateGrownCapacity",
        "parameters": []
    },
    "abstract int capacity()": {
        "return type": "int",
        "method name": "capacity",
        "parameters": []
    },
    "void clear()": {
        "return type": "void",
        "method name": "clear",
        "parameters": []
    },
    "java.lang.Object clone()": {
        "return type": "java.lang.Object",
        "method name": "clone",
        "parameters": []
    },
    "void compact()": {
        "return type": "void",
        "method name": "compact",
        "parameters": []
    },
    "void ensureCapacity(int desiredCapacity)": {
        "return type": "void",
        "method name": "ensureCapacity",
        "parameters": [
            "int"
        ]
    },
    "float getAutoCompactionFactor()": {
        "return type": "float",
        "method name": "getAutoCompactionFactor",
        "parameters": []
    },
    "boolean isEmpty()": {
        "return type": "boolean",
        "method name": "isEmpty",
        "parameters": []
    },
    "void postInsertHook(boolean usedFreeSlot)": {
        "return type": "void",
        "method name": "postInsertHook",
        "parameters": [
            "boolean"
        ]
    },
    "void reenableAutoCompaction(boolean check_for_compaction)": {
        "return type": "void",
        "method name": "reenableAutoCompaction",
        "parameters": [
            "boolean"
        ]
    },
    "abstract void rehash(int newCapacity)": {
        "return type": "void",
        "method name": "rehash",
        "parameters": [
            "int"
        ]
    },
    "void removeAt(int index)": {
        "return type": "void",
        "method name": "removeAt",
        "parameters": [
            "int"
        ]
    },
    "void setAutoCompactionFactor(float factor)": {
        "return type": "void",
        "method name": "setAutoCompactionFactor",
        "parameters": [
            "float"
        ]
    },
    "int setUp(int initialCapacity)": {
        "return type": "int",
        "method name": "setUp",
        "parameters": [
            "int"
        ]
    },
    "int size()": {
        "return type": "int",
        "method name": "size",
        "parameters": []
    },
    "void tempDisableAutoCompaction()": {
        "return type": "void",
        "method name": "tempDisableAutoCompaction",
        "parameters": []
    },
    "void trimToSize()": {
        "return type": "void",
        "method name": "trimToSize",
        "parameters": []
    },
    "int capacity()": {
        "return type": "int",
        "method name": "capacity",
        "parameters": []
    }
}