{
    "TIntObjectHashMap<V> clone()": {
        "return type": "TIntObjectHashMap",
        "method name": "clone",
        "parameters": []
    },
    "boolean containsKey(int key)": {
        "return type": "boolean",
        "method name": "containsKey",
        "parameters": [
            "int"
        ]
    },
    "boolean containsValue(V val)": {
        "return type": "boolean",
        "method name": "containsValue",
        "parameters": [
            "V"
        ]
    },
    "boolean equals(java.lang.Object other)": {
        "return type": "boolean",
        "method name": "equals",
        "parameters": [
            "java.lang.Object"
        ]
    },
    "boolean forEachEntry(TIntObjectProcedure<V> procedure)": {
        "return type": "boolean",
        "method name": "forEachEntry",
        "parameters": [
            "TIntObjectProcedure"
        ]
    },
    "boolean forEachKey(TIntProcedure procedure)": {
        "return type": "boolean",
        "method name": "forEachKey",
        "parameters": [
            "TIntProcedure"
        ]
    },
    "boolean forEachValue(TObjectProcedure<V> procedure)": {
        "return type": "boolean",
        "method name": "forEachValue",
        "parameters": [
            "TObjectProcedure"
        ]
    },
    "V get(int key)": {
        "return type": "V",
        "method name": "get",
        "parameters": [
            "int"
        ]
    },
    "java.lang.Object[] getValues()": {
        "return type": "java.lang.Object[]",
        "method name": "getValues",
        "parameters": []
    },
    "<T> T[] getValues(T[] a)": {
        "return type": "T[]",
        "method name": "getValues",
        "parameters": [
            "T[]"
        ]
    },
    "int hashCode()": {
        "return type": "int",
        "method name": "hashCode",
        "parameters": []
    },
    "TIntObjectIterator<V> iterator()": {
        "return type": "TIntObjectIterator",
        "method name": "iterator",
        "parameters": []
    },
    "int[] keys()": {
        "return type": "int[]",
        "method name": "keys",
        "parameters": []
    },
    "V put(int key, V value)": {
        "return type": "V",
        "method name": "put",
        "parameters": [
            "int",
            "V"
        ]
    },
    "void readExternal(java.io.ObjectInput in)": {
        "return type": "void",
        "method name": "readExternal",
        "parameters": [
            "java.io.ObjectInput"
        ]
    },
    "protected void rehash(int newCapacity)": {
        "return type": "protected",
        "method name": "void rehash",
        "parameters": [
            "int"
        ]
    },
    "V remove(int key)": {
        "return type": "V",
        "method name": "remove",
        "parameters": [
            "int"
        ]
    },
    "void removeAt(int index)": {
        "return type": "void",
        "method name": "removeAt",
        "parameters": [
            "int"
        ]
    },
    "boolean retainEntries(TIntObjectProcedure<V> procedure)": {
        "return type": "boolean",
        "method name": "retainEntries",
        "parameters": [
            "TIntObjectProcedure"
        ]
    },
    "int setUp(int initialCapacity)": {
        "return type": "int",
        "method name": "setUp",
        "parameters": [
            "int"
        ]
    },
    "void transformValues(TObjectFunction<V,V> function)": {
        "return type": "void",
        "method name": "transformValues",
        "parameters": [
            "TObjectFunction"
        ]
    },
    "void writeExternal(java.io.ObjectOutput out)": {
        "return type": "void",
        "method name": "writeExternal",
        "parameters": [
            "java.io.ObjectOutput"
        ]
    },
    "int calculateGrownCapacity()": {
        "return type": "int",
        "method name": "calculateGrownCapacity",
        "parameters": []
    },
    "abstract int capacity()": {
        "return type": "int",
        "method name": "capacity",
        "parameters": []
    },
    "void clear()": {
        "return type": "void",
        "method name": "clear",
        "parameters": []
    },
    "java.lang.Object clone()": {
        "return type": "java.lang.Object",
        "method name": "clone",
        "parameters": []
    },
    "void compact()": {
        "return type": "void",
        "method name": "compact",
        "parameters": []
    },
    "void ensureCapacity(int desiredCapacity)": {
        "return type": "void",
        "method name": "ensureCapacity",
        "parameters": [
            "int"
        ]
    },
    "float getAutoCompactionFactor()": {
        "return type": "float",
        "method name": "getAutoCompactionFactor",
        "parameters": []
    },
    "boolean isEmpty()": {
        "return type": "boolean",
        "method name": "isEmpty",
        "parameters": []
    },
    "void postInsertHook(boolean usedFreeSlot)": {
        "return type": "void",
        "method name": "postInsertHook",
        "parameters": [
            "boolean"
        ]
    },
    "void reenableAutoCompaction(boolean check_for_compaction)": {
        "return type": "void",
        "method name": "reenableAutoCompaction",
        "parameters": [
            "boolean"
        ]
    },
    "abstract void rehash(int newCapacity)": {
        "return type": "void",
        "method name": "rehash",
        "parameters": [
            "int"
        ]
    },
    "void setAutoCompactionFactor(float factor)": {
        "return type": "void",
        "method name": "setAutoCompactionFactor",
        "parameters": [
            "float"
        ]
    },
    "int size()": {
        "return type": "int",
        "method name": "size",
        "parameters": []
    },
    "void tempDisableAutoCompaction()": {
        "return type": "void",
        "method name": "tempDisableAutoCompaction",
        "parameters": []
    },
    "void trimToSize()": {
        "return type": "void",
        "method name": "trimToSize",
        "parameters": []
    },
    "int capacity()": {
        "return type": "int",
        "method name": "capacity",
        "parameters": []
    },
    "int computeHashCode(int val)": {
        "return type": "int",
        "method name": "computeHashCode",
        "parameters": [
            "int"
        ]
    },
    "boolean contains(int val)": {
        "return type": "boolean",
        "method name": "contains",
        "parameters": [
            "int"
        ]
    },
    "boolean forEach(TIntProcedure procedure)": {
        "return type": "boolean",
        "method name": "forEach",
        "parameters": [
            "TIntProcedure"
        ]
    },
    "protected int index(int val)": {
        "return type": "protected",
        "method name": "int index",
        "parameters": [
            "int"
        ]
    },
    "protected int insertionIndex(int val)": {
        "return type": "protected",
        "method name": "int insertionIndex",
        "parameters": [
            "int"
        ]
    },
    "protected void removeAt(int index)": {
        "return type": "protected",
        "method name": "void removeAt",
        "parameters": [
            "int"
        ]
    },
    "protected int setUp(int initialCapacity)": {
        "return type": "protected",
        "method name": "int setUp",
        "parameters": [
            "int"
        ]
    }
}