{
    "E accumulateAndGet(int i, E x, BinaryOperator accumulatorFunction)": {
        "memory read": true,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": false,
        "computation upon memory": true
    },
    "E get(int i)": {
        "memory read": true,
        "memory write": false,
        "deletion upon memory": false,
        "insertion upon memory": false,
        "computation upon memory": false
    },
    "boolean compareAndSet(int i, E expect, E update)": {
        "memory read": true,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": false,
        "computation upon memory": false
    },
    "E getAndAccumulate(int i, E x, BinaryOperator accumulatorFunction)": {
        "memory read": true,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": false,
        "computation upon memory": true
    },
    "void set(int i, E newValue)": {
        "memory read": false,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": false,
        "computation upon memory": false
    },
    "boolean weakCompareAndSet(int i, E expect, E update)": {
        "memory read": true,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": false,
        "computation upon memory": false
    },
    "E getAndSet(int i, E newValue)": {
        "memory read": true,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": true,
        "computation upon memory": false
    },
    "void lazySet(int i, E newValue)": {
        "memory read": false,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": true,
        "computation upon memory": false
    }
}