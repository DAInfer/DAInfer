{
    "String getProperty(String key)": {
        "return type": "String",
        "method name": "getProperty",
        "parameters": [
            "String"
        ]
    },
    "String getProperty(String key, String defaultValue)": {
        "return type": "String",
        "method name": "getProperty",
        "parameters": [
            "String",
            "String"
        ]
    },
    "void list(PrintStream out)": {
        "return type": "void",
        "method name": "list",
        "parameters": [
            "PrintStream"
        ]
    },
    "void list(PrintWriter out)": {
        "return type": "void",
        "method name": "list",
        "parameters": [
            "PrintWriter"
        ]
    },
    "void load(InputStream inStream)": {
        "return type": "void",
        "method name": "load",
        "parameters": [
            "InputStream"
        ]
    },
    "void load(Reader reader)": {
        "return type": "void",
        "method name": "load",
        "parameters": [
            "Reader"
        ]
    },
    "void loadFromXML(InputStream in)": {
        "return type": "void",
        "method name": "loadFromXML",
        "parameters": [
            "InputStream"
        ]
    },
    "Enumeration propertyNames()": {
        "return type": "Enumeration",
        "method name": "propertyNames",
        "parameters": []
    },
    "Object setProperty(String key, String value)": {
        "return type": "Object",
        "method name": "setProperty",
        "parameters": [
            "String",
            "String"
        ]
    },
    "void store(OutputStream out, String comments)": {
        "return type": "void",
        "method name": "store",
        "parameters": [
            "OutputStream",
            "String"
        ]
    },
    "void store(Writer writer, String comments)": {
        "return type": "void",
        "method name": "store",
        "parameters": [
            "Writer",
            "String"
        ]
    },
    "void storeToXML(OutputStream os, String comment)": {
        "return type": "void",
        "method name": "storeToXML",
        "parameters": [
            "OutputStream",
            "String"
        ]
    },
    "void storeToXML(OutputStream os, String comment, String encoding)": {
        "return type": "void",
        "method name": "storeToXML",
        "parameters": [
            "OutputStream",
            "String",
            "String"
        ]
    },
    "Set stringPropertyNames()": {
        "return type": "Set",
        "method name": "stringPropertyNames",
        "parameters": []
    },
    "void clear()": {
        "return type": "void",
        "method name": "clear",
        "parameters": []
    },
    "Object clone()": {
        "return type": "Object",
        "method name": "clone",
        "parameters": []
    },
    "V compute(K key, BiFunction remappingFunction)": {
        "return type": "V",
        "method name": "compute",
        "parameters": [
            "K",
            "BiFunction"
        ]
    },
    "V computeIfAbsent(K key, Function mappingFunction)": {
        "return type": "V",
        "method name": "computeIfAbsent",
        "parameters": [
            "K",
            "Function"
        ]
    },
    "V computeIfPresent(K key, BiFunction remappingFunction)": {
        "return type": "V",
        "method name": "computeIfPresent",
        "parameters": [
            "K",
            "BiFunction"
        ]
    },
    "boolean contains(Object value)": {
        "return type": "boolean",
        "method name": "contains",
        "parameters": [
            "Object"
        ]
    },
    "boolean containsKey(Object key)": {
        "return type": "boolean",
        "method name": "containsKey",
        "parameters": [
            "Object"
        ]
    },
    "boolean containsValue(Object value)": {
        "return type": "boolean",
        "method name": "containsValue",
        "parameters": [
            "Object"
        ]
    },
    "Enumeration elements()": {
        "return type": "Enumeration",
        "method name": "elements",
        "parameters": []
    },
    "Set entrySet()": {
        "return type": "Set",
        "method name": "entrySet",
        "parameters": []
    },
    "boolean equals(Object o)": {
        "return type": "boolean",
        "method name": "equals",
        "parameters": [
            "Object"
        ]
    },
    "void forEach(BiConsumer action)": {
        "return type": "void",
        "method name": "forEach",
        "parameters": [
            "BiConsumer"
        ]
    },
    "V get(Object key)": {
        "return type": "V",
        "method name": "get",
        "parameters": [
            "Object"
        ]
    },
    "V getOrDefault(Object key, V defaultValue)": {
        "return type": "V",
        "method name": "getOrDefault",
        "parameters": [
            "Object",
            "V"
        ]
    },
    "int hashCode()": {
        "return type": "int",
        "method name": "hashCode",
        "parameters": []
    },
    "boolean isEmpty()": {
        "return type": "boolean",
        "method name": "isEmpty",
        "parameters": []
    },
    "Enumeration keys()": {
        "return type": "Enumeration",
        "method name": "keys",
        "parameters": []
    },
    "Set keySet()": {
        "return type": "Set",
        "method name": "keySet",
        "parameters": []
    },
    "V merge(K key, V value, BiFunction remappingFunction)": {
        "return type": "V",
        "method name": "merge",
        "parameters": [
            "K",
            "V",
            "BiFunction"
        ]
    },
    "V put(K key, V value)": {
        "return type": "V",
        "method name": "put",
        "parameters": [
            "K",
            "V"
        ]
    },
    "void putAll(Map t)": {
        "return type": "void",
        "method name": "putAll",
        "parameters": [
            "Map"
        ]
    },
    "V putIfAbsent(K key, V value)": {
        "return type": "V",
        "method name": "putIfAbsent",
        "parameters": [
            "K",
            "V"
        ]
    },
    "void rehash()": {
        "return type": "void",
        "method name": "rehash",
        "parameters": []
    },
    "V remove(Object key)": {
        "return type": "V",
        "method name": "remove",
        "parameters": [
            "Object"
        ]
    },
    "boolean remove(Object key, Object value)": {
        "return type": "boolean",
        "method name": "remove",
        "parameters": [
            "Object",
            "Object"
        ]
    },
    "V replace(K key, V value)": {
        "return type": "V",
        "method name": "replace",
        "parameters": [
            "K",
            "V"
        ]
    },
    "boolean replace(K key, V oldValue, V newValue)": {
        "return type": "boolean",
        "method name": "replace",
        "parameters": [
            "K",
            "V",
            "V"
        ]
    },
    "void replaceAll(BiFunction function)": {
        "return type": "void",
        "method name": "replaceAll",
        "parameters": [
            "BiFunction"
        ]
    },
    "int size()": {
        "return type": "int",
        "method name": "size",
        "parameters": []
    },
    "String toString()": {
        "return type": "String",
        "method name": "toString",
        "parameters": []
    },
    "Collection values()": {
        "return type": "Collection",
        "method name": "values",
        "parameters": []
    },
    "void putAll(Map m)": {
        "return type": "void",
        "method name": "putAll",
        "parameters": [
            "Map"
        ]
    }
}