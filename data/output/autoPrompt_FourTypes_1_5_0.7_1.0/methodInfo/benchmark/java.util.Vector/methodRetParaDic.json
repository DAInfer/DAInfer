{
    "boolean add(E e)": {
        "return type": "boolean",
        "method name": "add",
        "parameters": [
            "E"
        ]
    },
    "void add(int index, E element)": {
        "return type": "void",
        "method name": "add",
        "parameters": [
            "int",
            "E"
        ]
    },
    "boolean addAll(Collection c)": {
        "return type": "boolean",
        "method name": "addAll",
        "parameters": [
            "Collection"
        ]
    },
    "boolean addAll(int index, Collection c)": {
        "return type": "boolean",
        "method name": "addAll",
        "parameters": [
            "int",
            "Collection"
        ]
    },
    "void addElement(E obj)": {
        "return type": "void",
        "method name": "addElement",
        "parameters": [
            "E"
        ]
    },
    "int capacity()": {
        "return type": "int",
        "method name": "capacity",
        "parameters": []
    },
    "void clear()": {
        "return type": "void",
        "method name": "clear",
        "parameters": []
    },
    "Object clone()": {
        "return type": "Object",
        "method name": "clone",
        "parameters": []
    },
    "boolean contains(Object o)": {
        "return type": "boolean",
        "method name": "contains",
        "parameters": [
            "Object"
        ]
    },
    "boolean containsAll(Collection c)": {
        "return type": "boolean",
        "method name": "containsAll",
        "parameters": [
            "Collection"
        ]
    },
    "void copyInto(Object[] anArray)": {
        "return type": "void",
        "method name": "copyInto",
        "parameters": [
            "Object[]"
        ]
    },
    "E elementAt(int index)": {
        "return type": "E",
        "method name": "elementAt",
        "parameters": [
            "int"
        ]
    },
    "Enumeration elements()": {
        "return type": "Enumeration",
        "method name": "elements",
        "parameters": []
    },
    "void ensureCapacity(int minCapacity)": {
        "return type": "void",
        "method name": "ensureCapacity",
        "parameters": [
            "int"
        ]
    },
    "boolean equals(Object o)": {
        "return type": "boolean",
        "method name": "equals",
        "parameters": [
            "Object"
        ]
    },
    "E firstElement()": {
        "return type": "E",
        "method name": "firstElement",
        "parameters": []
    },
    "void forEach(Consumer action)": {
        "return type": "void",
        "method name": "forEach",
        "parameters": [
            "Consumer"
        ]
    },
    "E get(int index)": {
        "return type": "E",
        "method name": "get",
        "parameters": [
            "int"
        ]
    },
    "int hashCode()": {
        "return type": "int",
        "method name": "hashCode",
        "parameters": []
    },
    "int indexOf(Object o)": {
        "return type": "int",
        "method name": "indexOf",
        "parameters": [
            "Object"
        ]
    },
    "int indexOf(Object o, int index)": {
        "return type": "int",
        "method name": "indexOf",
        "parameters": [
            "Object",
            "int"
        ]
    },
    "void insertElementAt(E obj, int index)": {
        "return type": "void",
        "method name": "insertElementAt",
        "parameters": [
            "E",
            "int"
        ]
    },
    "boolean isEmpty()": {
        "return type": "boolean",
        "method name": "isEmpty",
        "parameters": []
    },
    "Iterator iterator()": {
        "return type": "Iterator",
        "method name": "iterator",
        "parameters": []
    },
    "E lastElement()": {
        "return type": "E",
        "method name": "lastElement",
        "parameters": []
    },
    "int lastIndexOf(Object o)": {
        "return type": "int",
        "method name": "lastIndexOf",
        "parameters": [
            "Object"
        ]
    },
    "int lastIndexOf(Object o, int index)": {
        "return type": "int",
        "method name": "lastIndexOf",
        "parameters": [
            "Object",
            "int"
        ]
    },
    "ListIterator listIterator()": {
        "return type": "ListIterator",
        "method name": "listIterator",
        "parameters": []
    },
    "ListIterator listIterator(int index)": {
        "return type": "ListIterator",
        "method name": "listIterator",
        "parameters": [
            "int"
        ]
    },
    "E remove(int index)": {
        "return type": "E",
        "method name": "remove",
        "parameters": [
            "int"
        ]
    },
    "boolean remove(Object o)": {
        "return type": "boolean",
        "method name": "remove",
        "parameters": [
            "Object"
        ]
    },
    "boolean removeAll(Collection c)": {
        "return type": "boolean",
        "method name": "removeAll",
        "parameters": [
            "Collection"
        ]
    },
    "void removeAllElements()": {
        "return type": "void",
        "method name": "removeAllElements",
        "parameters": []
    },
    "boolean removeElement(Object obj)": {
        "return type": "boolean",
        "method name": "removeElement",
        "parameters": [
            "Object"
        ]
    },
    "void removeElementAt(int index)": {
        "return type": "void",
        "method name": "removeElementAt",
        "parameters": [
            "int"
        ]
    },
    "boolean removeIf(Predicate filter)": {
        "return type": "boolean",
        "method name": "removeIf",
        "parameters": [
            "Predicate"
        ]
    },
    "void removeRange(int fromIndex, int toIndex)": {
        "return type": "void",
        "method name": "removeRange",
        "parameters": [
            "int",
            "int"
        ]
    },
    "void replaceAll(UnaryOperator operator)": {
        "return type": "void",
        "method name": "replaceAll",
        "parameters": [
            "UnaryOperator"
        ]
    },
    "boolean retainAll(Collection c)": {
        "return type": "boolean",
        "method name": "retainAll",
        "parameters": [
            "Collection"
        ]
    },
    "E set(int index, E element)": {
        "return type": "E",
        "method name": "set",
        "parameters": [
            "int",
            "E"
        ]
    },
    "void setElementAt(E obj, int index)": {
        "return type": "void",
        "method name": "setElementAt",
        "parameters": [
            "E",
            "int"
        ]
    },
    "void setSize(int newSize)": {
        "return type": "void",
        "method name": "setSize",
        "parameters": [
            "int"
        ]
    },
    "int size()": {
        "return type": "int",
        "method name": "size",
        "parameters": []
    },
    "void sort(Comparator c)": {
        "return type": "void",
        "method name": "sort",
        "parameters": [
            "Comparator"
        ]
    },
    "Spliterator spliterator()": {
        "return type": "Spliterator",
        "method name": "spliterator",
        "parameters": []
    },
    "List subList(int fromIndex, int toIndex)": {
        "return type": "List",
        "method name": "subList",
        "parameters": [
            "int",
            "int"
        ]
    },
    "Object[] toArray()": {
        "return type": "Object[]",
        "method name": "toArray",
        "parameters": []
    },
    "T[] toArray(T[] a)": {
        "return type": "T[]",
        "method name": "toArray",
        "parameters": [
            "T[]"
        ]
    },
    "String toString()": {
        "return type": "String",
        "method name": "toString",
        "parameters": []
    },
    "void trimToSize()": {
        "return type": "void",
        "method name": "trimToSize",
        "parameters": []
    },
    "Stream parallelStream()": {
        "return type": "Stream",
        "method name": "parallelStream",
        "parameters": []
    },
    "Stream stream()": {
        "return type": "Stream",
        "method name": "stream",
        "parameters": []
    }
}