{
    "typeConsistentSpecs": [
        [
            "boolean containsKey(Object key)",
            "Set keySet()"
        ],
        [
            "boolean remove(Object key, Object value)",
            "Collection values()"
        ],
        [
            "boolean containsValue(Object value)",
            "Set keySet()"
        ],
        [
            "Collection removeAll(Object key)",
            "Map asMap()"
        ],
        [
            "boolean containsEntry(Object key, Object value)",
            "Collection values()"
        ],
        [
            "Collection removeAll(Object key)",
            "Set keySet()"
        ],
        [
            "boolean remove(Object key, Object value)",
            "Multiset keys()"
        ],
        [
            "boolean remove(Object key, Object value)",
            "Collection entries()"
        ],
        [
            "boolean containsValue(Object value)",
            "Collection values()"
        ],
        [
            "boolean containsEntry(Object key, Object value)",
            "Multiset keys()"
        ],
        [
            "boolean containsKey(Object key)",
            "Collection values()"
        ],
        [
            "boolean remove(Object key, Object value)",
            "Collection get(K key)"
        ],
        [
            "boolean containsEntry(Object key, Object value)",
            "Collection entries()"
        ],
        [
            "boolean containsEntry(Object key, Object value)",
            "Collection get(K key)"
        ],
        [
            "Collection removeAll(Object key)",
            "Collection values()"
        ],
        [
            "boolean remove(Object key, Object value)",
            "Collection replaceValues(K key, Iterable values)"
        ],
        [
            "boolean containsEntry(Object key, Object value)",
            "Collection replaceValues(K key, Iterable values)"
        ],
        [
            "boolean containsValue(Object value)",
            "Multiset keys()"
        ],
        [
            "boolean remove(Object key, Object value)",
            "Collection removeAll(Object key)"
        ],
        [
            "boolean containsKey(Object key)",
            "Multiset keys()"
        ],
        [
            "boolean containsValue(Object value)",
            "Collection entries()"
        ],
        [
            "boolean containsKey(Object key)",
            "Collection entries()"
        ],
        [
            "boolean remove(Object key, Object value)",
            "Map asMap()"
        ],
        [
            "boolean containsEntry(Object key, Object value)",
            "Collection removeAll(Object key)"
        ],
        [
            "boolean containsValue(Object value)",
            "Collection get(K key)"
        ],
        [
            "boolean containsEntry(Object key, Object value)",
            "Map asMap()"
        ],
        [
            "boolean containsKey(Object key)",
            "Collection get(K key)"
        ],
        [
            "Collection removeAll(Object key)",
            "Multiset keys()"
        ],
        [
            "boolean remove(Object key, Object value)",
            "Set keySet()"
        ],
        [
            "Collection removeAll(Object key)",
            "Collection entries()"
        ],
        [
            "boolean containsValue(Object value)",
            "Collection replaceValues(K key, Iterable values)"
        ],
        [
            "boolean containsEntry(Object key, Object value)",
            "Set keySet()"
        ],
        [
            "boolean containsKey(Object key)",
            "Collection replaceValues(K key, Iterable values)"
        ],
        [
            "Collection removeAll(Object key)",
            "Collection get(K key)"
        ],
        [
            "boolean containsKey(Object key)",
            "Collection removeAll(Object key)"
        ],
        [
            "boolean containsValue(Object value)",
            "Collection removeAll(Object key)"
        ],
        [
            "boolean containsKey(Object key)",
            "Map asMap()"
        ],
        [
            "boolean containsValue(Object value)",
            "Map asMap()"
        ],
        [
            "Collection removeAll(Object key)",
            "Collection replaceValues(K key, Iterable values)"
        ]
    ]
}