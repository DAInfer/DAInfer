{
    "typeConsistentSpecs": [
        [
            "boolean weakCompareAndSet(V expect, V update)",
            "V accumulateAndGet(V x, BinaryOperator accumulatorFunction)"
        ],
        [
            "V getAndSet(V newValue)",
            "V getAndUpdate(UnaryOperator updateFunction)"
        ],
        [
            "boolean compareAndSet(V expect, V update)",
            "V updateAndGet(UnaryOperator updateFunction)"
        ],
        [
            "V getAndSet(V newValue)",
            "V accumulateAndGet(V x, BinaryOperator accumulatorFunction)"
        ],
        [
            "void set(V newValue)",
            "V get()"
        ],
        [
            "boolean weakCompareAndSet(V expect, V update)",
            "V get()"
        ],
        [
            "boolean compareAndSet(V expect, V update)",
            "V getAndAccumulate(V x, BinaryOperator accumulatorFunction)"
        ],
        [
            "V getAndSet(V newValue)",
            "V get()"
        ],
        [
            "V accumulateAndGet(V x, BinaryOperator accumulatorFunction)",
            "V getAndSet(V newValue)"
        ],
        [
            "V accumulateAndGet(V x, BinaryOperator accumulatorFunction)",
            "V getAndUpdate(UnaryOperator updateFunction)"
        ],
        [
            "void set(V newValue)",
            "V updateAndGet(UnaryOperator updateFunction)"
        ],
        [
            "boolean weakCompareAndSet(V expect, V update)",
            "V updateAndGet(UnaryOperator updateFunction)"
        ],
        [
            "V accumulateAndGet(V x, BinaryOperator accumulatorFunction)",
            "V get()"
        ],
        [
            "V getAndAccumulate(V x, BinaryOperator accumulatorFunction)",
            "V getAndSet(V newValue)"
        ],
        [
            "void set(V newValue)",
            "V getAndAccumulate(V x, BinaryOperator accumulatorFunction)"
        ],
        [
            "V getAndSet(V newValue)",
            "V updateAndGet(UnaryOperator updateFunction)"
        ],
        [
            "boolean weakCompareAndSet(V expect, V update)",
            "V getAndAccumulate(V x, BinaryOperator accumulatorFunction)"
        ],
        [
            "V getAndAccumulate(V x, BinaryOperator accumulatorFunction)",
            "V getAndUpdate(UnaryOperator updateFunction)"
        ],
        [
            "void lazySet(V newValue)",
            "V getAndSet(V newValue)"
        ],
        [
            "V getAndAccumulate(V x, BinaryOperator accumulatorFunction)",
            "V accumulateAndGet(V x, BinaryOperator accumulatorFunction)"
        ],
        [
            "V getAndSet(V newValue)",
            "V getAndAccumulate(V x, BinaryOperator accumulatorFunction)"
        ],
        [
            "void lazySet(V newValue)",
            "V getAndUpdate(UnaryOperator updateFunction)"
        ],
        [
            "V getAndAccumulate(V x, BinaryOperator accumulatorFunction)",
            "V get()"
        ],
        [
            "void lazySet(V newValue)",
            "V accumulateAndGet(V x, BinaryOperator accumulatorFunction)"
        ],
        [
            "V accumulateAndGet(V x, BinaryOperator accumulatorFunction)",
            "V updateAndGet(UnaryOperator updateFunction)"
        ],
        [
            "void lazySet(V newValue)",
            "V get()"
        ],
        [
            "boolean compareAndSet(V expect, V update)",
            "V getAndSet(V newValue)"
        ],
        [
            "V accumulateAndGet(V x, BinaryOperator accumulatorFunction)",
            "V getAndAccumulate(V x, BinaryOperator accumulatorFunction)"
        ],
        [
            "boolean compareAndSet(V expect, V update)",
            "V getAndUpdate(UnaryOperator updateFunction)"
        ],
        [
            "V getAndAccumulate(V x, BinaryOperator accumulatorFunction)",
            "V updateAndGet(UnaryOperator updateFunction)"
        ],
        [
            "boolean compareAndSet(V expect, V update)",
            "V accumulateAndGet(V x, BinaryOperator accumulatorFunction)"
        ],
        [
            "boolean compareAndSet(V expect, V update)",
            "V get()"
        ],
        [
            "void set(V newValue)",
            "V getAndSet(V newValue)"
        ],
        [
            "void lazySet(V newValue)",
            "V updateAndGet(UnaryOperator updateFunction)"
        ],
        [
            "boolean weakCompareAndSet(V expect, V update)",
            "V getAndSet(V newValue)"
        ],
        [
            "void set(V newValue)",
            "V getAndUpdate(UnaryOperator updateFunction)"
        ],
        [
            "void lazySet(V newValue)",
            "V getAndAccumulate(V x, BinaryOperator accumulatorFunction)"
        ],
        [
            "boolean weakCompareAndSet(V expect, V update)",
            "V getAndUpdate(UnaryOperator updateFunction)"
        ],
        [
            "void set(V newValue)",
            "V accumulateAndGet(V x, BinaryOperator accumulatorFunction)"
        ]
    ]
}