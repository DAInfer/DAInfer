{
    "V getOrDefault(Object key, V defaultValue)": {
        "memory read": true,
        "memory write": false,
        "deletion upon memory": false,
        "insertion upon memory": false
    },
    "Set keySet()": {
        "memory read": true,
        "memory write": false,
        "deletion upon memory": false,
        "insertion upon memory": false
    },
    "V putIfAbsent(K key, V value)": {
        "memory read": true,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": true
    },
    "ConcurrentHashMap.KeySetView keySet()": {
        "memory read": true,
        "memory write": false,
        "deletion upon memory": false,
        "insertion upon memory": false
    },
    "V remove(Object key)": {
        "memory read": true,
        "memory write": true,
        "deletion upon memory": true,
        "insertion upon memory": false
    },
    "V replace(K key, V value)": {
        "memory read": true,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": true
    },
    "boolean replace(K key, V oldValue, V newValue)": {
        "memory read": true,
        "memory write": true,
        "deletion upon memory": true,
        "insertion upon memory": false
    },
    "V computeIfAbsent(K key, Function mappingFunction)": {
        "memory read": true,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": true
    },
    "ConcurrentHashMap.KeySetView keySet(V mappedValue)": {
        "memory read": false,
        "memory write": false,
        "deletion upon memory": false,
        "insertion upon memory": true
    },
    "boolean remove(Object key, Object value)": {
        "memory read": true,
        "memory write": false,
        "deletion upon memory": true,
        "insertion upon memory": false
    },
    "V get(Object key)": {
        "memory read": true,
        "memory write": false,
        "deletion upon memory": false,
        "insertion upon memory": false
    },
    "boolean containsKey(Object key)": {
        "memory read": true,
        "memory write": false,
        "deletion upon memory": false,
        "insertion upon memory": false
    },
    "V merge(K key, V value, BiFunction remappingFunction)": {
        "memory read": false,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": true
    },
    "U reduce(long parallelismThreshold, BiFunction transformer, BiFunction reducer)": {
        "memory read": true,
        "memory write": true,
        "deletion upon memory": true,
        "insertion upon memory": false
    },
    "V computeIfPresent(K key, BiFunction remappingFunction)": {
        "memory read": true,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": true
    },
    "K reduceKeys(long parallelismThreshold, BiFunction reducer)": {
        "memory read": true,
        "memory write": false,
        "deletion upon memory": false,
        "insertion upon memory": false
    },
    "ConcurrentHashMap.KeySetView newKeySet(int initialCapacity)": {
        "memory read": false,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": true
    },
    "ConcurrentHashMap.KeySetView newKeySet()": {
        "memory read": false,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": true
    },
    "V compute(K key, BiFunction remappingFunction)": {
        "memory read": true,
        "memory write": false,
        "deletion upon memory": false,
        "insertion upon memory": true
    },
    "U reduceValues(long parallelismThreshold, Function transformer, BiFunction reducer)": {
        "memory read": true,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": false
    },
    "V put(K key, V value)": {
        "memory read": false,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": true
    },
    "V reduceValues(long parallelismThreshold, BiFunction reducer)": {
        "memory read": true,
        "memory write": false,
        "deletion upon memory": false,
        "insertion upon memory": false
    },
    "U search(long parallelismThreshold, BiFunction searchFunction)": {
        "memory read": true,
        "memory write": false,
        "deletion upon memory": false,
        "insertion upon memory": false
    },
    "U reduceKeys(long parallelismThreshold, Function transformer, BiFunction reducer)": {
        "memory read": true,
        "memory write": false,
        "deletion upon memory": true,
        "insertion upon memory": false
    },
    "U searchValues(long parallelismThreshold, Function searchFunction)": {
        "memory read": true,
        "memory write": false,
        "deletion upon memory": false,
        "insertion upon memory": false
    },
    "U searchKeys(long parallelismThreshold, Function searchFunction)": {
        "memory read": true,
        "memory write": false,
        "deletion upon memory": false,
        "insertion upon memory": false
    }
}