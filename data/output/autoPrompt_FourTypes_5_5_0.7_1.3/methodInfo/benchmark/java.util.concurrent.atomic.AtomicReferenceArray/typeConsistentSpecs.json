{
    "typeConsistentSpecs": [
        [
            "boolean weakCompareAndSet(int i, E expect, E update)",
            "E accumulateAndGet(int i, E x, BinaryOperator accumulatorFunction)"
        ],
        [
            "boolean weakCompareAndSet(int i, E expect, E update)",
            "E getAndSet(int i, E newValue)"
        ],
        [
            "E getAndAccumulate(int i, E x, BinaryOperator accumulatorFunction)",
            "E updateAndGet(int i, UnaryOperator updateFunction)"
        ],
        [
            "void set(int i, E newValue)",
            "E getAndSet(int i, E newValue)"
        ],
        [
            "E getAndSet(int i, E newValue)",
            "E getAndAccumulate(int i, E x, BinaryOperator accumulatorFunction)"
        ],
        [
            "E accumulateAndGet(int i, E x, BinaryOperator accumulatorFunction)",
            "E getAndAccumulate(int i, E x, BinaryOperator accumulatorFunction)"
        ],
        [
            "void set(int i, E newValue)",
            "E updateAndGet(int i, UnaryOperator updateFunction)"
        ],
        [
            "E getAndSet(int i, E newValue)",
            "E accumulateAndGet(int i, E x, BinaryOperator accumulatorFunction)"
        ],
        [
            "boolean weakCompareAndSet(int i, E expect, E update)",
            "E updateAndGet(int i, UnaryOperator updateFunction)"
        ],
        [
            "boolean compareAndSet(int i, E expect, E update)",
            "E getAndUpdate(int i, UnaryOperator updateFunction)"
        ],
        [
            "void lazySet(int i, E newValue)",
            "E getAndAccumulate(int i, E x, BinaryOperator accumulatorFunction)"
        ],
        [
            "E accumulateAndGet(int i, E x, BinaryOperator accumulatorFunction)",
            "E getAndSet(int i, E newValue)"
        ],
        [
            "E getAndSet(int i, E newValue)",
            "E updateAndGet(int i, UnaryOperator updateFunction)"
        ],
        [
            "void lazySet(int i, E newValue)",
            "E accumulateAndGet(int i, E x, BinaryOperator accumulatorFunction)"
        ],
        [
            "E accumulateAndGet(int i, E x, BinaryOperator accumulatorFunction)",
            "E updateAndGet(int i, UnaryOperator updateFunction)"
        ],
        [
            "boolean compareAndSet(int i, E expect, E update)",
            "E get(int i)"
        ],
        [
            "void lazySet(int i, E newValue)",
            "E getAndSet(int i, E newValue)"
        ],
        [
            "E getAndAccumulate(int i, E x, BinaryOperator accumulatorFunction)",
            "E getAndUpdate(int i, UnaryOperator updateFunction)"
        ],
        [
            "void lazySet(int i, E newValue)",
            "E updateAndGet(int i, UnaryOperator updateFunction)"
        ],
        [
            "E getAndAccumulate(int i, E x, BinaryOperator accumulatorFunction)",
            "E get(int i)"
        ],
        [
            "boolean weakCompareAndSet(int i, E expect, E update)",
            "E getAndUpdate(int i, UnaryOperator updateFunction)"
        ],
        [
            "void set(int i, E newValue)",
            "E getAndUpdate(int i, UnaryOperator updateFunction)"
        ],
        [
            "void set(int i, E newValue)",
            "E get(int i)"
        ],
        [
            "boolean weakCompareAndSet(int i, E expect, E update)",
            "E get(int i)"
        ],
        [
            "boolean compareAndSet(int i, E expect, E update)",
            "E getAndAccumulate(int i, E x, BinaryOperator accumulatorFunction)"
        ],
        [
            "E getAndSet(int i, E newValue)",
            "E getAndUpdate(int i, UnaryOperator updateFunction)"
        ],
        [
            "E accumulateAndGet(int i, E x, BinaryOperator accumulatorFunction)",
            "E getAndUpdate(int i, UnaryOperator updateFunction)"
        ],
        [
            "boolean compareAndSet(int i, E expect, E update)",
            "E accumulateAndGet(int i, E x, BinaryOperator accumulatorFunction)"
        ],
        [
            "boolean compareAndSet(int i, E expect, E update)",
            "E getAndSet(int i, E newValue)"
        ],
        [
            "E getAndSet(int i, E newValue)",
            "E get(int i)"
        ],
        [
            "E accumulateAndGet(int i, E x, BinaryOperator accumulatorFunction)",
            "E get(int i)"
        ],
        [
            "boolean compareAndSet(int i, E expect, E update)",
            "E updateAndGet(int i, UnaryOperator updateFunction)"
        ],
        [
            "void lazySet(int i, E newValue)",
            "E getAndUpdate(int i, UnaryOperator updateFunction)"
        ],
        [
            "E getAndAccumulate(int i, E x, BinaryOperator accumulatorFunction)",
            "E accumulateAndGet(int i, E x, BinaryOperator accumulatorFunction)"
        ],
        [
            "void set(int i, E newValue)",
            "E getAndAccumulate(int i, E x, BinaryOperator accumulatorFunction)"
        ],
        [
            "boolean weakCompareAndSet(int i, E expect, E update)",
            "E getAndAccumulate(int i, E x, BinaryOperator accumulatorFunction)"
        ],
        [
            "void lazySet(int i, E newValue)",
            "E get(int i)"
        ],
        [
            "E getAndAccumulate(int i, E x, BinaryOperator accumulatorFunction)",
            "E getAndSet(int i, E newValue)"
        ],
        [
            "void set(int i, E newValue)",
            "E accumulateAndGet(int i, E x, BinaryOperator accumulatorFunction)"
        ]
    ]
}