{
    "void replaceChildren(Object parent, int startChildIndex, int stopChildIndex, Object t)": {
        "memory read": true,
        "memory write": true,
        "deletion upon memory": true,
        "insertion upon memory": true,
        "computation upon memory": true
    },
    "Object create(int tokenType, String text)": {
        "memory read": false,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": true,
        "computation upon memory": true
    },
    "void setTokenBoundaries(Object t, Token startToken, Token stopToken)": {
        "memory read": false,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": true,
        "computation upon memory": true
    },
    "Token getToken(Object t)": {
        "memory read": true,
        "memory write": false,
        "deletion upon memory": false,
        "insertion upon memory": false,
        "computation upon memory": false
    },
    "void setText(Object t, String text)": {
        "memory read": false,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": false,
        "computation upon memory": false
    },
    "Object create(int tokenType, Token fromToken, String text)": {
        "memory read": false,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": true,
        "computation upon memory": false
    },
    "void addChild(Object t, Object child)": {
        "memory read": false,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": true,
        "computation upon memory": false
    },
    "Object create(int tokenType, Token fromToken)": {
        "memory read": false,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": true,
        "computation upon memory": true
    },
    "Object becomeRoot(Object newRoot, Object oldRoot)": {
        "memory read": false,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": true,
        "computation upon memory": true
    },
    "Object create(Token payload)": {
        "memory read": false,
        "memory write": false,
        "deletion upon memory": false,
        "insertion upon memory": true,
        "computation upon memory": true
    },
    "Object becomeRoot(Token newRoot, Object oldRoot)": {
        "memory read": false,
        "memory write": true,
        "deletion upon memory": true,
        "insertion upon memory": true,
        "computation upon memory": true
    },
    "Object errorNode(TokenStream input, Token start, Token stop, RecognitionException e)": {
        "memory read": false,
        "memory write": false,
        "deletion upon memory": true,
        "insertion upon memory": true,
        "computation upon memory": false
    },
    "void setChild(Object t, int i, Object child)": {
        "memory read": false,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": true,
        "computation upon memory": false
    },
    "Object getChild(Object t, int i)": {
        "memory read": true,
        "memory write": false,
        "deletion upon memory": false,
        "insertion upon memory": false,
        "computation upon memory": false
    },
    "void setParent(Object t, Object parent)": {
        "memory read": false,
        "memory write": true,
        "deletion upon memory": true,
        "insertion upon memory": false,
        "computation upon memory": false
    },
    "String getText(Object t)": {
        "memory read": true,
        "memory write": false,
        "deletion upon memory": false,
        "insertion upon memory": false,
        "computation upon memory": false
    },
    "Object getParent(Object t)": {
        "memory read": true,
        "memory write": false,
        "deletion upon memory": false,
        "insertion upon memory": false,
        "computation upon memory": false
    },
    "boolean isNil(Object tree)": {
        "memory read": true,
        "memory write": false,
        "deletion upon memory": false,
        "insertion upon memory": false,
        "computation upon memory": false
    },
    "Object nil()": {
        "memory read": false,
        "memory write": false,
        "deletion upon memory": false,
        "insertion upon memory": true,
        "computation upon memory": false
    }
}