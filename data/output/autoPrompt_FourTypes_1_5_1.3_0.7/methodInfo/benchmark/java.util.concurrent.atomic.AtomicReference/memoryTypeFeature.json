{
    "boolean weakCompareAndSet(V expect, V update)": {
        "memory read": true,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": false
    },
    "V getAndSet(V newValue)": {
        "memory read": true,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": false
    },
    "V accumulateAndGet(V x, BinaryOperator accumulatorFunction)": {
        "memory read": true,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": false
    },
    "V get()": {
        "memory read": true,
        "memory write": false,
        "deletion upon memory": false,
        "insertion upon memory": false
    },
    "void lazySet(V newValue)": {
        "memory read": false,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": false
    },
    "boolean compareAndSet(V expect, V update)": {
        "memory read": true,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": true
    },
    "V getAndUpdate(UnaryOperator updateFunction)": {
        "memory read": true,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": false
    },
    "V getAndAccumulate(V x, BinaryOperator accumulatorFunction)": {
        "memory read": true,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": false
    },
    "void set(V newValue)": {
        "memory read": false,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": false
    },
    "V updateAndGet(UnaryOperator updateFunction)": {
        "memory read": true,
        "memory write": true,
        "deletion upon memory": false,
        "insertion upon memory": false
    }
}