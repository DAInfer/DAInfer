{
    "Map asMap()": {
        "return type": "Map",
        "method name": "asMap",
        "parameters": []
    },
    "void clear()": {
        "return type": "void",
        "method name": "clear",
        "parameters": []
    },
    "boolean containsEntry(Object key, Object value)": {
        "return type": "boolean",
        "method name": "containsEntry",
        "parameters": [
            "Object",
            "Object"
        ]
    },
    "boolean containsKey(Object key)": {
        "return type": "boolean",
        "method name": "containsKey",
        "parameters": [
            "Object"
        ]
    },
    "boolean containsValue(Object value)": {
        "return type": "boolean",
        "method name": "containsValue",
        "parameters": [
            "Object"
        ]
    },
    "Collection entries()": {
        "return type": "Collection",
        "method name": "entries",
        "parameters": []
    },
    "boolean equals(Object obj)": {
        "return type": "boolean",
        "method name": "equals",
        "parameters": [
            "Object"
        ]
    },
    "Collection get(K key)": {
        "return type": "Collection",
        "method name": "get",
        "parameters": [
            "K"
        ]
    },
    "int hashCode()": {
        "return type": "int",
        "method name": "hashCode",
        "parameters": []
    },
    "boolean isEmpty()": {
        "return type": "boolean",
        "method name": "isEmpty",
        "parameters": []
    },
    "Multiset keys()": {
        "return type": "Multiset",
        "method name": "keys",
        "parameters": []
    },
    "Set keySet()": {
        "return type": "Set",
        "method name": "keySet",
        "parameters": []
    },
    "boolean put(K key, V value)": {
        "return type": "boolean",
        "method name": "put",
        "parameters": [
            "K",
            "V"
        ]
    },
    "boolean putAll(K key, Iterable values)": {
        "return type": "boolean",
        "method name": "putAll",
        "parameters": [
            "K",
            "Iterable"
        ]
    },
    "boolean putAll(Multimap multimap)": {
        "return type": "boolean",
        "method name": "putAll",
        "parameters": [
            "Multimap"
        ]
    },
    "boolean remove(Object key, Object value)": {
        "return type": "boolean",
        "method name": "remove",
        "parameters": [
            "Object",
            "Object"
        ]
    },
    "Collection removeAll(Object key)": {
        "return type": "Collection",
        "method name": "removeAll",
        "parameters": [
            "Object"
        ]
    },
    "Collection replaceValues(K key, Iterable values)": {
        "return type": "Collection",
        "method name": "replaceValues",
        "parameters": [
            "K",
            "Iterable"
        ]
    },
    "int size()": {
        "return type": "int",
        "method name": "size",
        "parameters": []
    },
    "Collection values()": {
        "return type": "Collection",
        "method name": "values",
        "parameters": []
    }
}