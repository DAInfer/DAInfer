{
    "JsonObject add(String name, boolean value)": {
        "return type": "JsonObject",
        "method name": "add",
        "parameters": [
            "String",
            "boolean"
        ]
    },
    "JsonObject add(String name, double value)": {
        "return type": "JsonObject",
        "method name": "add",
        "parameters": [
            "String",
            "double"
        ]
    },
    "JsonObject add(String name, float value)": {
        "return type": "JsonObject",
        "method name": "add",
        "parameters": [
            "String",
            "float"
        ]
    },
    "JsonObject add(String name, int value)": {
        "return type": "JsonObject",
        "method name": "add",
        "parameters": [
            "String",
            "int"
        ]
    },
    "JsonObject add(String name, JsonValue value)": {
        "return type": "JsonObject",
        "method name": "add",
        "parameters": [
            "String",
            "JsonValue"
        ]
    },
    "JsonObject add(String name, long value)": {
        "return type": "JsonObject",
        "method name": "add",
        "parameters": [
            "String",
            "long"
        ]
    },
    "JsonObject add(String name, String value)": {
        "return type": "JsonObject",
        "method name": "add",
        "parameters": [
            "String",
            "String"
        ]
    },
    "JsonObject asObject()": {
        "return type": "JsonObject",
        "method name": "asObject",
        "parameters": []
    },
    "boolean equals(Object obj)": {
        "return type": "boolean",
        "method name": "equals",
        "parameters": [
            "Object"
        ]
    },
    "JsonValue get(String name)": {
        "return type": "JsonValue",
        "method name": "get",
        "parameters": [
            "String"
        ]
    },
    "boolean getBoolean(String name, boolean defaultValue)": {
        "return type": "boolean",
        "method name": "getBoolean",
        "parameters": [
            "String",
            "boolean"
        ]
    },
    "double getDouble(String name, double defaultValue)": {
        "return type": "double",
        "method name": "getDouble",
        "parameters": [
            "String",
            "double"
        ]
    },
    "float getFloat(String name, float defaultValue)": {
        "return type": "float",
        "method name": "getFloat",
        "parameters": [
            "String",
            "float"
        ]
    },
    "int getInt(String name, int defaultValue)": {
        "return type": "int",
        "method name": "getInt",
        "parameters": [
            "String",
            "int"
        ]
    },
    "long getLong(String name, long defaultValue)": {
        "return type": "long",
        "method name": "getLong",
        "parameters": [
            "String",
            "long"
        ]
    },
    "String getString(String name, String defaultValue)": {
        "return type": "String",
        "method name": "getString",
        "parameters": [
            "String",
            "String"
        ]
    },
    "int hashCode()": {
        "return type": "int",
        "method name": "hashCode",
        "parameters": []
    },
    "boolean isEmpty()": {
        "return type": "boolean",
        "method name": "isEmpty",
        "parameters": []
    },
    "boolean isObject()": {
        "return type": "boolean",
        "method name": "isObject",
        "parameters": []
    },
    "Iterator iterator()": {
        "return type": "Iterator",
        "method name": "iterator",
        "parameters": []
    },
    "JsonObject merge(JsonObject object)": {
        "return type": "JsonObject",
        "method name": "merge",
        "parameters": [
            "JsonObject"
        ]
    },
    "List names()": {
        "return type": "List",
        "method name": "names",
        "parameters": []
    },
    "JsonObject remove(String name)": {
        "return type": "JsonObject",
        "method name": "remove",
        "parameters": [
            "String"
        ]
    },
    "JsonObject set(String name, boolean value)": {
        "return type": "JsonObject",
        "method name": "set",
        "parameters": [
            "String",
            "boolean"
        ]
    },
    "JsonObject set(String name, double value)": {
        "return type": "JsonObject",
        "method name": "set",
        "parameters": [
            "String",
            "double"
        ]
    },
    "JsonObject set(String name, float value)": {
        "return type": "JsonObject",
        "method name": "set",
        "parameters": [
            "String",
            "float"
        ]
    },
    "JsonObject set(String name, int value)": {
        "return type": "JsonObject",
        "method name": "set",
        "parameters": [
            "String",
            "int"
        ]
    },
    "JsonObject set(String name, JsonValue value)": {
        "return type": "JsonObject",
        "method name": "set",
        "parameters": [
            "String",
            "JsonValue"
        ]
    },
    "JsonObject set(String name, long value)": {
        "return type": "JsonObject",
        "method name": "set",
        "parameters": [
            "String",
            "long"
        ]
    },
    "JsonObject set(String name, String value)": {
        "return type": "JsonObject",
        "method name": "set",
        "parameters": [
            "String",
            "String"
        ]
    },
    "int size()": {
        "return type": "int",
        "method name": "size",
        "parameters": []
    },
    "JsonObject unmodifiableObject(JsonObject object)": {
        "return type": "JsonObject",
        "method name": "unmodifiableObject",
        "parameters": [
            "JsonObject"
        ]
    },
    "JsonArray asArray()": {
        "return type": "JsonArray",
        "method name": "asArray",
        "parameters": []
    },
    "boolean asBoolean()": {
        "return type": "boolean",
        "method name": "asBoolean",
        "parameters": []
    },
    "double asDouble()": {
        "return type": "double",
        "method name": "asDouble",
        "parameters": []
    },
    "float asFloat()": {
        "return type": "float",
        "method name": "asFloat",
        "parameters": []
    },
    "int asInt()": {
        "return type": "int",
        "method name": "asInt",
        "parameters": []
    },
    "long asLong()": {
        "return type": "long",
        "method name": "asLong",
        "parameters": []
    },
    "String asString()": {
        "return type": "String",
        "method name": "asString",
        "parameters": []
    },
    "boolean equals(Object object)": {
        "return type": "boolean",
        "method name": "equals",
        "parameters": [
            "Object"
        ]
    },
    "boolean isArray()": {
        "return type": "boolean",
        "method name": "isArray",
        "parameters": []
    },
    "boolean isBoolean()": {
        "return type": "boolean",
        "method name": "isBoolean",
        "parameters": []
    },
    "boolean isFalse()": {
        "return type": "boolean",
        "method name": "isFalse",
        "parameters": []
    },
    "boolean isNull()": {
        "return type": "boolean",
        "method name": "isNull",
        "parameters": []
    },
    "boolean isNumber()": {
        "return type": "boolean",
        "method name": "isNumber",
        "parameters": []
    },
    "boolean isString()": {
        "return type": "boolean",
        "method name": "isString",
        "parameters": []
    },
    "boolean isTrue()": {
        "return type": "boolean",
        "method name": "isTrue",
        "parameters": []
    },
    "String toString()": {
        "return type": "String",
        "method name": "toString",
        "parameters": []
    },
    "String toString(WriterConfig config)": {
        "return type": "String",
        "method name": "toString",
        "parameters": [
            "WriterConfig"
        ]
    },
    "void writeTo(Writer writer)": {
        "return type": "void",
        "method name": "writeTo",
        "parameters": [
            "Writer"
        ]
    },
    "void writeTo(Writer writer, WriterConfig config)": {
        "return type": "void",
        "method name": "writeTo",
        "parameters": [
            "Writer",
            "WriterConfig"
        ]
    }
}